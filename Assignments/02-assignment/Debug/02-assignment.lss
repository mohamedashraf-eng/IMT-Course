
02-assignment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004a2a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00004a2a  00004a9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000324c  00000000  00000000  00004aa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000de8  00000000  00000000  00007cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00008adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00008c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00008d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000a9d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000b8c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000c670  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000c7d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000ca5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000d22b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e2       	ldi	r30, 0x2A	; 42
      68:	fa e4       	ldi	r31, 0x4A	; 74
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 d5 24 	call	0x49aa	; 0x49aa <main>
      7a:	0c 94 13 25 	jmp	0x4a26	; 0x4a26 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 dc 24 	jmp	0x49b8	; 0x49b8 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 f8 24 	jmp	0x49f0	; 0x49f0 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 e8 24 	jmp	0x49d0	; 0x49d0 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 04 25 	jmp	0x4a08	; 0x4a08 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 e8 24 	jmp	0x49d0	; 0x49d0 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 04 25 	jmp	0x4a08	; 0x4a08 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 dc 24 	jmp	0x49b8	; 0x49b8 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 f8 24 	jmp	0x49f0	; 0x49f0 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 e8 24 	jmp	0x49d0	; 0x49d0 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 04 25 	jmp	0x4a08	; 0x4a08 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 e8 24 	jmp	0x49d0	; 0x49d0 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 04 25 	jmp	0x4a08	; 0x4a08 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 e8 24 	jmp	0x49d0	; 0x49d0 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 04 25 	jmp	0x4a08	; 0x4a08 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 ec 24 	jmp	0x49d8	; 0x49d8 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 08 25 	jmp	0x4a10	; 0x4a10 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <SYS_INIT>:
/**
 * @brief function to initialize the system.
 *
 */
void SYS_INIT(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <SYS_INIT+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <SYS_INIT+0x8>
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
	/* Setting the mode for used ports */
	REG_CLR(DDRA);
     b42:	ea e3       	ldi	r30, 0x3A	; 58
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	80 81       	ld	r24, Z
     b48:	ea e3       	ldi	r30, 0x3A	; 58
     b4a:	f0 e0       	ldi	r31, 0x00	; 0
     b4c:	10 82       	st	Z, r1
	REG_SET(PORTA); /* Enable input pull-up */
     b4e:	eb e3       	ldi	r30, 0x3B	; 59
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	80 81       	ld	r24, Z
     b54:	eb e3       	ldi	r30, 0x3B	; 59
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	8f ef       	ldi	r24, 0xFF	; 255
     b5a:	80 83       	st	Z, r24
	REG_SET(DDRD);
     b5c:	e1 e3       	ldi	r30, 0x31	; 49
     b5e:	f0 e0       	ldi	r31, 0x00	; 0
     b60:	80 81       	ld	r24, Z
     b62:	e1 e3       	ldi	r30, 0x31	; 49
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	8f ef       	ldi	r24, 0xFF	; 255
     b68:	80 83       	st	Z, r24
	REG_CLR(PORTD); /* Init as low */
     b6a:	e2 e3       	ldi	r30, 0x32	; 50
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	80 81       	ld	r24, Z
     b70:	e2 e3       	ldi	r30, 0x32	; 50
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	10 82       	st	Z, r1

}/** @end SYS_INIT*/
     b76:	0f 90       	pop	r0
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	cf 91       	pop	r28
     b80:	df 91       	pop	r29
     b82:	08 95       	ret

00000b84 <LED_CTRL>:
/**
 * @brief functino to control leds.
 *
 */
void LED_CTRL(cu8 LED, cu8 LED_STATE)
{
     b84:	df 93       	push	r29
     b86:	cf 93       	push	r28
     b88:	00 d0       	rcall	.+0      	; 0xb8a <LED_CTRL+0x6>
     b8a:	00 d0       	rcall	.+0      	; 0xb8c <LED_CTRL+0x8>
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	89 83       	std	Y+1, r24	; 0x01
     b92:	6a 83       	std	Y+2, r22	; 0x02
	switch(LED)
     b94:	89 81       	ldd	r24, Y+1	; 0x01
     b96:	28 2f       	mov	r18, r24
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	3c 83       	std	Y+4, r19	; 0x04
     b9c:	2b 83       	std	Y+3, r18	; 0x03
     b9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ba0:	9c 81       	ldd	r25, Y+4	; 0x04
     ba2:	83 30       	cpi	r24, 0x03	; 3
     ba4:	91 05       	cpc	r25, r1
     ba6:	a9 f1       	breq	.+106    	; 0xc12 <LED_CTRL+0x8e>
     ba8:	2b 81       	ldd	r18, Y+3	; 0x03
     baa:	3c 81       	ldd	r19, Y+4	; 0x04
     bac:	24 30       	cpi	r18, 0x04	; 4
     bae:	31 05       	cpc	r19, r1
     bb0:	7c f4       	brge	.+30     	; 0xbd0 <LED_CTRL+0x4c>
     bb2:	8b 81       	ldd	r24, Y+3	; 0x03
     bb4:	9c 81       	ldd	r25, Y+4	; 0x04
     bb6:	81 30       	cpi	r24, 0x01	; 1
     bb8:	91 05       	cpc	r25, r1
     bba:	19 f1       	breq	.+70     	; 0xc02 <LED_CTRL+0x7e>
     bbc:	2b 81       	ldd	r18, Y+3	; 0x03
     bbe:	3c 81       	ldd	r19, Y+4	; 0x04
     bc0:	22 30       	cpi	r18, 0x02	; 2
     bc2:	31 05       	cpc	r19, r1
     bc4:	14 f5       	brge	.+68     	; 0xc0a <LED_CTRL+0x86>
     bc6:	8b 81       	ldd	r24, Y+3	; 0x03
     bc8:	9c 81       	ldd	r25, Y+4	; 0x04
     bca:	00 97       	sbiw	r24, 0x00	; 0
     bcc:	b1 f0       	breq	.+44     	; 0xbfa <LED_CTRL+0x76>
     bce:	34 c0       	rjmp	.+104    	; 0xc38 <LED_CTRL+0xb4>
     bd0:	2b 81       	ldd	r18, Y+3	; 0x03
     bd2:	3c 81       	ldd	r19, Y+4	; 0x04
     bd4:	25 30       	cpi	r18, 0x05	; 5
     bd6:	31 05       	cpc	r19, r1
     bd8:	21 f1       	breq	.+72     	; 0xc22 <LED_CTRL+0x9e>
     bda:	8b 81       	ldd	r24, Y+3	; 0x03
     bdc:	9c 81       	ldd	r25, Y+4	; 0x04
     bde:	85 30       	cpi	r24, 0x05	; 5
     be0:	91 05       	cpc	r25, r1
     be2:	dc f0       	brlt	.+54     	; 0xc1a <LED_CTRL+0x96>
     be4:	2b 81       	ldd	r18, Y+3	; 0x03
     be6:	3c 81       	ldd	r19, Y+4	; 0x04
     be8:	26 30       	cpi	r18, 0x06	; 6
     bea:	31 05       	cpc	r19, r1
     bec:	f1 f0       	breq	.+60     	; 0xc2a <LED_CTRL+0xa6>
     bee:	8b 81       	ldd	r24, Y+3	; 0x03
     bf0:	9c 81       	ldd	r25, Y+4	; 0x04
     bf2:	87 30       	cpi	r24, 0x07	; 7
     bf4:	91 05       	cpc	r25, r1
     bf6:	e9 f0       	breq	.+58     	; 0xc32 <LED_CTRL+0xae>
     bf8:	1f c0       	rjmp	.+62     	; 0xc38 <LED_CTRL+0xb4>
	{
		case LED1: LED_1(LED_STATE);
     bfa:	8a 81       	ldd	r24, Y+2	; 0x02
     bfc:	0e 94 35 07 	call	0xe6a	; 0xe6a <LED_1>
     c00:	1b c0       	rjmp	.+54     	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED2: LED_2(LED_STATE);
     c02:	8a 81       	ldd	r24, Y+2	; 0x02
     c04:	0e 94 5f 07 	call	0xebe	; 0xebe <LED_2>
     c08:	17 c0       	rjmp	.+46     	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED3: LED_3(LED_STATE);
     c0a:	8a 81       	ldd	r24, Y+2	; 0x02
     c0c:	0e 94 89 07 	call	0xf12	; 0xf12 <LED_3>
     c10:	13 c0       	rjmp	.+38     	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED4: LED_4(LED_STATE);
     c12:	8a 81       	ldd	r24, Y+2	; 0x02
     c14:	0e 94 b3 07 	call	0xf66	; 0xf66 <LED_4>
     c18:	0f c0       	rjmp	.+30     	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED5: LED_5(LED_STATE);
     c1a:	8a 81       	ldd	r24, Y+2	; 0x02
     c1c:	0e 94 dd 07 	call	0xfba	; 0xfba <LED_5>
     c20:	0b c0       	rjmp	.+22     	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED6: LED_6(LED_STATE);
     c22:	8a 81       	ldd	r24, Y+2	; 0x02
     c24:	0e 94 07 08 	call	0x100e	; 0x100e <LED_6>
     c28:	07 c0       	rjmp	.+14     	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED7: LED_7(LED_STATE);
     c2a:	8a 81       	ldd	r24, Y+2	; 0x02
     c2c:	0e 94 31 08 	call	0x1062	; 0x1062 <LED_7>
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <LED_CTRL+0xb4>
			break;

		case LED8: LED_8(LED_STATE);
     c32:	8a 81       	ldd	r24, Y+2	; 0x02
     c34:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <LED_8>
			break;

		default: return;
	}//end switch.
}/** @end LED_CTRL */
     c38:	0f 90       	pop	r0
     c3a:	0f 90       	pop	r0
     c3c:	0f 90       	pop	r0
     c3e:	0f 90       	pop	r0
     c40:	cf 91       	pop	r28
     c42:	df 91       	pop	r29
     c44:	08 95       	ret

00000c46 <MODE_CTRL>:

/**
 * @brief function to switch between modes
 */
void MODE_CTRL(void)
{
     c46:	df 93       	push	r29
     c48:	cf 93       	push	r28
     c4a:	cd b7       	in	r28, 0x3d	; 61
     c4c:	de b7       	in	r29, 0x3e	; 62
	if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == OPENED) )
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     c54:	81 30       	cpi	r24, 0x01	; 1
     c56:	71 f4       	brne	.+28     	; 0xc74 <MODE_CTRL+0x2e>
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     c5e:	81 30       	cpi	r24, 0x01	; 1
     c60:	49 f4       	brne	.+18     	; 0xc74 <MODE_CTRL+0x2e>
     c62:	82 e0       	ldi	r24, 0x02	; 2
     c64:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     c68:	81 30       	cpi	r24, 0x01	; 1
     c6a:	21 f4       	brne	.+8      	; 0xc74 <MODE_CTRL+0x2e>
	{
		/* Flashing every 500ms */
		MODE(MODE1);
     c6c:	80 e0       	ldi	r24, 0x00	; 0
     c6e:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     c72:	84 c0       	rjmp	.+264    	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == CLOSED) )
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     c7a:	81 30       	cpi	r24, 0x01	; 1
     c7c:	71 f4       	brne	.+28     	; 0xc9a <MODE_CTRL+0x54>
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     c84:	81 30       	cpi	r24, 0x01	; 1
     c86:	49 f4       	brne	.+18     	; 0xc9a <MODE_CTRL+0x54>
     c88:	82 e0       	ldi	r24, 0x02	; 2
     c8a:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     c8e:	88 23       	and	r24, r24
     c90:	21 f4       	brne	.+8      	; 0xc9a <MODE_CTRL+0x54>
	{
		/* Shifting left every 250ms */
		MODE(MODE2);
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     c98:	71 c0       	rjmp	.+226    	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == OPENED) )
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     ca0:	81 30       	cpi	r24, 0x01	; 1
     ca2:	71 f4       	brne	.+28     	; 0xcc0 <MODE_CTRL+0x7a>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     caa:	88 23       	and	r24, r24
     cac:	49 f4       	brne	.+18     	; 0xcc0 <MODE_CTRL+0x7a>
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     cb4:	81 30       	cpi	r24, 0x01	; 1
     cb6:	21 f4       	brne	.+8      	; 0xcc0 <MODE_CTRL+0x7a>
	{
		/* Shifting right every 250ms */
		MODE(MODE3);
     cb8:	82 e0       	ldi	r24, 0x02	; 2
     cba:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     cbe:	5e c0       	rjmp	.+188    	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == CLOSED) )
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     cc6:	81 30       	cpi	r24, 0x01	; 1
     cc8:	71 f4       	brne	.+28     	; 0xce6 <MODE_CTRL+0xa0>
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     cd0:	88 23       	and	r24, r24
     cd2:	49 f4       	brne	.+18     	; 0xce6 <MODE_CTRL+0xa0>
     cd4:	82 e0       	ldi	r24, 0x02	; 2
     cd6:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     cda:	88 23       	and	r24, r24
     cdc:	21 f4       	brne	.+8      	; 0xce6 <MODE_CTRL+0xa0>
	{
		/* 2-Leds Converging every 300ms */
		MODE(MODE4);
     cde:	83 e0       	ldi	r24, 0x03	; 3
     ce0:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     ce4:	4b c0       	rjmp	.+150    	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == OPENED) )
     ce6:	80 e0       	ldi	r24, 0x00	; 0
     ce8:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     cec:	88 23       	and	r24, r24
     cee:	71 f4       	brne	.+28     	; 0xd0c <MODE_CTRL+0xc6>
     cf0:	81 e0       	ldi	r24, 0x01	; 1
     cf2:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	49 f4       	brne	.+18     	; 0xd0c <MODE_CTRL+0xc6>
     cfa:	82 e0       	ldi	r24, 0x02	; 2
     cfc:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d00:	81 30       	cpi	r24, 0x01	; 1
     d02:	21 f4       	brne	.+8      	; 0xd0c <MODE_CTRL+0xc6>
	{
		/* 2-Leds Diverging every 300ms */
		MODE(MODE5);
     d04:	84 e0       	ldi	r24, 0x04	; 4
     d06:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     d0a:	38 c0       	rjmp	.+112    	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == CLOSED) )
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d12:	88 23       	and	r24, r24
     d14:	71 f4       	brne	.+28     	; 0xd32 <MODE_CTRL+0xec>
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d1c:	81 30       	cpi	r24, 0x01	; 1
     d1e:	49 f4       	brne	.+18     	; 0xd32 <MODE_CTRL+0xec>
     d20:	82 e0       	ldi	r24, 0x02	; 2
     d22:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d26:	88 23       	and	r24, r24
     d28:	21 f4       	brne	.+8      	; 0xd32 <MODE_CTRL+0xec>
	{
		/* Ping Pong effect every 250ms */
		MODE(MODE6);
     d2a:	85 e0       	ldi	r24, 0x05	; 5
     d2c:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     d30:	25 c0       	rjmp	.+74     	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == OPENED) )
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d38:	88 23       	and	r24, r24
     d3a:	71 f4       	brne	.+28     	; 0xd58 <MODE_CTRL+0x112>
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d42:	88 23       	and	r24, r24
     d44:	49 f4       	brne	.+18     	; 0xd58 <MODE_CTRL+0x112>
     d46:	82 e0       	ldi	r24, 0x02	; 2
     d48:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d4c:	81 30       	cpi	r24, 0x01	; 1
     d4e:	21 f4       	brne	.+8      	; 0xd58 <MODE_CTRL+0x112>
	{
		/* Snake effect every 300ms */
		MODE(MODE7);
     d50:	86 e0       	ldi	r24, 0x06	; 6
     d52:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
     d56:	12 c0       	rjmp	.+36     	; 0xd7c <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == CLOSED) )
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d5e:	88 23       	and	r24, r24
     d60:	69 f4       	brne	.+26     	; 0xd7c <MODE_CTRL+0x136>
     d62:	81 e0       	ldi	r24, 0x01	; 1
     d64:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d68:	88 23       	and	r24, r24
     d6a:	41 f4       	brne	.+16     	; 0xd7c <MODE_CTRL+0x136>
     d6c:	82 e0       	ldi	r24, 0x02	; 2
     d6e:	0e 94 c1 06 	call	0xd82	; 0xd82 <SW_READ>
     d72:	88 23       	and	r24, r24
     d74:	19 f4       	brne	.+6      	; 0xd7c <MODE_CTRL+0x136>
	{
		/* 2-Leds Converging/Diverging every 300ms */
		MODE(MODE8);
     d76:	87 e0       	ldi	r24, 0x07	; 7
     d78:	0e 94 7e 24 	call	0x48fc	; 0x48fc <MODE>
	}
	else;
}/** @end MODE_CTRL */
     d7c:	cf 91       	pop	r28
     d7e:	df 91       	pop	r29
     d80:	08 95       	ret

00000d82 <SW_READ>:
/**
 * @brief function to read switches
 *
 */
static cu8 SW_READ(cu8 SW)
{
     d82:	df 93       	push	r29
     d84:	cf 93       	push	r28
     d86:	cd b7       	in	r28, 0x3d	; 61
     d88:	de b7       	in	r29, 0x3e	; 62
     d8a:	2b 97       	sbiw	r28, 0x0b	; 11
     d8c:	0f b6       	in	r0, 0x3f	; 63
     d8e:	f8 94       	cli
     d90:	de bf       	out	0x3e, r29	; 62
     d92:	0f be       	out	0x3f, r0	; 63
     d94:	cd bf       	out	0x3d, r28	; 61
     d96:	89 83       	std	Y+1, r24	; 0x01
	switch(SW)
     d98:	89 81       	ldd	r24, Y+1	; 0x01
     d9a:	28 2f       	mov	r18, r24
     d9c:	30 e0       	ldi	r19, 0x00	; 0
     d9e:	3b 87       	std	Y+11, r19	; 0x0b
     da0:	2a 87       	std	Y+10, r18	; 0x0a
     da2:	8a 85       	ldd	r24, Y+10	; 0x0a
     da4:	9b 85       	ldd	r25, Y+11	; 0x0b
     da6:	83 30       	cpi	r24, 0x03	; 3
     da8:	91 05       	cpc	r25, r1
     daa:	d1 f1       	breq	.+116    	; 0xe20 <SW_READ+0x9e>
     dac:	2a 85       	ldd	r18, Y+10	; 0x0a
     dae:	3b 85       	ldd	r19, Y+11	; 0x0b
     db0:	24 30       	cpi	r18, 0x04	; 4
     db2:	31 05       	cpc	r19, r1
     db4:	7c f4       	brge	.+30     	; 0xdd4 <SW_READ+0x52>
     db6:	8a 85       	ldd	r24, Y+10	; 0x0a
     db8:	9b 85       	ldd	r25, Y+11	; 0x0b
     dba:	81 30       	cpi	r24, 0x01	; 1
     dbc:	91 05       	cpc	r25, r1
     dbe:	31 f1       	breq	.+76     	; 0xe0c <SW_READ+0x8a>
     dc0:	2a 85       	ldd	r18, Y+10	; 0x0a
     dc2:	3b 85       	ldd	r19, Y+11	; 0x0b
     dc4:	22 30       	cpi	r18, 0x02	; 2
     dc6:	31 05       	cpc	r19, r1
     dc8:	34 f5       	brge	.+76     	; 0xe16 <SW_READ+0x94>
     dca:	8a 85       	ldd	r24, Y+10	; 0x0a
     dcc:	9b 85       	ldd	r25, Y+11	; 0x0b
     dce:	00 97       	sbiw	r24, 0x00	; 0
     dd0:	b1 f0       	breq	.+44     	; 0xdfe <SW_READ+0x7c>
     dd2:	3f c0       	rjmp	.+126    	; 0xe52 <SW_READ+0xd0>
     dd4:	2a 85       	ldd	r18, Y+10	; 0x0a
     dd6:	3b 85       	ldd	r19, Y+11	; 0x0b
     dd8:	25 30       	cpi	r18, 0x05	; 5
     dda:	31 05       	cpc	r19, r1
     ddc:	59 f1       	breq	.+86     	; 0xe34 <SW_READ+0xb2>
     dde:	8a 85       	ldd	r24, Y+10	; 0x0a
     de0:	9b 85       	ldd	r25, Y+11	; 0x0b
     de2:	85 30       	cpi	r24, 0x05	; 5
     de4:	91 05       	cpc	r25, r1
     de6:	0c f1       	brlt	.+66     	; 0xe2a <SW_READ+0xa8>
     de8:	2a 85       	ldd	r18, Y+10	; 0x0a
     dea:	3b 85       	ldd	r19, Y+11	; 0x0b
     dec:	26 30       	cpi	r18, 0x06	; 6
     dee:	31 05       	cpc	r19, r1
     df0:	31 f1       	breq	.+76     	; 0xe3e <SW_READ+0xbc>
     df2:	8a 85       	ldd	r24, Y+10	; 0x0a
     df4:	9b 85       	ldd	r25, Y+11	; 0x0b
     df6:	87 30       	cpi	r24, 0x07	; 7
     df8:	91 05       	cpc	r25, r1
     dfa:	31 f1       	breq	.+76     	; 0xe48 <SW_READ+0xc6>
     dfc:	2a c0       	rjmp	.+84     	; 0xe52 <SW_READ+0xd0>
	{
		case SW1: 	return BIT_GET(PINA, PA0);
     dfe:	e9 e3       	ldi	r30, 0x39	; 57
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	98 2f       	mov	r25, r24
     e06:	91 70       	andi	r25, 0x01	; 1
     e08:	99 87       	std	Y+9, r25	; 0x09
     e0a:	25 c0       	rjmp	.+74     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW2: 	return BIT_GET(PINA, PA1);
     e0c:	e9 e3       	ldi	r30, 0x39	; 57
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	20 81       	ld	r18, Z
     e12:	19 86       	std	Y+9, r1	; 0x09
     e14:	20 c0       	rjmp	.+64     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW3: 	return BIT_GET(PINA, PA2);
     e16:	e9 e3       	ldi	r30, 0x39	; 57
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	30 81       	ld	r19, Z
     e1c:	19 86       	std	Y+9, r1	; 0x09
     e1e:	1b c0       	rjmp	.+54     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW4:	return BIT_GET(PINA, PA3);
     e20:	e9 e3       	ldi	r30, 0x39	; 57
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	80 81       	ld	r24, Z
     e26:	19 86       	std	Y+9, r1	; 0x09
     e28:	16 c0       	rjmp	.+44     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW5: 	return BIT_GET(PINA, PA4);
     e2a:	e9 e3       	ldi	r30, 0x39	; 57
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	90 81       	ld	r25, Z
     e30:	19 86       	std	Y+9, r1	; 0x09
     e32:	11 c0       	rjmp	.+34     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW6: 	return BIT_GET(PINA, PA5);
     e34:	e9 e3       	ldi	r30, 0x39	; 57
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	20 81       	ld	r18, Z
     e3a:	19 86       	std	Y+9, r1	; 0x09
     e3c:	0c c0       	rjmp	.+24     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW7: 	return BIT_GET(PINA, PA6);
     e3e:	e9 e3       	ldi	r30, 0x39	; 57
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	30 81       	ld	r19, Z
     e44:	19 86       	std	Y+9, r1	; 0x09
     e46:	07 c0       	rjmp	.+14     	; 0xe56 <SW_READ+0xd4>
			break;
		case SW8: 	return BIT_GET(PINA, PA7);
     e48:	e9 e3       	ldi	r30, 0x39	; 57
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	80 81       	ld	r24, Z
     e4e:	19 86       	std	Y+9, r1	; 0x09
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <SW_READ+0xd4>
			break;

		default: 	return -1;
     e52:	9f ef       	ldi	r25, 0xFF	; 255
     e54:	99 87       	std	Y+9, r25	; 0x09
     e56:	89 85       	ldd	r24, Y+9	; 0x09
	}//end switch.

	return -1;
}/** @end LED_CTRL */
     e58:	2b 96       	adiw	r28, 0x0b	; 11
     e5a:	0f b6       	in	r0, 0x3f	; 63
     e5c:	f8 94       	cli
     e5e:	de bf       	out	0x3e, r29	; 62
     e60:	0f be       	out	0x3f, r0	; 63
     e62:	cd bf       	out	0x3d, r28	; 61
     e64:	cf 91       	pop	r28
     e66:	df 91       	pop	r29
     e68:	08 95       	ret

00000e6a <LED_1>:
/** @defgroup sub functions */
/**
 * @brief function to control led 1
 */
static void LED_1(cu8 STATE)
{
     e6a:	df 93       	push	r29
     e6c:	cf 93       	push	r28
     e6e:	00 d0       	rcall	.+0      	; 0xe70 <LED_1+0x6>
     e70:	0f 92       	push	r0
     e72:	cd b7       	in	r28, 0x3d	; 61
     e74:	de b7       	in	r29, 0x3e	; 62
     e76:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     e78:	89 81       	ldd	r24, Y+1	; 0x01
     e7a:	28 2f       	mov	r18, r24
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	3b 83       	std	Y+3, r19	; 0x03
     e80:	2a 83       	std	Y+2, r18	; 0x02
     e82:	8a 81       	ldd	r24, Y+2	; 0x02
     e84:	9b 81       	ldd	r25, Y+3	; 0x03
     e86:	00 97       	sbiw	r24, 0x00	; 0
     e88:	69 f0       	breq	.+26     	; 0xea4 <LED_1+0x3a>
     e8a:	2a 81       	ldd	r18, Y+2	; 0x02
     e8c:	3b 81       	ldd	r19, Y+3	; 0x03
     e8e:	21 30       	cpi	r18, 0x01	; 1
     e90:	31 05       	cpc	r19, r1
     e92:	79 f4       	brne	.+30     	; 0xeb2 <LED_1+0x48>
	{
		case ON: BIT_SET(PORTA, PA0);
     e94:	ab e3       	ldi	r26, 0x3B	; 59
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	eb e3       	ldi	r30, 0x3B	; 59
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	81 60       	ori	r24, 0x01	; 1
     ea0:	8c 93       	st	X, r24
     ea2:	07 c0       	rjmp	.+14     	; 0xeb2 <LED_1+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA0);
     ea4:	ab e3       	ldi	r26, 0x3B	; 59
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	eb e3       	ldi	r30, 0x3B	; 59
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	8e 7f       	andi	r24, 0xFE	; 254
     eb0:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED1 */
     eb2:	0f 90       	pop	r0
     eb4:	0f 90       	pop	r0
     eb6:	0f 90       	pop	r0
     eb8:	cf 91       	pop	r28
     eba:	df 91       	pop	r29
     ebc:	08 95       	ret

00000ebe <LED_2>:

/**
 * @brief function to control led 2
 */
static void LED_2(cu8 STATE)
{
     ebe:	df 93       	push	r29
     ec0:	cf 93       	push	r28
     ec2:	00 d0       	rcall	.+0      	; 0xec4 <LED_2+0x6>
     ec4:	0f 92       	push	r0
     ec6:	cd b7       	in	r28, 0x3d	; 61
     ec8:	de b7       	in	r29, 0x3e	; 62
     eca:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     ecc:	89 81       	ldd	r24, Y+1	; 0x01
     ece:	28 2f       	mov	r18, r24
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	3b 83       	std	Y+3, r19	; 0x03
     ed4:	2a 83       	std	Y+2, r18	; 0x02
     ed6:	8a 81       	ldd	r24, Y+2	; 0x02
     ed8:	9b 81       	ldd	r25, Y+3	; 0x03
     eda:	00 97       	sbiw	r24, 0x00	; 0
     edc:	69 f0       	breq	.+26     	; 0xef8 <LED_2+0x3a>
     ede:	2a 81       	ldd	r18, Y+2	; 0x02
     ee0:	3b 81       	ldd	r19, Y+3	; 0x03
     ee2:	21 30       	cpi	r18, 0x01	; 1
     ee4:	31 05       	cpc	r19, r1
     ee6:	79 f4       	brne	.+30     	; 0xf06 <LED_2+0x48>
	{
		case ON: BIT_SET(PORTA, PA1);
     ee8:	ab e3       	ldi	r26, 0x3B	; 59
     eea:	b0 e0       	ldi	r27, 0x00	; 0
     eec:	eb e3       	ldi	r30, 0x3B	; 59
     eee:	f0 e0       	ldi	r31, 0x00	; 0
     ef0:	80 81       	ld	r24, Z
     ef2:	82 60       	ori	r24, 0x02	; 2
     ef4:	8c 93       	st	X, r24
     ef6:	07 c0       	rjmp	.+14     	; 0xf06 <LED_2+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA1);
     ef8:	ab e3       	ldi	r26, 0x3B	; 59
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	eb e3       	ldi	r30, 0x3B	; 59
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	8d 7f       	andi	r24, 0xFD	; 253
     f04:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED2 */
     f06:	0f 90       	pop	r0
     f08:	0f 90       	pop	r0
     f0a:	0f 90       	pop	r0
     f0c:	cf 91       	pop	r28
     f0e:	df 91       	pop	r29
     f10:	08 95       	ret

00000f12 <LED_3>:

/**
 * @brief function to control led 3
 */
static void LED_3(cu8 STATE)
{
     f12:	df 93       	push	r29
     f14:	cf 93       	push	r28
     f16:	00 d0       	rcall	.+0      	; 0xf18 <LED_3+0x6>
     f18:	0f 92       	push	r0
     f1a:	cd b7       	in	r28, 0x3d	; 61
     f1c:	de b7       	in	r29, 0x3e	; 62
     f1e:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     f20:	89 81       	ldd	r24, Y+1	; 0x01
     f22:	28 2f       	mov	r18, r24
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	3b 83       	std	Y+3, r19	; 0x03
     f28:	2a 83       	std	Y+2, r18	; 0x02
     f2a:	8a 81       	ldd	r24, Y+2	; 0x02
     f2c:	9b 81       	ldd	r25, Y+3	; 0x03
     f2e:	00 97       	sbiw	r24, 0x00	; 0
     f30:	69 f0       	breq	.+26     	; 0xf4c <LED_3+0x3a>
     f32:	2a 81       	ldd	r18, Y+2	; 0x02
     f34:	3b 81       	ldd	r19, Y+3	; 0x03
     f36:	21 30       	cpi	r18, 0x01	; 1
     f38:	31 05       	cpc	r19, r1
     f3a:	79 f4       	brne	.+30     	; 0xf5a <LED_3+0x48>
	{
		case ON: BIT_SET(PORTA, PA2);
     f3c:	ab e3       	ldi	r26, 0x3B	; 59
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
     f40:	eb e3       	ldi	r30, 0x3B	; 59
     f42:	f0 e0       	ldi	r31, 0x00	; 0
     f44:	80 81       	ld	r24, Z
     f46:	84 60       	ori	r24, 0x04	; 4
     f48:	8c 93       	st	X, r24
     f4a:	07 c0       	rjmp	.+14     	; 0xf5a <LED_3+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA2);
     f4c:	ab e3       	ldi	r26, 0x3B	; 59
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	eb e3       	ldi	r30, 0x3B	; 59
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	8b 7f       	andi	r24, 0xFB	; 251
     f58:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED3 */
     f5a:	0f 90       	pop	r0
     f5c:	0f 90       	pop	r0
     f5e:	0f 90       	pop	r0
     f60:	cf 91       	pop	r28
     f62:	df 91       	pop	r29
     f64:	08 95       	ret

00000f66 <LED_4>:

/**
 * @brief function to control led 4
 */
static void LED_4(cu8 STATE)
{
     f66:	df 93       	push	r29
     f68:	cf 93       	push	r28
     f6a:	00 d0       	rcall	.+0      	; 0xf6c <LED_4+0x6>
     f6c:	0f 92       	push	r0
     f6e:	cd b7       	in	r28, 0x3d	; 61
     f70:	de b7       	in	r29, 0x3e	; 62
     f72:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     f74:	89 81       	ldd	r24, Y+1	; 0x01
     f76:	28 2f       	mov	r18, r24
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	3b 83       	std	Y+3, r19	; 0x03
     f7c:	2a 83       	std	Y+2, r18	; 0x02
     f7e:	8a 81       	ldd	r24, Y+2	; 0x02
     f80:	9b 81       	ldd	r25, Y+3	; 0x03
     f82:	00 97       	sbiw	r24, 0x00	; 0
     f84:	69 f0       	breq	.+26     	; 0xfa0 <LED_4+0x3a>
     f86:	2a 81       	ldd	r18, Y+2	; 0x02
     f88:	3b 81       	ldd	r19, Y+3	; 0x03
     f8a:	21 30       	cpi	r18, 0x01	; 1
     f8c:	31 05       	cpc	r19, r1
     f8e:	79 f4       	brne	.+30     	; 0xfae <LED_4+0x48>
	{
		case ON: BIT_SET(PORTA, PA3);
     f90:	ab e3       	ldi	r26, 0x3B	; 59
     f92:	b0 e0       	ldi	r27, 0x00	; 0
     f94:	eb e3       	ldi	r30, 0x3B	; 59
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	80 81       	ld	r24, Z
     f9a:	88 60       	ori	r24, 0x08	; 8
     f9c:	8c 93       	st	X, r24
     f9e:	07 c0       	rjmp	.+14     	; 0xfae <LED_4+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA3);
     fa0:	ab e3       	ldi	r26, 0x3B	; 59
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	eb e3       	ldi	r30, 0x3B	; 59
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	87 7f       	andi	r24, 0xF7	; 247
     fac:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED4 */
     fae:	0f 90       	pop	r0
     fb0:	0f 90       	pop	r0
     fb2:	0f 90       	pop	r0
     fb4:	cf 91       	pop	r28
     fb6:	df 91       	pop	r29
     fb8:	08 95       	ret

00000fba <LED_5>:
/**
 * @brief function to control led 5
 */
static void LED_5(cu8 STATE)
{
     fba:	df 93       	push	r29
     fbc:	cf 93       	push	r28
     fbe:	00 d0       	rcall	.+0      	; 0xfc0 <LED_5+0x6>
     fc0:	0f 92       	push	r0
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
     fc6:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     fc8:	89 81       	ldd	r24, Y+1	; 0x01
     fca:	28 2f       	mov	r18, r24
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	3b 83       	std	Y+3, r19	; 0x03
     fd0:	2a 83       	std	Y+2, r18	; 0x02
     fd2:	8a 81       	ldd	r24, Y+2	; 0x02
     fd4:	9b 81       	ldd	r25, Y+3	; 0x03
     fd6:	00 97       	sbiw	r24, 0x00	; 0
     fd8:	69 f0       	breq	.+26     	; 0xff4 <LED_5+0x3a>
     fda:	2a 81       	ldd	r18, Y+2	; 0x02
     fdc:	3b 81       	ldd	r19, Y+3	; 0x03
     fde:	21 30       	cpi	r18, 0x01	; 1
     fe0:	31 05       	cpc	r19, r1
     fe2:	79 f4       	brne	.+30     	; 0x1002 <LED_5+0x48>
	{
		case ON: BIT_SET(PORTA, PA4);
     fe4:	ab e3       	ldi	r26, 0x3B	; 59
     fe6:	b0 e0       	ldi	r27, 0x00	; 0
     fe8:	eb e3       	ldi	r30, 0x3B	; 59
     fea:	f0 e0       	ldi	r31, 0x00	; 0
     fec:	80 81       	ld	r24, Z
     fee:	80 61       	ori	r24, 0x10	; 16
     ff0:	8c 93       	st	X, r24
     ff2:	07 c0       	rjmp	.+14     	; 0x1002 <LED_5+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA4);
     ff4:	ab e3       	ldi	r26, 0x3B	; 59
     ff6:	b0 e0       	ldi	r27, 0x00	; 0
     ff8:	eb e3       	ldi	r30, 0x3B	; 59
     ffa:	f0 e0       	ldi	r31, 0x00	; 0
     ffc:	80 81       	ld	r24, Z
     ffe:	8f 7e       	andi	r24, 0xEF	; 239
    1000:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED5 */
    1002:	0f 90       	pop	r0
    1004:	0f 90       	pop	r0
    1006:	0f 90       	pop	r0
    1008:	cf 91       	pop	r28
    100a:	df 91       	pop	r29
    100c:	08 95       	ret

0000100e <LED_6>:
/**
 * @brief function to control led 6
 */
static void LED_6(cu8 STATE)
{
    100e:	df 93       	push	r29
    1010:	cf 93       	push	r28
    1012:	00 d0       	rcall	.+0      	; 0x1014 <LED_6+0x6>
    1014:	0f 92       	push	r0
    1016:	cd b7       	in	r28, 0x3d	; 61
    1018:	de b7       	in	r29, 0x3e	; 62
    101a:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
    101c:	89 81       	ldd	r24, Y+1	; 0x01
    101e:	28 2f       	mov	r18, r24
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	3b 83       	std	Y+3, r19	; 0x03
    1024:	2a 83       	std	Y+2, r18	; 0x02
    1026:	8a 81       	ldd	r24, Y+2	; 0x02
    1028:	9b 81       	ldd	r25, Y+3	; 0x03
    102a:	00 97       	sbiw	r24, 0x00	; 0
    102c:	69 f0       	breq	.+26     	; 0x1048 <LED_6+0x3a>
    102e:	2a 81       	ldd	r18, Y+2	; 0x02
    1030:	3b 81       	ldd	r19, Y+3	; 0x03
    1032:	21 30       	cpi	r18, 0x01	; 1
    1034:	31 05       	cpc	r19, r1
    1036:	79 f4       	brne	.+30     	; 0x1056 <LED_6+0x48>
	{
		case ON: BIT_SET(PORTA, PA5);
    1038:	ab e3       	ldi	r26, 0x3B	; 59
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	eb e3       	ldi	r30, 0x3B	; 59
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	80 62       	ori	r24, 0x20	; 32
    1044:	8c 93       	st	X, r24
    1046:	07 c0       	rjmp	.+14     	; 0x1056 <LED_6+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA5);
    1048:	ab e3       	ldi	r26, 0x3B	; 59
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	eb e3       	ldi	r30, 0x3B	; 59
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	80 81       	ld	r24, Z
    1052:	8f 7d       	andi	r24, 0xDF	; 223
    1054:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED6 */
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	cf 91       	pop	r28
    105e:	df 91       	pop	r29
    1060:	08 95       	ret

00001062 <LED_7>:
/**
 * @brief function to control led 7
 */
static void LED_7(cu8 STATE)
{
    1062:	df 93       	push	r29
    1064:	cf 93       	push	r28
    1066:	00 d0       	rcall	.+0      	; 0x1068 <LED_7+0x6>
    1068:	0f 92       	push	r0
    106a:	cd b7       	in	r28, 0x3d	; 61
    106c:	de b7       	in	r29, 0x3e	; 62
    106e:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
    1070:	89 81       	ldd	r24, Y+1	; 0x01
    1072:	28 2f       	mov	r18, r24
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	3b 83       	std	Y+3, r19	; 0x03
    1078:	2a 83       	std	Y+2, r18	; 0x02
    107a:	8a 81       	ldd	r24, Y+2	; 0x02
    107c:	9b 81       	ldd	r25, Y+3	; 0x03
    107e:	00 97       	sbiw	r24, 0x00	; 0
    1080:	69 f0       	breq	.+26     	; 0x109c <LED_7+0x3a>
    1082:	2a 81       	ldd	r18, Y+2	; 0x02
    1084:	3b 81       	ldd	r19, Y+3	; 0x03
    1086:	21 30       	cpi	r18, 0x01	; 1
    1088:	31 05       	cpc	r19, r1
    108a:	79 f4       	brne	.+30     	; 0x10aa <LED_7+0x48>
	{
		case ON: BIT_SET(PORTA, PA6);
    108c:	ab e3       	ldi	r26, 0x3B	; 59
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	eb e3       	ldi	r30, 0x3B	; 59
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	80 64       	ori	r24, 0x40	; 64
    1098:	8c 93       	st	X, r24
    109a:	07 c0       	rjmp	.+14     	; 0x10aa <LED_7+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA6);
    109c:	ab e3       	ldi	r26, 0x3B	; 59
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	eb e3       	ldi	r30, 0x3B	; 59
    10a2:	f0 e0       	ldi	r31, 0x00	; 0
    10a4:	80 81       	ld	r24, Z
    10a6:	8f 7b       	andi	r24, 0xBF	; 191
    10a8:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED7 */
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	cf 91       	pop	r28
    10b2:	df 91       	pop	r29
    10b4:	08 95       	ret

000010b6 <LED_8>:
/**
 * @brief function to control led 8
 */
static void LED_8(cu8 STATE)
{
    10b6:	df 93       	push	r29
    10b8:	cf 93       	push	r28
    10ba:	00 d0       	rcall	.+0      	; 0x10bc <LED_8+0x6>
    10bc:	0f 92       	push	r0
    10be:	cd b7       	in	r28, 0x3d	; 61
    10c0:	de b7       	in	r29, 0x3e	; 62
    10c2:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
    10c4:	89 81       	ldd	r24, Y+1	; 0x01
    10c6:	28 2f       	mov	r18, r24
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	3b 83       	std	Y+3, r19	; 0x03
    10cc:	2a 83       	std	Y+2, r18	; 0x02
    10ce:	8a 81       	ldd	r24, Y+2	; 0x02
    10d0:	9b 81       	ldd	r25, Y+3	; 0x03
    10d2:	00 97       	sbiw	r24, 0x00	; 0
    10d4:	69 f0       	breq	.+26     	; 0x10f0 <LED_8+0x3a>
    10d6:	2a 81       	ldd	r18, Y+2	; 0x02
    10d8:	3b 81       	ldd	r19, Y+3	; 0x03
    10da:	21 30       	cpi	r18, 0x01	; 1
    10dc:	31 05       	cpc	r19, r1
    10de:	79 f4       	brne	.+30     	; 0x10fe <LED_8+0x48>
	{
		case ON: BIT_SET(PORTA, PA7);
    10e0:	ab e3       	ldi	r26, 0x3B	; 59
    10e2:	b0 e0       	ldi	r27, 0x00	; 0
    10e4:	eb e3       	ldi	r30, 0x3B	; 59
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	80 68       	ori	r24, 0x80	; 128
    10ec:	8c 93       	st	X, r24
    10ee:	07 c0       	rjmp	.+14     	; 0x10fe <LED_8+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA7);
    10f0:	ab e3       	ldi	r26, 0x3B	; 59
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	eb e3       	ldi	r30, 0x3B	; 59
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	80 81       	ld	r24, Z
    10fa:	8f 77       	andi	r24, 0x7F	; 127
    10fc:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED8 */
    10fe:	0f 90       	pop	r0
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	cf 91       	pop	r28
    1106:	df 91       	pop	r29
    1108:	08 95       	ret

0000110a <MODE_1>:

/**
 * @brief function to implement mode 1
 */
static void MODE_1(void)
{
    110a:	df 93       	push	r29
    110c:	cf 93       	push	r28
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	6e 97       	sbiw	r28, 0x1e	; 30
    1114:	0f b6       	in	r0, 0x3f	; 63
    1116:	f8 94       	cli
    1118:	de bf       	out	0x3e, r29	; 62
    111a:	0f be       	out	0x3f, r0	; 63
    111c:	cd bf       	out	0x3d, r28	; 61
	REG_SET(PORTA);
    111e:	eb e3       	ldi	r30, 0x3B	; 59
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	80 81       	ld	r24, Z
    1124:	eb e3       	ldi	r30, 0x3B	; 59
    1126:	f0 e0       	ldi	r31, 0x00	; 0
    1128:	8f ef       	ldi	r24, 0xFF	; 255
    112a:	80 83       	st	Z, r24
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	a8 e4       	ldi	r26, 0x48	; 72
    1132:	b2 e4       	ldi	r27, 0x42	; 66
    1134:	89 8f       	std	Y+25, r24	; 0x19
    1136:	9a 8f       	std	Y+26, r25	; 0x1a
    1138:	ab 8f       	std	Y+27, r26	; 0x1b
    113a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    113c:	69 8d       	ldd	r22, Y+25	; 0x19
    113e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1140:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1142:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1144:	20 e0       	ldi	r18, 0x00	; 0
    1146:	30 e0       	ldi	r19, 0x00	; 0
    1148:	4a ef       	ldi	r20, 0xFA	; 250
    114a:	54 e4       	ldi	r21, 0x44	; 68
    114c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1150:	dc 01       	movw	r26, r24
    1152:	cb 01       	movw	r24, r22
    1154:	8d 8b       	std	Y+21, r24	; 0x15
    1156:	9e 8b       	std	Y+22, r25	; 0x16
    1158:	af 8b       	std	Y+23, r26	; 0x17
    115a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    115c:	6d 89       	ldd	r22, Y+21	; 0x15
    115e:	7e 89       	ldd	r23, Y+22	; 0x16
    1160:	8f 89       	ldd	r24, Y+23	; 0x17
    1162:	98 8d       	ldd	r25, Y+24	; 0x18
    1164:	20 e0       	ldi	r18, 0x00	; 0
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	40 e8       	ldi	r20, 0x80	; 128
    116a:	5f e3       	ldi	r21, 0x3F	; 63
    116c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1170:	88 23       	and	r24, r24
    1172:	2c f4       	brge	.+10     	; 0x117e <MODE_1+0x74>
		__ticks = 1;
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	9c 8b       	std	Y+20, r25	; 0x14
    117a:	8b 8b       	std	Y+19, r24	; 0x13
    117c:	3f c0       	rjmp	.+126    	; 0x11fc <MODE_1+0xf2>
	else if (__tmp > 65535)
    117e:	6d 89       	ldd	r22, Y+21	; 0x15
    1180:	7e 89       	ldd	r23, Y+22	; 0x16
    1182:	8f 89       	ldd	r24, Y+23	; 0x17
    1184:	98 8d       	ldd	r25, Y+24	; 0x18
    1186:	20 e0       	ldi	r18, 0x00	; 0
    1188:	3f ef       	ldi	r19, 0xFF	; 255
    118a:	4f e7       	ldi	r20, 0x7F	; 127
    118c:	57 e4       	ldi	r21, 0x47	; 71
    118e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1192:	18 16       	cp	r1, r24
    1194:	4c f5       	brge	.+82     	; 0x11e8 <MODE_1+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1196:	69 8d       	ldd	r22, Y+25	; 0x19
    1198:	7a 8d       	ldd	r23, Y+26	; 0x1a
    119a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    119c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	40 e2       	ldi	r20, 0x20	; 32
    11a4:	51 e4       	ldi	r21, 0x41	; 65
    11a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11aa:	dc 01       	movw	r26, r24
    11ac:	cb 01       	movw	r24, r22
    11ae:	bc 01       	movw	r22, r24
    11b0:	cd 01       	movw	r24, r26
    11b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11b6:	dc 01       	movw	r26, r24
    11b8:	cb 01       	movw	r24, r22
    11ba:	9c 8b       	std	Y+20, r25	; 0x14
    11bc:	8b 8b       	std	Y+19, r24	; 0x13
    11be:	0f c0       	rjmp	.+30     	; 0x11de <MODE_1+0xd4>
    11c0:	88 ec       	ldi	r24, 0xC8	; 200
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	9a 8b       	std	Y+18, r25	; 0x12
    11c6:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11c8:	89 89       	ldd	r24, Y+17	; 0x11
    11ca:	9a 89       	ldd	r25, Y+18	; 0x12
    11cc:	01 97       	sbiw	r24, 0x01	; 1
    11ce:	f1 f7       	brne	.-4      	; 0x11cc <MODE_1+0xc2>
    11d0:	9a 8b       	std	Y+18, r25	; 0x12
    11d2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11d4:	8b 89       	ldd	r24, Y+19	; 0x13
    11d6:	9c 89       	ldd	r25, Y+20	; 0x14
    11d8:	01 97       	sbiw	r24, 0x01	; 1
    11da:	9c 8b       	std	Y+20, r25	; 0x14
    11dc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11de:	8b 89       	ldd	r24, Y+19	; 0x13
    11e0:	9c 89       	ldd	r25, Y+20	; 0x14
    11e2:	00 97       	sbiw	r24, 0x00	; 0
    11e4:	69 f7       	brne	.-38     	; 0x11c0 <MODE_1+0xb6>
    11e6:	14 c0       	rjmp	.+40     	; 0x1210 <MODE_1+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11e8:	6d 89       	ldd	r22, Y+21	; 0x15
    11ea:	7e 89       	ldd	r23, Y+22	; 0x16
    11ec:	8f 89       	ldd	r24, Y+23	; 0x17
    11ee:	98 8d       	ldd	r25, Y+24	; 0x18
    11f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11f4:	dc 01       	movw	r26, r24
    11f6:	cb 01       	movw	r24, r22
    11f8:	9c 8b       	std	Y+20, r25	; 0x14
    11fa:	8b 8b       	std	Y+19, r24	; 0x13
    11fc:	8b 89       	ldd	r24, Y+19	; 0x13
    11fe:	9c 89       	ldd	r25, Y+20	; 0x14
    1200:	98 8b       	std	Y+16, r25	; 0x10
    1202:	8f 87       	std	Y+15, r24	; 0x0f
    1204:	8f 85       	ldd	r24, Y+15	; 0x0f
    1206:	98 89       	ldd	r25, Y+16	; 0x10
    1208:	01 97       	sbiw	r24, 0x01	; 1
    120a:	f1 f7       	brne	.-4      	; 0x1208 <MODE_1+0xfe>
    120c:	98 8b       	std	Y+16, r25	; 0x10
    120e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	REG_CLR(PORTA);
    1210:	eb e3       	ldi	r30, 0x3B	; 59
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	80 81       	ld	r24, Z
    1216:	eb e3       	ldi	r30, 0x3B	; 59
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	10 82       	st	Z, r1
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	aa ef       	ldi	r26, 0xFA	; 250
    1222:	b3 e4       	ldi	r27, 0x43	; 67
    1224:	8b 87       	std	Y+11, r24	; 0x0b
    1226:	9c 87       	std	Y+12, r25	; 0x0c
    1228:	ad 87       	std	Y+13, r26	; 0x0d
    122a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    122c:	6b 85       	ldd	r22, Y+11	; 0x0b
    122e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1230:	8d 85       	ldd	r24, Y+13	; 0x0d
    1232:	9e 85       	ldd	r25, Y+14	; 0x0e
    1234:	20 e0       	ldi	r18, 0x00	; 0
    1236:	30 e0       	ldi	r19, 0x00	; 0
    1238:	4a ef       	ldi	r20, 0xFA	; 250
    123a:	54 e4       	ldi	r21, 0x44	; 68
    123c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1240:	dc 01       	movw	r26, r24
    1242:	cb 01       	movw	r24, r22
    1244:	8f 83       	std	Y+7, r24	; 0x07
    1246:	98 87       	std	Y+8, r25	; 0x08
    1248:	a9 87       	std	Y+9, r26	; 0x09
    124a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    124c:	6f 81       	ldd	r22, Y+7	; 0x07
    124e:	78 85       	ldd	r23, Y+8	; 0x08
    1250:	89 85       	ldd	r24, Y+9	; 0x09
    1252:	9a 85       	ldd	r25, Y+10	; 0x0a
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	30 e0       	ldi	r19, 0x00	; 0
    1258:	40 e8       	ldi	r20, 0x80	; 128
    125a:	5f e3       	ldi	r21, 0x3F	; 63
    125c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1260:	88 23       	and	r24, r24
    1262:	2c f4       	brge	.+10     	; 0x126e <MODE_1+0x164>
		__ticks = 1;
    1264:	81 e0       	ldi	r24, 0x01	; 1
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	9e 83       	std	Y+6, r25	; 0x06
    126a:	8d 83       	std	Y+5, r24	; 0x05
    126c:	3f c0       	rjmp	.+126    	; 0x12ec <MODE_1+0x1e2>
	else if (__tmp > 65535)
    126e:	6f 81       	ldd	r22, Y+7	; 0x07
    1270:	78 85       	ldd	r23, Y+8	; 0x08
    1272:	89 85       	ldd	r24, Y+9	; 0x09
    1274:	9a 85       	ldd	r25, Y+10	; 0x0a
    1276:	20 e0       	ldi	r18, 0x00	; 0
    1278:	3f ef       	ldi	r19, 0xFF	; 255
    127a:	4f e7       	ldi	r20, 0x7F	; 127
    127c:	57 e4       	ldi	r21, 0x47	; 71
    127e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1282:	18 16       	cp	r1, r24
    1284:	4c f5       	brge	.+82     	; 0x12d8 <MODE_1+0x1ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1286:	6b 85       	ldd	r22, Y+11	; 0x0b
    1288:	7c 85       	ldd	r23, Y+12	; 0x0c
    128a:	8d 85       	ldd	r24, Y+13	; 0x0d
    128c:	9e 85       	ldd	r25, Y+14	; 0x0e
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	40 e2       	ldi	r20, 0x20	; 32
    1294:	51 e4       	ldi	r21, 0x41	; 65
    1296:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    129a:	dc 01       	movw	r26, r24
    129c:	cb 01       	movw	r24, r22
    129e:	bc 01       	movw	r22, r24
    12a0:	cd 01       	movw	r24, r26
    12a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12a6:	dc 01       	movw	r26, r24
    12a8:	cb 01       	movw	r24, r22
    12aa:	9e 83       	std	Y+6, r25	; 0x06
    12ac:	8d 83       	std	Y+5, r24	; 0x05
    12ae:	0f c0       	rjmp	.+30     	; 0x12ce <MODE_1+0x1c4>
    12b0:	88 ec       	ldi	r24, 0xC8	; 200
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	9c 83       	std	Y+4, r25	; 0x04
    12b6:	8b 83       	std	Y+3, r24	; 0x03
    12b8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ba:	9c 81       	ldd	r25, Y+4	; 0x04
    12bc:	01 97       	sbiw	r24, 0x01	; 1
    12be:	f1 f7       	brne	.-4      	; 0x12bc <MODE_1+0x1b2>
    12c0:	9c 83       	std	Y+4, r25	; 0x04
    12c2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12c4:	8d 81       	ldd	r24, Y+5	; 0x05
    12c6:	9e 81       	ldd	r25, Y+6	; 0x06
    12c8:	01 97       	sbiw	r24, 0x01	; 1
    12ca:	9e 83       	std	Y+6, r25	; 0x06
    12cc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ce:	8d 81       	ldd	r24, Y+5	; 0x05
    12d0:	9e 81       	ldd	r25, Y+6	; 0x06
    12d2:	00 97       	sbiw	r24, 0x00	; 0
    12d4:	69 f7       	brne	.-38     	; 0x12b0 <MODE_1+0x1a6>
    12d6:	14 c0       	rjmp	.+40     	; 0x1300 <MODE_1+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12d8:	6f 81       	ldd	r22, Y+7	; 0x07
    12da:	78 85       	ldd	r23, Y+8	; 0x08
    12dc:	89 85       	ldd	r24, Y+9	; 0x09
    12de:	9a 85       	ldd	r25, Y+10	; 0x0a
    12e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12e4:	dc 01       	movw	r26, r24
    12e6:	cb 01       	movw	r24, r22
    12e8:	9e 83       	std	Y+6, r25	; 0x06
    12ea:	8d 83       	std	Y+5, r24	; 0x05
    12ec:	8d 81       	ldd	r24, Y+5	; 0x05
    12ee:	9e 81       	ldd	r25, Y+6	; 0x06
    12f0:	9a 83       	std	Y+2, r25	; 0x02
    12f2:	89 83       	std	Y+1, r24	; 0x01
    12f4:	89 81       	ldd	r24, Y+1	; 0x01
    12f6:	9a 81       	ldd	r25, Y+2	; 0x02
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	f1 f7       	brne	.-4      	; 0x12f8 <MODE_1+0x1ee>
    12fc:	9a 83       	std	Y+2, r25	; 0x02
    12fe:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
}/** @end MODE_1 */
    1300:	6e 96       	adiw	r28, 0x1e	; 30
    1302:	0f b6       	in	r0, 0x3f	; 63
    1304:	f8 94       	cli
    1306:	de bf       	out	0x3e, r29	; 62
    1308:	0f be       	out	0x3f, r0	; 63
    130a:	cd bf       	out	0x3d, r28	; 61
    130c:	cf 91       	pop	r28
    130e:	df 91       	pop	r29
    1310:	08 95       	ret

00001312 <MODE_2>:
/**
 * @brief function to implement mode 2
 */
static void MODE_2(void)
{
    1312:	0f 93       	push	r16
    1314:	1f 93       	push	r17
    1316:	df 93       	push	r29
    1318:	cf 93       	push	r28
    131a:	cd b7       	in	r28, 0x3d	; 61
    131c:	de b7       	in	r29, 0x3e	; 62
    131e:	ce 57       	subi	r28, 0x7E	; 126
    1320:	d0 40       	sbci	r29, 0x00	; 0
    1322:	0f b6       	in	r0, 0x3f	; 63
    1324:	f8 94       	cli
    1326:	de bf       	out	0x3e, r29	; 62
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	cd bf       	out	0x3d, r28	; 61
    132c:	fe 01       	movw	r30, r28
    132e:	e5 58       	subi	r30, 0x85	; 133
    1330:	ff 4f       	sbci	r31, 0xFF	; 255
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	a0 e2       	ldi	r26, 0x20	; 32
    1338:	b1 e4       	ldi	r27, 0x41	; 65
    133a:	80 83       	st	Z, r24
    133c:	91 83       	std	Z+1, r25	; 0x01
    133e:	a2 83       	std	Z+2, r26	; 0x02
    1340:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1342:	8e 01       	movw	r16, r28
    1344:	09 58       	subi	r16, 0x89	; 137
    1346:	1f 4f       	sbci	r17, 0xFF	; 255
    1348:	fe 01       	movw	r30, r28
    134a:	e5 58       	subi	r30, 0x85	; 133
    134c:	ff 4f       	sbci	r31, 0xFF	; 255
    134e:	60 81       	ld	r22, Z
    1350:	71 81       	ldd	r23, Z+1	; 0x01
    1352:	82 81       	ldd	r24, Z+2	; 0x02
    1354:	93 81       	ldd	r25, Z+3	; 0x03
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	30 e0       	ldi	r19, 0x00	; 0
    135a:	4a ef       	ldi	r20, 0xFA	; 250
    135c:	54 e4       	ldi	r21, 0x44	; 68
    135e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1362:	dc 01       	movw	r26, r24
    1364:	cb 01       	movw	r24, r22
    1366:	f8 01       	movw	r30, r16
    1368:	80 83       	st	Z, r24
    136a:	91 83       	std	Z+1, r25	; 0x01
    136c:	a2 83       	std	Z+2, r26	; 0x02
    136e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1370:	fe 01       	movw	r30, r28
    1372:	e9 58       	subi	r30, 0x89	; 137
    1374:	ff 4f       	sbci	r31, 0xFF	; 255
    1376:	60 81       	ld	r22, Z
    1378:	71 81       	ldd	r23, Z+1	; 0x01
    137a:	82 81       	ldd	r24, Z+2	; 0x02
    137c:	93 81       	ldd	r25, Z+3	; 0x03
    137e:	20 e0       	ldi	r18, 0x00	; 0
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	40 e8       	ldi	r20, 0x80	; 128
    1384:	5f e3       	ldi	r21, 0x3F	; 63
    1386:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    138a:	88 23       	and	r24, r24
    138c:	44 f4       	brge	.+16     	; 0x139e <MODE_2+0x8c>
		__ticks = 1;
    138e:	fe 01       	movw	r30, r28
    1390:	eb 58       	subi	r30, 0x8B	; 139
    1392:	ff 4f       	sbci	r31, 0xFF	; 255
    1394:	81 e0       	ldi	r24, 0x01	; 1
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	91 83       	std	Z+1, r25	; 0x01
    139a:	80 83       	st	Z, r24
    139c:	64 c0       	rjmp	.+200    	; 0x1466 <MODE_2+0x154>
	else if (__tmp > 65535)
    139e:	fe 01       	movw	r30, r28
    13a0:	e9 58       	subi	r30, 0x89	; 137
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	60 81       	ld	r22, Z
    13a6:	71 81       	ldd	r23, Z+1	; 0x01
    13a8:	82 81       	ldd	r24, Z+2	; 0x02
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	20 e0       	ldi	r18, 0x00	; 0
    13ae:	3f ef       	ldi	r19, 0xFF	; 255
    13b0:	4f e7       	ldi	r20, 0x7F	; 127
    13b2:	57 e4       	ldi	r21, 0x47	; 71
    13b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13b8:	18 16       	cp	r1, r24
    13ba:	0c f0       	brlt	.+2      	; 0x13be <MODE_2+0xac>
    13bc:	43 c0       	rjmp	.+134    	; 0x1444 <MODE_2+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13be:	fe 01       	movw	r30, r28
    13c0:	e5 58       	subi	r30, 0x85	; 133
    13c2:	ff 4f       	sbci	r31, 0xFF	; 255
    13c4:	60 81       	ld	r22, Z
    13c6:	71 81       	ldd	r23, Z+1	; 0x01
    13c8:	82 81       	ldd	r24, Z+2	; 0x02
    13ca:	93 81       	ldd	r25, Z+3	; 0x03
    13cc:	20 e0       	ldi	r18, 0x00	; 0
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	40 e2       	ldi	r20, 0x20	; 32
    13d2:	51 e4       	ldi	r21, 0x41	; 65
    13d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13d8:	dc 01       	movw	r26, r24
    13da:	cb 01       	movw	r24, r22
    13dc:	8e 01       	movw	r16, r28
    13de:	0b 58       	subi	r16, 0x8B	; 139
    13e0:	1f 4f       	sbci	r17, 0xFF	; 255
    13e2:	bc 01       	movw	r22, r24
    13e4:	cd 01       	movw	r24, r26
    13e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13ea:	dc 01       	movw	r26, r24
    13ec:	cb 01       	movw	r24, r22
    13ee:	f8 01       	movw	r30, r16
    13f0:	91 83       	std	Z+1, r25	; 0x01
    13f2:	80 83       	st	Z, r24
    13f4:	1f c0       	rjmp	.+62     	; 0x1434 <MODE_2+0x122>
    13f6:	fe 01       	movw	r30, r28
    13f8:	ed 58       	subi	r30, 0x8D	; 141
    13fa:	ff 4f       	sbci	r31, 0xFF	; 255
    13fc:	88 ec       	ldi	r24, 0xC8	; 200
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	91 83       	std	Z+1, r25	; 0x01
    1402:	80 83       	st	Z, r24
    1404:	fe 01       	movw	r30, r28
    1406:	ed 58       	subi	r30, 0x8D	; 141
    1408:	ff 4f       	sbci	r31, 0xFF	; 255
    140a:	80 81       	ld	r24, Z
    140c:	91 81       	ldd	r25, Z+1	; 0x01
    140e:	01 97       	sbiw	r24, 0x01	; 1
    1410:	f1 f7       	brne	.-4      	; 0x140e <MODE_2+0xfc>
    1412:	fe 01       	movw	r30, r28
    1414:	ed 58       	subi	r30, 0x8D	; 141
    1416:	ff 4f       	sbci	r31, 0xFF	; 255
    1418:	91 83       	std	Z+1, r25	; 0x01
    141a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    141c:	de 01       	movw	r26, r28
    141e:	ab 58       	subi	r26, 0x8B	; 139
    1420:	bf 4f       	sbci	r27, 0xFF	; 255
    1422:	fe 01       	movw	r30, r28
    1424:	eb 58       	subi	r30, 0x8B	; 139
    1426:	ff 4f       	sbci	r31, 0xFF	; 255
    1428:	80 81       	ld	r24, Z
    142a:	91 81       	ldd	r25, Z+1	; 0x01
    142c:	01 97       	sbiw	r24, 0x01	; 1
    142e:	11 96       	adiw	r26, 0x01	; 1
    1430:	9c 93       	st	X, r25
    1432:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1434:	fe 01       	movw	r30, r28
    1436:	eb 58       	subi	r30, 0x8B	; 139
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	80 81       	ld	r24, Z
    143c:	91 81       	ldd	r25, Z+1	; 0x01
    143e:	00 97       	sbiw	r24, 0x00	; 0
    1440:	d1 f6       	brne	.-76     	; 0x13f6 <MODE_2+0xe4>
    1442:	27 c0       	rjmp	.+78     	; 0x1492 <MODE_2+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1444:	8e 01       	movw	r16, r28
    1446:	0b 58       	subi	r16, 0x8B	; 139
    1448:	1f 4f       	sbci	r17, 0xFF	; 255
    144a:	fe 01       	movw	r30, r28
    144c:	e9 58       	subi	r30, 0x89	; 137
    144e:	ff 4f       	sbci	r31, 0xFF	; 255
    1450:	60 81       	ld	r22, Z
    1452:	71 81       	ldd	r23, Z+1	; 0x01
    1454:	82 81       	ldd	r24, Z+2	; 0x02
    1456:	93 81       	ldd	r25, Z+3	; 0x03
    1458:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	f8 01       	movw	r30, r16
    1462:	91 83       	std	Z+1, r25	; 0x01
    1464:	80 83       	st	Z, r24
    1466:	de 01       	movw	r26, r28
    1468:	af 58       	subi	r26, 0x8F	; 143
    146a:	bf 4f       	sbci	r27, 0xFF	; 255
    146c:	fe 01       	movw	r30, r28
    146e:	eb 58       	subi	r30, 0x8B	; 139
    1470:	ff 4f       	sbci	r31, 0xFF	; 255
    1472:	80 81       	ld	r24, Z
    1474:	91 81       	ldd	r25, Z+1	; 0x01
    1476:	8d 93       	st	X+, r24
    1478:	9c 93       	st	X, r25
    147a:	fe 01       	movw	r30, r28
    147c:	ef 58       	subi	r30, 0x8F	; 143
    147e:	ff 4f       	sbci	r31, 0xFF	; 255
    1480:	80 81       	ld	r24, Z
    1482:	91 81       	ldd	r25, Z+1	; 0x01
    1484:	01 97       	sbiw	r24, 0x01	; 1
    1486:	f1 f7       	brne	.-4      	; 0x1484 <MODE_2+0x172>
    1488:	fe 01       	movw	r30, r28
    148a:	ef 58       	subi	r30, 0x8F	; 143
    148c:	ff 4f       	sbci	r31, 0xFF	; 255
    148e:	91 83       	std	Z+1, r25	; 0x01
    1490:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED1, ON);
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	61 e0       	ldi	r22, 0x01	; 1
    1496:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    149a:	fe 01       	movw	r30, r28
    149c:	e3 59       	subi	r30, 0x93	; 147
    149e:	ff 4f       	sbci	r31, 0xFF	; 255
    14a0:	80 e0       	ldi	r24, 0x00	; 0
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	a0 e2       	ldi	r26, 0x20	; 32
    14a6:	b1 e4       	ldi	r27, 0x41	; 65
    14a8:	80 83       	st	Z, r24
    14aa:	91 83       	std	Z+1, r25	; 0x01
    14ac:	a2 83       	std	Z+2, r26	; 0x02
    14ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14b0:	8e 01       	movw	r16, r28
    14b2:	07 59       	subi	r16, 0x97	; 151
    14b4:	1f 4f       	sbci	r17, 0xFF	; 255
    14b6:	fe 01       	movw	r30, r28
    14b8:	e3 59       	subi	r30, 0x93	; 147
    14ba:	ff 4f       	sbci	r31, 0xFF	; 255
    14bc:	60 81       	ld	r22, Z
    14be:	71 81       	ldd	r23, Z+1	; 0x01
    14c0:	82 81       	ldd	r24, Z+2	; 0x02
    14c2:	93 81       	ldd	r25, Z+3	; 0x03
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	4a ef       	ldi	r20, 0xFA	; 250
    14ca:	54 e4       	ldi	r21, 0x44	; 68
    14cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	f8 01       	movw	r30, r16
    14d6:	80 83       	st	Z, r24
    14d8:	91 83       	std	Z+1, r25	; 0x01
    14da:	a2 83       	std	Z+2, r26	; 0x02
    14dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14de:	fe 01       	movw	r30, r28
    14e0:	e7 59       	subi	r30, 0x97	; 151
    14e2:	ff 4f       	sbci	r31, 0xFF	; 255
    14e4:	60 81       	ld	r22, Z
    14e6:	71 81       	ldd	r23, Z+1	; 0x01
    14e8:	82 81       	ldd	r24, Z+2	; 0x02
    14ea:	93 81       	ldd	r25, Z+3	; 0x03
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	30 e0       	ldi	r19, 0x00	; 0
    14f0:	40 e8       	ldi	r20, 0x80	; 128
    14f2:	5f e3       	ldi	r21, 0x3F	; 63
    14f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14f8:	88 23       	and	r24, r24
    14fa:	44 f4       	brge	.+16     	; 0x150c <MODE_2+0x1fa>
		__ticks = 1;
    14fc:	fe 01       	movw	r30, r28
    14fe:	e9 59       	subi	r30, 0x99	; 153
    1500:	ff 4f       	sbci	r31, 0xFF	; 255
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	91 83       	std	Z+1, r25	; 0x01
    1508:	80 83       	st	Z, r24
    150a:	64 c0       	rjmp	.+200    	; 0x15d4 <MODE_2+0x2c2>
	else if (__tmp > 65535)
    150c:	fe 01       	movw	r30, r28
    150e:	e7 59       	subi	r30, 0x97	; 151
    1510:	ff 4f       	sbci	r31, 0xFF	; 255
    1512:	60 81       	ld	r22, Z
    1514:	71 81       	ldd	r23, Z+1	; 0x01
    1516:	82 81       	ldd	r24, Z+2	; 0x02
    1518:	93 81       	ldd	r25, Z+3	; 0x03
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	3f ef       	ldi	r19, 0xFF	; 255
    151e:	4f e7       	ldi	r20, 0x7F	; 127
    1520:	57 e4       	ldi	r21, 0x47	; 71
    1522:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1526:	18 16       	cp	r1, r24
    1528:	0c f0       	brlt	.+2      	; 0x152c <MODE_2+0x21a>
    152a:	43 c0       	rjmp	.+134    	; 0x15b2 <MODE_2+0x2a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    152c:	fe 01       	movw	r30, r28
    152e:	e3 59       	subi	r30, 0x93	; 147
    1530:	ff 4f       	sbci	r31, 0xFF	; 255
    1532:	60 81       	ld	r22, Z
    1534:	71 81       	ldd	r23, Z+1	; 0x01
    1536:	82 81       	ldd	r24, Z+2	; 0x02
    1538:	93 81       	ldd	r25, Z+3	; 0x03
    153a:	20 e0       	ldi	r18, 0x00	; 0
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	40 e2       	ldi	r20, 0x20	; 32
    1540:	51 e4       	ldi	r21, 0x41	; 65
    1542:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	8e 01       	movw	r16, r28
    154c:	09 59       	subi	r16, 0x99	; 153
    154e:	1f 4f       	sbci	r17, 0xFF	; 255
    1550:	bc 01       	movw	r22, r24
    1552:	cd 01       	movw	r24, r26
    1554:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1558:	dc 01       	movw	r26, r24
    155a:	cb 01       	movw	r24, r22
    155c:	f8 01       	movw	r30, r16
    155e:	91 83       	std	Z+1, r25	; 0x01
    1560:	80 83       	st	Z, r24
    1562:	1f c0       	rjmp	.+62     	; 0x15a2 <MODE_2+0x290>
    1564:	fe 01       	movw	r30, r28
    1566:	eb 59       	subi	r30, 0x9B	; 155
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	88 ec       	ldi	r24, 0xC8	; 200
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	91 83       	std	Z+1, r25	; 0x01
    1570:	80 83       	st	Z, r24
    1572:	fe 01       	movw	r30, r28
    1574:	eb 59       	subi	r30, 0x9B	; 155
    1576:	ff 4f       	sbci	r31, 0xFF	; 255
    1578:	80 81       	ld	r24, Z
    157a:	91 81       	ldd	r25, Z+1	; 0x01
    157c:	01 97       	sbiw	r24, 0x01	; 1
    157e:	f1 f7       	brne	.-4      	; 0x157c <MODE_2+0x26a>
    1580:	fe 01       	movw	r30, r28
    1582:	eb 59       	subi	r30, 0x9B	; 155
    1584:	ff 4f       	sbci	r31, 0xFF	; 255
    1586:	91 83       	std	Z+1, r25	; 0x01
    1588:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    158a:	de 01       	movw	r26, r28
    158c:	a9 59       	subi	r26, 0x99	; 153
    158e:	bf 4f       	sbci	r27, 0xFF	; 255
    1590:	fe 01       	movw	r30, r28
    1592:	e9 59       	subi	r30, 0x99	; 153
    1594:	ff 4f       	sbci	r31, 0xFF	; 255
    1596:	80 81       	ld	r24, Z
    1598:	91 81       	ldd	r25, Z+1	; 0x01
    159a:	01 97       	sbiw	r24, 0x01	; 1
    159c:	11 96       	adiw	r26, 0x01	; 1
    159e:	9c 93       	st	X, r25
    15a0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15a2:	fe 01       	movw	r30, r28
    15a4:	e9 59       	subi	r30, 0x99	; 153
    15a6:	ff 4f       	sbci	r31, 0xFF	; 255
    15a8:	80 81       	ld	r24, Z
    15aa:	91 81       	ldd	r25, Z+1	; 0x01
    15ac:	00 97       	sbiw	r24, 0x00	; 0
    15ae:	d1 f6       	brne	.-76     	; 0x1564 <MODE_2+0x252>
    15b0:	27 c0       	rjmp	.+78     	; 0x1600 <MODE_2+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15b2:	8e 01       	movw	r16, r28
    15b4:	09 59       	subi	r16, 0x99	; 153
    15b6:	1f 4f       	sbci	r17, 0xFF	; 255
    15b8:	fe 01       	movw	r30, r28
    15ba:	e7 59       	subi	r30, 0x97	; 151
    15bc:	ff 4f       	sbci	r31, 0xFF	; 255
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	82 81       	ldd	r24, Z+2	; 0x02
    15c4:	93 81       	ldd	r25, Z+3	; 0x03
    15c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15ca:	dc 01       	movw	r26, r24
    15cc:	cb 01       	movw	r24, r22
    15ce:	f8 01       	movw	r30, r16
    15d0:	91 83       	std	Z+1, r25	; 0x01
    15d2:	80 83       	st	Z, r24
    15d4:	de 01       	movw	r26, r28
    15d6:	ad 59       	subi	r26, 0x9D	; 157
    15d8:	bf 4f       	sbci	r27, 0xFF	; 255
    15da:	fe 01       	movw	r30, r28
    15dc:	e9 59       	subi	r30, 0x99	; 153
    15de:	ff 4f       	sbci	r31, 0xFF	; 255
    15e0:	80 81       	ld	r24, Z
    15e2:	91 81       	ldd	r25, Z+1	; 0x01
    15e4:	8d 93       	st	X+, r24
    15e6:	9c 93       	st	X, r25
    15e8:	fe 01       	movw	r30, r28
    15ea:	ed 59       	subi	r30, 0x9D	; 157
    15ec:	ff 4f       	sbci	r31, 0xFF	; 255
    15ee:	80 81       	ld	r24, Z
    15f0:	91 81       	ldd	r25, Z+1	; 0x01
    15f2:	01 97       	sbiw	r24, 0x01	; 1
    15f4:	f1 f7       	brne	.-4      	; 0x15f2 <MODE_2+0x2e0>
    15f6:	fe 01       	movw	r30, r28
    15f8:	ed 59       	subi	r30, 0x9D	; 157
    15fa:	ff 4f       	sbci	r31, 0xFF	; 255
    15fc:	91 83       	std	Z+1, r25	; 0x01
    15fe:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED1, OFF);
    1600:	80 e0       	ldi	r24, 0x00	; 0
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED2, ON);
    1608:	81 e0       	ldi	r24, 0x01	; 1
    160a:	61 e0       	ldi	r22, 0x01	; 1
    160c:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1610:	fe 01       	movw	r30, r28
    1612:	e1 5a       	subi	r30, 0xA1	; 161
    1614:	ff 4f       	sbci	r31, 0xFF	; 255
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	a0 e2       	ldi	r26, 0x20	; 32
    161c:	b1 e4       	ldi	r27, 0x41	; 65
    161e:	80 83       	st	Z, r24
    1620:	91 83       	std	Z+1, r25	; 0x01
    1622:	a2 83       	std	Z+2, r26	; 0x02
    1624:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1626:	8e 01       	movw	r16, r28
    1628:	05 5a       	subi	r16, 0xA5	; 165
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	fe 01       	movw	r30, r28
    162e:	e1 5a       	subi	r30, 0xA1	; 161
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	60 81       	ld	r22, Z
    1634:	71 81       	ldd	r23, Z+1	; 0x01
    1636:	82 81       	ldd	r24, Z+2	; 0x02
    1638:	93 81       	ldd	r25, Z+3	; 0x03
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	4a ef       	ldi	r20, 0xFA	; 250
    1640:	54 e4       	ldi	r21, 0x44	; 68
    1642:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1646:	dc 01       	movw	r26, r24
    1648:	cb 01       	movw	r24, r22
    164a:	f8 01       	movw	r30, r16
    164c:	80 83       	st	Z, r24
    164e:	91 83       	std	Z+1, r25	; 0x01
    1650:	a2 83       	std	Z+2, r26	; 0x02
    1652:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1654:	fe 01       	movw	r30, r28
    1656:	e5 5a       	subi	r30, 0xA5	; 165
    1658:	ff 4f       	sbci	r31, 0xFF	; 255
    165a:	60 81       	ld	r22, Z
    165c:	71 81       	ldd	r23, Z+1	; 0x01
    165e:	82 81       	ldd	r24, Z+2	; 0x02
    1660:	93 81       	ldd	r25, Z+3	; 0x03
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	40 e8       	ldi	r20, 0x80	; 128
    1668:	5f e3       	ldi	r21, 0x3F	; 63
    166a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    166e:	88 23       	and	r24, r24
    1670:	44 f4       	brge	.+16     	; 0x1682 <MODE_2+0x370>
		__ticks = 1;
    1672:	fe 01       	movw	r30, r28
    1674:	e7 5a       	subi	r30, 0xA7	; 167
    1676:	ff 4f       	sbci	r31, 0xFF	; 255
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	91 83       	std	Z+1, r25	; 0x01
    167e:	80 83       	st	Z, r24
    1680:	64 c0       	rjmp	.+200    	; 0x174a <MODE_2+0x438>
	else if (__tmp > 65535)
    1682:	fe 01       	movw	r30, r28
    1684:	e5 5a       	subi	r30, 0xA5	; 165
    1686:	ff 4f       	sbci	r31, 0xFF	; 255
    1688:	60 81       	ld	r22, Z
    168a:	71 81       	ldd	r23, Z+1	; 0x01
    168c:	82 81       	ldd	r24, Z+2	; 0x02
    168e:	93 81       	ldd	r25, Z+3	; 0x03
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	3f ef       	ldi	r19, 0xFF	; 255
    1694:	4f e7       	ldi	r20, 0x7F	; 127
    1696:	57 e4       	ldi	r21, 0x47	; 71
    1698:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    169c:	18 16       	cp	r1, r24
    169e:	0c f0       	brlt	.+2      	; 0x16a2 <MODE_2+0x390>
    16a0:	43 c0       	rjmp	.+134    	; 0x1728 <MODE_2+0x416>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a2:	fe 01       	movw	r30, r28
    16a4:	e1 5a       	subi	r30, 0xA1	; 161
    16a6:	ff 4f       	sbci	r31, 0xFF	; 255
    16a8:	60 81       	ld	r22, Z
    16aa:	71 81       	ldd	r23, Z+1	; 0x01
    16ac:	82 81       	ldd	r24, Z+2	; 0x02
    16ae:	93 81       	ldd	r25, Z+3	; 0x03
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	40 e2       	ldi	r20, 0x20	; 32
    16b6:	51 e4       	ldi	r21, 0x41	; 65
    16b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	8e 01       	movw	r16, r28
    16c2:	07 5a       	subi	r16, 0xA7	; 167
    16c4:	1f 4f       	sbci	r17, 0xFF	; 255
    16c6:	bc 01       	movw	r22, r24
    16c8:	cd 01       	movw	r24, r26
    16ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16ce:	dc 01       	movw	r26, r24
    16d0:	cb 01       	movw	r24, r22
    16d2:	f8 01       	movw	r30, r16
    16d4:	91 83       	std	Z+1, r25	; 0x01
    16d6:	80 83       	st	Z, r24
    16d8:	1f c0       	rjmp	.+62     	; 0x1718 <MODE_2+0x406>
    16da:	fe 01       	movw	r30, r28
    16dc:	e9 5a       	subi	r30, 0xA9	; 169
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
    16e0:	88 ec       	ldi	r24, 0xC8	; 200
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	91 83       	std	Z+1, r25	; 0x01
    16e6:	80 83       	st	Z, r24
    16e8:	fe 01       	movw	r30, r28
    16ea:	e9 5a       	subi	r30, 0xA9	; 169
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	80 81       	ld	r24, Z
    16f0:	91 81       	ldd	r25, Z+1	; 0x01
    16f2:	01 97       	sbiw	r24, 0x01	; 1
    16f4:	f1 f7       	brne	.-4      	; 0x16f2 <MODE_2+0x3e0>
    16f6:	fe 01       	movw	r30, r28
    16f8:	e9 5a       	subi	r30, 0xA9	; 169
    16fa:	ff 4f       	sbci	r31, 0xFF	; 255
    16fc:	91 83       	std	Z+1, r25	; 0x01
    16fe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1700:	de 01       	movw	r26, r28
    1702:	a7 5a       	subi	r26, 0xA7	; 167
    1704:	bf 4f       	sbci	r27, 0xFF	; 255
    1706:	fe 01       	movw	r30, r28
    1708:	e7 5a       	subi	r30, 0xA7	; 167
    170a:	ff 4f       	sbci	r31, 0xFF	; 255
    170c:	80 81       	ld	r24, Z
    170e:	91 81       	ldd	r25, Z+1	; 0x01
    1710:	01 97       	sbiw	r24, 0x01	; 1
    1712:	11 96       	adiw	r26, 0x01	; 1
    1714:	9c 93       	st	X, r25
    1716:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1718:	fe 01       	movw	r30, r28
    171a:	e7 5a       	subi	r30, 0xA7	; 167
    171c:	ff 4f       	sbci	r31, 0xFF	; 255
    171e:	80 81       	ld	r24, Z
    1720:	91 81       	ldd	r25, Z+1	; 0x01
    1722:	00 97       	sbiw	r24, 0x00	; 0
    1724:	d1 f6       	brne	.-76     	; 0x16da <MODE_2+0x3c8>
    1726:	27 c0       	rjmp	.+78     	; 0x1776 <MODE_2+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1728:	8e 01       	movw	r16, r28
    172a:	07 5a       	subi	r16, 0xA7	; 167
    172c:	1f 4f       	sbci	r17, 0xFF	; 255
    172e:	fe 01       	movw	r30, r28
    1730:	e5 5a       	subi	r30, 0xA5	; 165
    1732:	ff 4f       	sbci	r31, 0xFF	; 255
    1734:	60 81       	ld	r22, Z
    1736:	71 81       	ldd	r23, Z+1	; 0x01
    1738:	82 81       	ldd	r24, Z+2	; 0x02
    173a:	93 81       	ldd	r25, Z+3	; 0x03
    173c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1740:	dc 01       	movw	r26, r24
    1742:	cb 01       	movw	r24, r22
    1744:	f8 01       	movw	r30, r16
    1746:	91 83       	std	Z+1, r25	; 0x01
    1748:	80 83       	st	Z, r24
    174a:	de 01       	movw	r26, r28
    174c:	ab 5a       	subi	r26, 0xAB	; 171
    174e:	bf 4f       	sbci	r27, 0xFF	; 255
    1750:	fe 01       	movw	r30, r28
    1752:	e7 5a       	subi	r30, 0xA7	; 167
    1754:	ff 4f       	sbci	r31, 0xFF	; 255
    1756:	80 81       	ld	r24, Z
    1758:	91 81       	ldd	r25, Z+1	; 0x01
    175a:	8d 93       	st	X+, r24
    175c:	9c 93       	st	X, r25
    175e:	fe 01       	movw	r30, r28
    1760:	eb 5a       	subi	r30, 0xAB	; 171
    1762:	ff 4f       	sbci	r31, 0xFF	; 255
    1764:	80 81       	ld	r24, Z
    1766:	91 81       	ldd	r25, Z+1	; 0x01
    1768:	01 97       	sbiw	r24, 0x01	; 1
    176a:	f1 f7       	brne	.-4      	; 0x1768 <MODE_2+0x456>
    176c:	fe 01       	movw	r30, r28
    176e:	eb 5a       	subi	r30, 0xAB	; 171
    1770:	ff 4f       	sbci	r31, 0xFF	; 255
    1772:	91 83       	std	Z+1, r25	; 0x01
    1774:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED2, OFF);
    1776:	81 e0       	ldi	r24, 0x01	; 1
    1778:	60 e0       	ldi	r22, 0x00	; 0
    177a:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED3, ON);
    177e:	82 e0       	ldi	r24, 0x02	; 2
    1780:	61 e0       	ldi	r22, 0x01	; 1
    1782:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1786:	fe 01       	movw	r30, r28
    1788:	ef 5a       	subi	r30, 0xAF	; 175
    178a:	ff 4f       	sbci	r31, 0xFF	; 255
    178c:	80 e0       	ldi	r24, 0x00	; 0
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	a0 e2       	ldi	r26, 0x20	; 32
    1792:	b1 e4       	ldi	r27, 0x41	; 65
    1794:	80 83       	st	Z, r24
    1796:	91 83       	std	Z+1, r25	; 0x01
    1798:	a2 83       	std	Z+2, r26	; 0x02
    179a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    179c:	8e 01       	movw	r16, r28
    179e:	03 5b       	subi	r16, 0xB3	; 179
    17a0:	1f 4f       	sbci	r17, 0xFF	; 255
    17a2:	fe 01       	movw	r30, r28
    17a4:	ef 5a       	subi	r30, 0xAF	; 175
    17a6:	ff 4f       	sbci	r31, 0xFF	; 255
    17a8:	60 81       	ld	r22, Z
    17aa:	71 81       	ldd	r23, Z+1	; 0x01
    17ac:	82 81       	ldd	r24, Z+2	; 0x02
    17ae:	93 81       	ldd	r25, Z+3	; 0x03
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	4a ef       	ldi	r20, 0xFA	; 250
    17b6:	54 e4       	ldi	r21, 0x44	; 68
    17b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17bc:	dc 01       	movw	r26, r24
    17be:	cb 01       	movw	r24, r22
    17c0:	f8 01       	movw	r30, r16
    17c2:	80 83       	st	Z, r24
    17c4:	91 83       	std	Z+1, r25	; 0x01
    17c6:	a2 83       	std	Z+2, r26	; 0x02
    17c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17ca:	fe 01       	movw	r30, r28
    17cc:	e3 5b       	subi	r30, 0xB3	; 179
    17ce:	ff 4f       	sbci	r31, 0xFF	; 255
    17d0:	60 81       	ld	r22, Z
    17d2:	71 81       	ldd	r23, Z+1	; 0x01
    17d4:	82 81       	ldd	r24, Z+2	; 0x02
    17d6:	93 81       	ldd	r25, Z+3	; 0x03
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	40 e8       	ldi	r20, 0x80	; 128
    17de:	5f e3       	ldi	r21, 0x3F	; 63
    17e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17e4:	88 23       	and	r24, r24
    17e6:	44 f4       	brge	.+16     	; 0x17f8 <MODE_2+0x4e6>
		__ticks = 1;
    17e8:	fe 01       	movw	r30, r28
    17ea:	e5 5b       	subi	r30, 0xB5	; 181
    17ec:	ff 4f       	sbci	r31, 0xFF	; 255
    17ee:	81 e0       	ldi	r24, 0x01	; 1
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	91 83       	std	Z+1, r25	; 0x01
    17f4:	80 83       	st	Z, r24
    17f6:	64 c0       	rjmp	.+200    	; 0x18c0 <MODE_2+0x5ae>
	else if (__tmp > 65535)
    17f8:	fe 01       	movw	r30, r28
    17fa:	e3 5b       	subi	r30, 0xB3	; 179
    17fc:	ff 4f       	sbci	r31, 0xFF	; 255
    17fe:	60 81       	ld	r22, Z
    1800:	71 81       	ldd	r23, Z+1	; 0x01
    1802:	82 81       	ldd	r24, Z+2	; 0x02
    1804:	93 81       	ldd	r25, Z+3	; 0x03
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	3f ef       	ldi	r19, 0xFF	; 255
    180a:	4f e7       	ldi	r20, 0x7F	; 127
    180c:	57 e4       	ldi	r21, 0x47	; 71
    180e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1812:	18 16       	cp	r1, r24
    1814:	0c f0       	brlt	.+2      	; 0x1818 <MODE_2+0x506>
    1816:	43 c0       	rjmp	.+134    	; 0x189e <MODE_2+0x58c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1818:	fe 01       	movw	r30, r28
    181a:	ef 5a       	subi	r30, 0xAF	; 175
    181c:	ff 4f       	sbci	r31, 0xFF	; 255
    181e:	60 81       	ld	r22, Z
    1820:	71 81       	ldd	r23, Z+1	; 0x01
    1822:	82 81       	ldd	r24, Z+2	; 0x02
    1824:	93 81       	ldd	r25, Z+3	; 0x03
    1826:	20 e0       	ldi	r18, 0x00	; 0
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	40 e2       	ldi	r20, 0x20	; 32
    182c:	51 e4       	ldi	r21, 0x41	; 65
    182e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1832:	dc 01       	movw	r26, r24
    1834:	cb 01       	movw	r24, r22
    1836:	8e 01       	movw	r16, r28
    1838:	05 5b       	subi	r16, 0xB5	; 181
    183a:	1f 4f       	sbci	r17, 0xFF	; 255
    183c:	bc 01       	movw	r22, r24
    183e:	cd 01       	movw	r24, r26
    1840:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1844:	dc 01       	movw	r26, r24
    1846:	cb 01       	movw	r24, r22
    1848:	f8 01       	movw	r30, r16
    184a:	91 83       	std	Z+1, r25	; 0x01
    184c:	80 83       	st	Z, r24
    184e:	1f c0       	rjmp	.+62     	; 0x188e <MODE_2+0x57c>
    1850:	fe 01       	movw	r30, r28
    1852:	e7 5b       	subi	r30, 0xB7	; 183
    1854:	ff 4f       	sbci	r31, 0xFF	; 255
    1856:	88 ec       	ldi	r24, 0xC8	; 200
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	91 83       	std	Z+1, r25	; 0x01
    185c:	80 83       	st	Z, r24
    185e:	fe 01       	movw	r30, r28
    1860:	e7 5b       	subi	r30, 0xB7	; 183
    1862:	ff 4f       	sbci	r31, 0xFF	; 255
    1864:	80 81       	ld	r24, Z
    1866:	91 81       	ldd	r25, Z+1	; 0x01
    1868:	01 97       	sbiw	r24, 0x01	; 1
    186a:	f1 f7       	brne	.-4      	; 0x1868 <MODE_2+0x556>
    186c:	fe 01       	movw	r30, r28
    186e:	e7 5b       	subi	r30, 0xB7	; 183
    1870:	ff 4f       	sbci	r31, 0xFF	; 255
    1872:	91 83       	std	Z+1, r25	; 0x01
    1874:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1876:	de 01       	movw	r26, r28
    1878:	a5 5b       	subi	r26, 0xB5	; 181
    187a:	bf 4f       	sbci	r27, 0xFF	; 255
    187c:	fe 01       	movw	r30, r28
    187e:	e5 5b       	subi	r30, 0xB5	; 181
    1880:	ff 4f       	sbci	r31, 0xFF	; 255
    1882:	80 81       	ld	r24, Z
    1884:	91 81       	ldd	r25, Z+1	; 0x01
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	11 96       	adiw	r26, 0x01	; 1
    188a:	9c 93       	st	X, r25
    188c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    188e:	fe 01       	movw	r30, r28
    1890:	e5 5b       	subi	r30, 0xB5	; 181
    1892:	ff 4f       	sbci	r31, 0xFF	; 255
    1894:	80 81       	ld	r24, Z
    1896:	91 81       	ldd	r25, Z+1	; 0x01
    1898:	00 97       	sbiw	r24, 0x00	; 0
    189a:	d1 f6       	brne	.-76     	; 0x1850 <MODE_2+0x53e>
    189c:	27 c0       	rjmp	.+78     	; 0x18ec <MODE_2+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    189e:	8e 01       	movw	r16, r28
    18a0:	05 5b       	subi	r16, 0xB5	; 181
    18a2:	1f 4f       	sbci	r17, 0xFF	; 255
    18a4:	fe 01       	movw	r30, r28
    18a6:	e3 5b       	subi	r30, 0xB3	; 179
    18a8:	ff 4f       	sbci	r31, 0xFF	; 255
    18aa:	60 81       	ld	r22, Z
    18ac:	71 81       	ldd	r23, Z+1	; 0x01
    18ae:	82 81       	ldd	r24, Z+2	; 0x02
    18b0:	93 81       	ldd	r25, Z+3	; 0x03
    18b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18b6:	dc 01       	movw	r26, r24
    18b8:	cb 01       	movw	r24, r22
    18ba:	f8 01       	movw	r30, r16
    18bc:	91 83       	std	Z+1, r25	; 0x01
    18be:	80 83       	st	Z, r24
    18c0:	de 01       	movw	r26, r28
    18c2:	a9 5b       	subi	r26, 0xB9	; 185
    18c4:	bf 4f       	sbci	r27, 0xFF	; 255
    18c6:	fe 01       	movw	r30, r28
    18c8:	e5 5b       	subi	r30, 0xB5	; 181
    18ca:	ff 4f       	sbci	r31, 0xFF	; 255
    18cc:	80 81       	ld	r24, Z
    18ce:	91 81       	ldd	r25, Z+1	; 0x01
    18d0:	8d 93       	st	X+, r24
    18d2:	9c 93       	st	X, r25
    18d4:	fe 01       	movw	r30, r28
    18d6:	e9 5b       	subi	r30, 0xB9	; 185
    18d8:	ff 4f       	sbci	r31, 0xFF	; 255
    18da:	80 81       	ld	r24, Z
    18dc:	91 81       	ldd	r25, Z+1	; 0x01
    18de:	01 97       	sbiw	r24, 0x01	; 1
    18e0:	f1 f7       	brne	.-4      	; 0x18de <MODE_2+0x5cc>
    18e2:	fe 01       	movw	r30, r28
    18e4:	e9 5b       	subi	r30, 0xB9	; 185
    18e6:	ff 4f       	sbci	r31, 0xFF	; 255
    18e8:	91 83       	std	Z+1, r25	; 0x01
    18ea:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED3, OFF);
    18ec:	82 e0       	ldi	r24, 0x02	; 2
    18ee:	60 e0       	ldi	r22, 0x00	; 0
    18f0:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED4, ON);
    18f4:	83 e0       	ldi	r24, 0x03	; 3
    18f6:	61 e0       	ldi	r22, 0x01	; 1
    18f8:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    18fc:	fe 01       	movw	r30, r28
    18fe:	ed 5b       	subi	r30, 0xBD	; 189
    1900:	ff 4f       	sbci	r31, 0xFF	; 255
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	a0 e2       	ldi	r26, 0x20	; 32
    1908:	b1 e4       	ldi	r27, 0x41	; 65
    190a:	80 83       	st	Z, r24
    190c:	91 83       	std	Z+1, r25	; 0x01
    190e:	a2 83       	std	Z+2, r26	; 0x02
    1910:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1912:	8e 01       	movw	r16, r28
    1914:	01 5c       	subi	r16, 0xC1	; 193
    1916:	1f 4f       	sbci	r17, 0xFF	; 255
    1918:	fe 01       	movw	r30, r28
    191a:	ed 5b       	subi	r30, 0xBD	; 189
    191c:	ff 4f       	sbci	r31, 0xFF	; 255
    191e:	60 81       	ld	r22, Z
    1920:	71 81       	ldd	r23, Z+1	; 0x01
    1922:	82 81       	ldd	r24, Z+2	; 0x02
    1924:	93 81       	ldd	r25, Z+3	; 0x03
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	30 e0       	ldi	r19, 0x00	; 0
    192a:	4a ef       	ldi	r20, 0xFA	; 250
    192c:	54 e4       	ldi	r21, 0x44	; 68
    192e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	f8 01       	movw	r30, r16
    1938:	80 83       	st	Z, r24
    193a:	91 83       	std	Z+1, r25	; 0x01
    193c:	a2 83       	std	Z+2, r26	; 0x02
    193e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1940:	fe 01       	movw	r30, r28
    1942:	ff 96       	adiw	r30, 0x3f	; 63
    1944:	60 81       	ld	r22, Z
    1946:	71 81       	ldd	r23, Z+1	; 0x01
    1948:	82 81       	ldd	r24, Z+2	; 0x02
    194a:	93 81       	ldd	r25, Z+3	; 0x03
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e8       	ldi	r20, 0x80	; 128
    1952:	5f e3       	ldi	r21, 0x3F	; 63
    1954:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1958:	88 23       	and	r24, r24
    195a:	2c f4       	brge	.+10     	; 0x1966 <MODE_2+0x654>
		__ticks = 1;
    195c:	81 e0       	ldi	r24, 0x01	; 1
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	9e af       	std	Y+62, r25	; 0x3e
    1962:	8d af       	std	Y+61, r24	; 0x3d
    1964:	46 c0       	rjmp	.+140    	; 0x19f2 <MODE_2+0x6e0>
	else if (__tmp > 65535)
    1966:	fe 01       	movw	r30, r28
    1968:	ff 96       	adiw	r30, 0x3f	; 63
    196a:	60 81       	ld	r22, Z
    196c:	71 81       	ldd	r23, Z+1	; 0x01
    196e:	82 81       	ldd	r24, Z+2	; 0x02
    1970:	93 81       	ldd	r25, Z+3	; 0x03
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	3f ef       	ldi	r19, 0xFF	; 255
    1976:	4f e7       	ldi	r20, 0x7F	; 127
    1978:	57 e4       	ldi	r21, 0x47	; 71
    197a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    197e:	18 16       	cp	r1, r24
    1980:	64 f5       	brge	.+88     	; 0x19da <MODE_2+0x6c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1982:	fe 01       	movw	r30, r28
    1984:	ed 5b       	subi	r30, 0xBD	; 189
    1986:	ff 4f       	sbci	r31, 0xFF	; 255
    1988:	60 81       	ld	r22, Z
    198a:	71 81       	ldd	r23, Z+1	; 0x01
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	93 81       	ldd	r25, Z+3	; 0x03
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	40 e2       	ldi	r20, 0x20	; 32
    1996:	51 e4       	ldi	r21, 0x41	; 65
    1998:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	bc 01       	movw	r22, r24
    19a2:	cd 01       	movw	r24, r26
    19a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19a8:	dc 01       	movw	r26, r24
    19aa:	cb 01       	movw	r24, r22
    19ac:	9e af       	std	Y+62, r25	; 0x3e
    19ae:	8d af       	std	Y+61, r24	; 0x3d
    19b0:	0f c0       	rjmp	.+30     	; 0x19d0 <MODE_2+0x6be>
    19b2:	88 ec       	ldi	r24, 0xC8	; 200
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	9c af       	std	Y+60, r25	; 0x3c
    19b8:	8b af       	std	Y+59, r24	; 0x3b
    19ba:	8b ad       	ldd	r24, Y+59	; 0x3b
    19bc:	9c ad       	ldd	r25, Y+60	; 0x3c
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	f1 f7       	brne	.-4      	; 0x19be <MODE_2+0x6ac>
    19c2:	9c af       	std	Y+60, r25	; 0x3c
    19c4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19c6:	8d ad       	ldd	r24, Y+61	; 0x3d
    19c8:	9e ad       	ldd	r25, Y+62	; 0x3e
    19ca:	01 97       	sbiw	r24, 0x01	; 1
    19cc:	9e af       	std	Y+62, r25	; 0x3e
    19ce:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19d0:	8d ad       	ldd	r24, Y+61	; 0x3d
    19d2:	9e ad       	ldd	r25, Y+62	; 0x3e
    19d4:	00 97       	sbiw	r24, 0x00	; 0
    19d6:	69 f7       	brne	.-38     	; 0x19b2 <MODE_2+0x6a0>
    19d8:	16 c0       	rjmp	.+44     	; 0x1a06 <MODE_2+0x6f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19da:	fe 01       	movw	r30, r28
    19dc:	ff 96       	adiw	r30, 0x3f	; 63
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19ea:	dc 01       	movw	r26, r24
    19ec:	cb 01       	movw	r24, r22
    19ee:	9e af       	std	Y+62, r25	; 0x3e
    19f0:	8d af       	std	Y+61, r24	; 0x3d
    19f2:	8d ad       	ldd	r24, Y+61	; 0x3d
    19f4:	9e ad       	ldd	r25, Y+62	; 0x3e
    19f6:	9a af       	std	Y+58, r25	; 0x3a
    19f8:	89 af       	std	Y+57, r24	; 0x39
    19fa:	89 ad       	ldd	r24, Y+57	; 0x39
    19fc:	9a ad       	ldd	r25, Y+58	; 0x3a
    19fe:	01 97       	sbiw	r24, 0x01	; 1
    1a00:	f1 f7       	brne	.-4      	; 0x19fe <MODE_2+0x6ec>
    1a02:	9a af       	std	Y+58, r25	; 0x3a
    1a04:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED4, OFF);
    1a06:	83 e0       	ldi	r24, 0x03	; 3
    1a08:	60 e0       	ldi	r22, 0x00	; 0
    1a0a:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED5, ON);
    1a0e:	84 e0       	ldi	r24, 0x04	; 4
    1a10:	61 e0       	ldi	r22, 0x01	; 1
    1a12:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1a16:	80 e0       	ldi	r24, 0x00	; 0
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	a0 e2       	ldi	r26, 0x20	; 32
    1a1c:	b1 e4       	ldi	r27, 0x41	; 65
    1a1e:	8d ab       	std	Y+53, r24	; 0x35
    1a20:	9e ab       	std	Y+54, r25	; 0x36
    1a22:	af ab       	std	Y+55, r26	; 0x37
    1a24:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a26:	6d a9       	ldd	r22, Y+53	; 0x35
    1a28:	7e a9       	ldd	r23, Y+54	; 0x36
    1a2a:	8f a9       	ldd	r24, Y+55	; 0x37
    1a2c:	98 ad       	ldd	r25, Y+56	; 0x38
    1a2e:	20 e0       	ldi	r18, 0x00	; 0
    1a30:	30 e0       	ldi	r19, 0x00	; 0
    1a32:	4a ef       	ldi	r20, 0xFA	; 250
    1a34:	54 e4       	ldi	r21, 0x44	; 68
    1a36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a3a:	dc 01       	movw	r26, r24
    1a3c:	cb 01       	movw	r24, r22
    1a3e:	89 ab       	std	Y+49, r24	; 0x31
    1a40:	9a ab       	std	Y+50, r25	; 0x32
    1a42:	ab ab       	std	Y+51, r26	; 0x33
    1a44:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1a46:	69 a9       	ldd	r22, Y+49	; 0x31
    1a48:	7a a9       	ldd	r23, Y+50	; 0x32
    1a4a:	8b a9       	ldd	r24, Y+51	; 0x33
    1a4c:	9c a9       	ldd	r25, Y+52	; 0x34
    1a4e:	20 e0       	ldi	r18, 0x00	; 0
    1a50:	30 e0       	ldi	r19, 0x00	; 0
    1a52:	40 e8       	ldi	r20, 0x80	; 128
    1a54:	5f e3       	ldi	r21, 0x3F	; 63
    1a56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a5a:	88 23       	and	r24, r24
    1a5c:	2c f4       	brge	.+10     	; 0x1a68 <MODE_2+0x756>
		__ticks = 1;
    1a5e:	81 e0       	ldi	r24, 0x01	; 1
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	98 ab       	std	Y+48, r25	; 0x30
    1a64:	8f a7       	std	Y+47, r24	; 0x2f
    1a66:	3f c0       	rjmp	.+126    	; 0x1ae6 <MODE_2+0x7d4>
	else if (__tmp > 65535)
    1a68:	69 a9       	ldd	r22, Y+49	; 0x31
    1a6a:	7a a9       	ldd	r23, Y+50	; 0x32
    1a6c:	8b a9       	ldd	r24, Y+51	; 0x33
    1a6e:	9c a9       	ldd	r25, Y+52	; 0x34
    1a70:	20 e0       	ldi	r18, 0x00	; 0
    1a72:	3f ef       	ldi	r19, 0xFF	; 255
    1a74:	4f e7       	ldi	r20, 0x7F	; 127
    1a76:	57 e4       	ldi	r21, 0x47	; 71
    1a78:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a7c:	18 16       	cp	r1, r24
    1a7e:	4c f5       	brge	.+82     	; 0x1ad2 <MODE_2+0x7c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a80:	6d a9       	ldd	r22, Y+53	; 0x35
    1a82:	7e a9       	ldd	r23, Y+54	; 0x36
    1a84:	8f a9       	ldd	r24, Y+55	; 0x37
    1a86:	98 ad       	ldd	r25, Y+56	; 0x38
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	40 e2       	ldi	r20, 0x20	; 32
    1a8e:	51 e4       	ldi	r21, 0x41	; 65
    1a90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a94:	dc 01       	movw	r26, r24
    1a96:	cb 01       	movw	r24, r22
    1a98:	bc 01       	movw	r22, r24
    1a9a:	cd 01       	movw	r24, r26
    1a9c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1aa0:	dc 01       	movw	r26, r24
    1aa2:	cb 01       	movw	r24, r22
    1aa4:	98 ab       	std	Y+48, r25	; 0x30
    1aa6:	8f a7       	std	Y+47, r24	; 0x2f
    1aa8:	0f c0       	rjmp	.+30     	; 0x1ac8 <MODE_2+0x7b6>
    1aaa:	88 ec       	ldi	r24, 0xC8	; 200
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	9e a7       	std	Y+46, r25	; 0x2e
    1ab0:	8d a7       	std	Y+45, r24	; 0x2d
    1ab2:	8d a5       	ldd	r24, Y+45	; 0x2d
    1ab4:	9e a5       	ldd	r25, Y+46	; 0x2e
    1ab6:	01 97       	sbiw	r24, 0x01	; 1
    1ab8:	f1 f7       	brne	.-4      	; 0x1ab6 <MODE_2+0x7a4>
    1aba:	9e a7       	std	Y+46, r25	; 0x2e
    1abc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1abe:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ac0:	98 a9       	ldd	r25, Y+48	; 0x30
    1ac2:	01 97       	sbiw	r24, 0x01	; 1
    1ac4:	98 ab       	std	Y+48, r25	; 0x30
    1ac6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ac8:	8f a5       	ldd	r24, Y+47	; 0x2f
    1aca:	98 a9       	ldd	r25, Y+48	; 0x30
    1acc:	00 97       	sbiw	r24, 0x00	; 0
    1ace:	69 f7       	brne	.-38     	; 0x1aaa <MODE_2+0x798>
    1ad0:	14 c0       	rjmp	.+40     	; 0x1afa <MODE_2+0x7e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ad2:	69 a9       	ldd	r22, Y+49	; 0x31
    1ad4:	7a a9       	ldd	r23, Y+50	; 0x32
    1ad6:	8b a9       	ldd	r24, Y+51	; 0x33
    1ad8:	9c a9       	ldd	r25, Y+52	; 0x34
    1ada:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ade:	dc 01       	movw	r26, r24
    1ae0:	cb 01       	movw	r24, r22
    1ae2:	98 ab       	std	Y+48, r25	; 0x30
    1ae4:	8f a7       	std	Y+47, r24	; 0x2f
    1ae6:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ae8:	98 a9       	ldd	r25, Y+48	; 0x30
    1aea:	9c a7       	std	Y+44, r25	; 0x2c
    1aec:	8b a7       	std	Y+43, r24	; 0x2b
    1aee:	8b a5       	ldd	r24, Y+43	; 0x2b
    1af0:	9c a5       	ldd	r25, Y+44	; 0x2c
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	f1 f7       	brne	.-4      	; 0x1af2 <MODE_2+0x7e0>
    1af6:	9c a7       	std	Y+44, r25	; 0x2c
    1af8:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED5, OFF);
    1afa:	84 e0       	ldi	r24, 0x04	; 4
    1afc:	60 e0       	ldi	r22, 0x00	; 0
    1afe:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED6, ON);
    1b02:	85 e0       	ldi	r24, 0x05	; 5
    1b04:	61 e0       	ldi	r22, 0x01	; 1
    1b06:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	a0 e2       	ldi	r26, 0x20	; 32
    1b10:	b1 e4       	ldi	r27, 0x41	; 65
    1b12:	8f a3       	std	Y+39, r24	; 0x27
    1b14:	98 a7       	std	Y+40, r25	; 0x28
    1b16:	a9 a7       	std	Y+41, r26	; 0x29
    1b18:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b1a:	6f a1       	ldd	r22, Y+39	; 0x27
    1b1c:	78 a5       	ldd	r23, Y+40	; 0x28
    1b1e:	89 a5       	ldd	r24, Y+41	; 0x29
    1b20:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	4a ef       	ldi	r20, 0xFA	; 250
    1b28:	54 e4       	ldi	r21, 0x44	; 68
    1b2a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	8b a3       	std	Y+35, r24	; 0x23
    1b34:	9c a3       	std	Y+36, r25	; 0x24
    1b36:	ad a3       	std	Y+37, r26	; 0x25
    1b38:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b3a:	6b a1       	ldd	r22, Y+35	; 0x23
    1b3c:	7c a1       	ldd	r23, Y+36	; 0x24
    1b3e:	8d a1       	ldd	r24, Y+37	; 0x25
    1b40:	9e a1       	ldd	r25, Y+38	; 0x26
    1b42:	20 e0       	ldi	r18, 0x00	; 0
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	40 e8       	ldi	r20, 0x80	; 128
    1b48:	5f e3       	ldi	r21, 0x3F	; 63
    1b4a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b4e:	88 23       	and	r24, r24
    1b50:	2c f4       	brge	.+10     	; 0x1b5c <MODE_2+0x84a>
		__ticks = 1;
    1b52:	81 e0       	ldi	r24, 0x01	; 1
    1b54:	90 e0       	ldi	r25, 0x00	; 0
    1b56:	9a a3       	std	Y+34, r25	; 0x22
    1b58:	89 a3       	std	Y+33, r24	; 0x21
    1b5a:	3f c0       	rjmp	.+126    	; 0x1bda <MODE_2+0x8c8>
	else if (__tmp > 65535)
    1b5c:	6b a1       	ldd	r22, Y+35	; 0x23
    1b5e:	7c a1       	ldd	r23, Y+36	; 0x24
    1b60:	8d a1       	ldd	r24, Y+37	; 0x25
    1b62:	9e a1       	ldd	r25, Y+38	; 0x26
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	3f ef       	ldi	r19, 0xFF	; 255
    1b68:	4f e7       	ldi	r20, 0x7F	; 127
    1b6a:	57 e4       	ldi	r21, 0x47	; 71
    1b6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b70:	18 16       	cp	r1, r24
    1b72:	4c f5       	brge	.+82     	; 0x1bc6 <MODE_2+0x8b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b74:	6f a1       	ldd	r22, Y+39	; 0x27
    1b76:	78 a5       	ldd	r23, Y+40	; 0x28
    1b78:	89 a5       	ldd	r24, Y+41	; 0x29
    1b7a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b7c:	20 e0       	ldi	r18, 0x00	; 0
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	40 e2       	ldi	r20, 0x20	; 32
    1b82:	51 e4       	ldi	r21, 0x41	; 65
    1b84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b88:	dc 01       	movw	r26, r24
    1b8a:	cb 01       	movw	r24, r22
    1b8c:	bc 01       	movw	r22, r24
    1b8e:	cd 01       	movw	r24, r26
    1b90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b94:	dc 01       	movw	r26, r24
    1b96:	cb 01       	movw	r24, r22
    1b98:	9a a3       	std	Y+34, r25	; 0x22
    1b9a:	89 a3       	std	Y+33, r24	; 0x21
    1b9c:	0f c0       	rjmp	.+30     	; 0x1bbc <MODE_2+0x8aa>
    1b9e:	88 ec       	ldi	r24, 0xC8	; 200
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	98 a3       	std	Y+32, r25	; 0x20
    1ba4:	8f 8f       	std	Y+31, r24	; 0x1f
    1ba6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ba8:	98 a1       	ldd	r25, Y+32	; 0x20
    1baa:	01 97       	sbiw	r24, 0x01	; 1
    1bac:	f1 f7       	brne	.-4      	; 0x1baa <MODE_2+0x898>
    1bae:	98 a3       	std	Y+32, r25	; 0x20
    1bb0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bb2:	89 a1       	ldd	r24, Y+33	; 0x21
    1bb4:	9a a1       	ldd	r25, Y+34	; 0x22
    1bb6:	01 97       	sbiw	r24, 0x01	; 1
    1bb8:	9a a3       	std	Y+34, r25	; 0x22
    1bba:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bbc:	89 a1       	ldd	r24, Y+33	; 0x21
    1bbe:	9a a1       	ldd	r25, Y+34	; 0x22
    1bc0:	00 97       	sbiw	r24, 0x00	; 0
    1bc2:	69 f7       	brne	.-38     	; 0x1b9e <MODE_2+0x88c>
    1bc4:	14 c0       	rjmp	.+40     	; 0x1bee <MODE_2+0x8dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bc6:	6b a1       	ldd	r22, Y+35	; 0x23
    1bc8:	7c a1       	ldd	r23, Y+36	; 0x24
    1bca:	8d a1       	ldd	r24, Y+37	; 0x25
    1bcc:	9e a1       	ldd	r25, Y+38	; 0x26
    1bce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	cb 01       	movw	r24, r22
    1bd6:	9a a3       	std	Y+34, r25	; 0x22
    1bd8:	89 a3       	std	Y+33, r24	; 0x21
    1bda:	89 a1       	ldd	r24, Y+33	; 0x21
    1bdc:	9a a1       	ldd	r25, Y+34	; 0x22
    1bde:	9e 8f       	std	Y+30, r25	; 0x1e
    1be0:	8d 8f       	std	Y+29, r24	; 0x1d
    1be2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1be4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1be6:	01 97       	sbiw	r24, 0x01	; 1
    1be8:	f1 f7       	brne	.-4      	; 0x1be6 <MODE_2+0x8d4>
    1bea:	9e 8f       	std	Y+30, r25	; 0x1e
    1bec:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED6, OFF);
    1bee:	85 e0       	ldi	r24, 0x05	; 5
    1bf0:	60 e0       	ldi	r22, 0x00	; 0
    1bf2:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED7, ON);
    1bf6:	86 e0       	ldi	r24, 0x06	; 6
    1bf8:	61 e0       	ldi	r22, 0x01	; 1
    1bfa:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1bfe:	80 e0       	ldi	r24, 0x00	; 0
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	a0 e2       	ldi	r26, 0x20	; 32
    1c04:	b1 e4       	ldi	r27, 0x41	; 65
    1c06:	89 8f       	std	Y+25, r24	; 0x19
    1c08:	9a 8f       	std	Y+26, r25	; 0x1a
    1c0a:	ab 8f       	std	Y+27, r26	; 0x1b
    1c0c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c0e:	69 8d       	ldd	r22, Y+25	; 0x19
    1c10:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c16:	20 e0       	ldi	r18, 0x00	; 0
    1c18:	30 e0       	ldi	r19, 0x00	; 0
    1c1a:	4a ef       	ldi	r20, 0xFA	; 250
    1c1c:	54 e4       	ldi	r21, 0x44	; 68
    1c1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	8d 8b       	std	Y+21, r24	; 0x15
    1c28:	9e 8b       	std	Y+22, r25	; 0x16
    1c2a:	af 8b       	std	Y+23, r26	; 0x17
    1c2c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c2e:	6d 89       	ldd	r22, Y+21	; 0x15
    1c30:	7e 89       	ldd	r23, Y+22	; 0x16
    1c32:	8f 89       	ldd	r24, Y+23	; 0x17
    1c34:	98 8d       	ldd	r25, Y+24	; 0x18
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	40 e8       	ldi	r20, 0x80	; 128
    1c3c:	5f e3       	ldi	r21, 0x3F	; 63
    1c3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c42:	88 23       	and	r24, r24
    1c44:	2c f4       	brge	.+10     	; 0x1c50 <MODE_2+0x93e>
		__ticks = 1;
    1c46:	81 e0       	ldi	r24, 0x01	; 1
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	9c 8b       	std	Y+20, r25	; 0x14
    1c4c:	8b 8b       	std	Y+19, r24	; 0x13
    1c4e:	3f c0       	rjmp	.+126    	; 0x1cce <MODE_2+0x9bc>
	else if (__tmp > 65535)
    1c50:	6d 89       	ldd	r22, Y+21	; 0x15
    1c52:	7e 89       	ldd	r23, Y+22	; 0x16
    1c54:	8f 89       	ldd	r24, Y+23	; 0x17
    1c56:	98 8d       	ldd	r25, Y+24	; 0x18
    1c58:	20 e0       	ldi	r18, 0x00	; 0
    1c5a:	3f ef       	ldi	r19, 0xFF	; 255
    1c5c:	4f e7       	ldi	r20, 0x7F	; 127
    1c5e:	57 e4       	ldi	r21, 0x47	; 71
    1c60:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c64:	18 16       	cp	r1, r24
    1c66:	4c f5       	brge	.+82     	; 0x1cba <MODE_2+0x9a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c68:	69 8d       	ldd	r22, Y+25	; 0x19
    1c6a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c6c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c6e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c70:	20 e0       	ldi	r18, 0x00	; 0
    1c72:	30 e0       	ldi	r19, 0x00	; 0
    1c74:	40 e2       	ldi	r20, 0x20	; 32
    1c76:	51 e4       	ldi	r21, 0x41	; 65
    1c78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c7c:	dc 01       	movw	r26, r24
    1c7e:	cb 01       	movw	r24, r22
    1c80:	bc 01       	movw	r22, r24
    1c82:	cd 01       	movw	r24, r26
    1c84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c88:	dc 01       	movw	r26, r24
    1c8a:	cb 01       	movw	r24, r22
    1c8c:	9c 8b       	std	Y+20, r25	; 0x14
    1c8e:	8b 8b       	std	Y+19, r24	; 0x13
    1c90:	0f c0       	rjmp	.+30     	; 0x1cb0 <MODE_2+0x99e>
    1c92:	88 ec       	ldi	r24, 0xC8	; 200
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	9a 8b       	std	Y+18, r25	; 0x12
    1c98:	89 8b       	std	Y+17, r24	; 0x11
    1c9a:	89 89       	ldd	r24, Y+17	; 0x11
    1c9c:	9a 89       	ldd	r25, Y+18	; 0x12
    1c9e:	01 97       	sbiw	r24, 0x01	; 1
    1ca0:	f1 f7       	brne	.-4      	; 0x1c9e <MODE_2+0x98c>
    1ca2:	9a 8b       	std	Y+18, r25	; 0x12
    1ca4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ca6:	8b 89       	ldd	r24, Y+19	; 0x13
    1ca8:	9c 89       	ldd	r25, Y+20	; 0x14
    1caa:	01 97       	sbiw	r24, 0x01	; 1
    1cac:	9c 8b       	std	Y+20, r25	; 0x14
    1cae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cb0:	8b 89       	ldd	r24, Y+19	; 0x13
    1cb2:	9c 89       	ldd	r25, Y+20	; 0x14
    1cb4:	00 97       	sbiw	r24, 0x00	; 0
    1cb6:	69 f7       	brne	.-38     	; 0x1c92 <MODE_2+0x980>
    1cb8:	14 c0       	rjmp	.+40     	; 0x1ce2 <MODE_2+0x9d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cba:	6d 89       	ldd	r22, Y+21	; 0x15
    1cbc:	7e 89       	ldd	r23, Y+22	; 0x16
    1cbe:	8f 89       	ldd	r24, Y+23	; 0x17
    1cc0:	98 8d       	ldd	r25, Y+24	; 0x18
    1cc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cc6:	dc 01       	movw	r26, r24
    1cc8:	cb 01       	movw	r24, r22
    1cca:	9c 8b       	std	Y+20, r25	; 0x14
    1ccc:	8b 8b       	std	Y+19, r24	; 0x13
    1cce:	8b 89       	ldd	r24, Y+19	; 0x13
    1cd0:	9c 89       	ldd	r25, Y+20	; 0x14
    1cd2:	98 8b       	std	Y+16, r25	; 0x10
    1cd4:	8f 87       	std	Y+15, r24	; 0x0f
    1cd6:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cd8:	98 89       	ldd	r25, Y+16	; 0x10
    1cda:	01 97       	sbiw	r24, 0x01	; 1
    1cdc:	f1 f7       	brne	.-4      	; 0x1cda <MODE_2+0x9c8>
    1cde:	98 8b       	std	Y+16, r25	; 0x10
    1ce0:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED7, OFF);
    1ce2:	86 e0       	ldi	r24, 0x06	; 6
    1ce4:	60 e0       	ldi	r22, 0x00	; 0
    1ce6:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED8, ON);
    1cea:	87 e0       	ldi	r24, 0x07	; 7
    1cec:	61 e0       	ldi	r22, 0x01	; 1
    1cee:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1cf2:	80 e0       	ldi	r24, 0x00	; 0
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	aa e7       	ldi	r26, 0x7A	; 122
    1cf8:	b3 e4       	ldi	r27, 0x43	; 67
    1cfa:	8b 87       	std	Y+11, r24	; 0x0b
    1cfc:	9c 87       	std	Y+12, r25	; 0x0c
    1cfe:	ad 87       	std	Y+13, r26	; 0x0d
    1d00:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d02:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d04:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d06:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d08:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d0a:	20 e0       	ldi	r18, 0x00	; 0
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	4a ef       	ldi	r20, 0xFA	; 250
    1d10:	54 e4       	ldi	r21, 0x44	; 68
    1d12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d16:	dc 01       	movw	r26, r24
    1d18:	cb 01       	movw	r24, r22
    1d1a:	8f 83       	std	Y+7, r24	; 0x07
    1d1c:	98 87       	std	Y+8, r25	; 0x08
    1d1e:	a9 87       	std	Y+9, r26	; 0x09
    1d20:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d22:	6f 81       	ldd	r22, Y+7	; 0x07
    1d24:	78 85       	ldd	r23, Y+8	; 0x08
    1d26:	89 85       	ldd	r24, Y+9	; 0x09
    1d28:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d2a:	20 e0       	ldi	r18, 0x00	; 0
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	40 e8       	ldi	r20, 0x80	; 128
    1d30:	5f e3       	ldi	r21, 0x3F	; 63
    1d32:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d36:	88 23       	and	r24, r24
    1d38:	2c f4       	brge	.+10     	; 0x1d44 <MODE_2+0xa32>
		__ticks = 1;
    1d3a:	81 e0       	ldi	r24, 0x01	; 1
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	9e 83       	std	Y+6, r25	; 0x06
    1d40:	8d 83       	std	Y+5, r24	; 0x05
    1d42:	3f c0       	rjmp	.+126    	; 0x1dc2 <MODE_2+0xab0>
	else if (__tmp > 65535)
    1d44:	6f 81       	ldd	r22, Y+7	; 0x07
    1d46:	78 85       	ldd	r23, Y+8	; 0x08
    1d48:	89 85       	ldd	r24, Y+9	; 0x09
    1d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d4c:	20 e0       	ldi	r18, 0x00	; 0
    1d4e:	3f ef       	ldi	r19, 0xFF	; 255
    1d50:	4f e7       	ldi	r20, 0x7F	; 127
    1d52:	57 e4       	ldi	r21, 0x47	; 71
    1d54:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d58:	18 16       	cp	r1, r24
    1d5a:	4c f5       	brge	.+82     	; 0x1dae <MODE_2+0xa9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d5c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d5e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d60:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d62:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d64:	20 e0       	ldi	r18, 0x00	; 0
    1d66:	30 e0       	ldi	r19, 0x00	; 0
    1d68:	40 e2       	ldi	r20, 0x20	; 32
    1d6a:	51 e4       	ldi	r21, 0x41	; 65
    1d6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d70:	dc 01       	movw	r26, r24
    1d72:	cb 01       	movw	r24, r22
    1d74:	bc 01       	movw	r22, r24
    1d76:	cd 01       	movw	r24, r26
    1d78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d7c:	dc 01       	movw	r26, r24
    1d7e:	cb 01       	movw	r24, r22
    1d80:	9e 83       	std	Y+6, r25	; 0x06
    1d82:	8d 83       	std	Y+5, r24	; 0x05
    1d84:	0f c0       	rjmp	.+30     	; 0x1da4 <MODE_2+0xa92>
    1d86:	88 ec       	ldi	r24, 0xC8	; 200
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	9c 83       	std	Y+4, r25	; 0x04
    1d8c:	8b 83       	std	Y+3, r24	; 0x03
    1d8e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d90:	9c 81       	ldd	r25, Y+4	; 0x04
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	f1 f7       	brne	.-4      	; 0x1d92 <MODE_2+0xa80>
    1d96:	9c 83       	std	Y+4, r25	; 0x04
    1d98:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d9a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d9c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d9e:	01 97       	sbiw	r24, 0x01	; 1
    1da0:	9e 83       	std	Y+6, r25	; 0x06
    1da2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1da4:	8d 81       	ldd	r24, Y+5	; 0x05
    1da6:	9e 81       	ldd	r25, Y+6	; 0x06
    1da8:	00 97       	sbiw	r24, 0x00	; 0
    1daa:	69 f7       	brne	.-38     	; 0x1d86 <MODE_2+0xa74>
    1dac:	14 c0       	rjmp	.+40     	; 0x1dd6 <MODE_2+0xac4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dae:	6f 81       	ldd	r22, Y+7	; 0x07
    1db0:	78 85       	ldd	r23, Y+8	; 0x08
    1db2:	89 85       	ldd	r24, Y+9	; 0x09
    1db4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1db6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dba:	dc 01       	movw	r26, r24
    1dbc:	cb 01       	movw	r24, r22
    1dbe:	9e 83       	std	Y+6, r25	; 0x06
    1dc0:	8d 83       	std	Y+5, r24	; 0x05
    1dc2:	8d 81       	ldd	r24, Y+5	; 0x05
    1dc4:	9e 81       	ldd	r25, Y+6	; 0x06
    1dc6:	9a 83       	std	Y+2, r25	; 0x02
    1dc8:	89 83       	std	Y+1, r24	; 0x01
    1dca:	89 81       	ldd	r24, Y+1	; 0x01
    1dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dce:	01 97       	sbiw	r24, 0x01	; 1
    1dd0:	f1 f7       	brne	.-4      	; 0x1dce <MODE_2+0xabc>
    1dd2:	9a 83       	std	Y+2, r25	; 0x02
    1dd4:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(250);
}/** @end MODE_2 */
    1dd6:	c2 58       	subi	r28, 0x82	; 130
    1dd8:	df 4f       	sbci	r29, 0xFF	; 255
    1dda:	0f b6       	in	r0, 0x3f	; 63
    1ddc:	f8 94       	cli
    1dde:	de bf       	out	0x3e, r29	; 62
    1de0:	0f be       	out	0x3f, r0	; 63
    1de2:	cd bf       	out	0x3d, r28	; 61
    1de4:	cf 91       	pop	r28
    1de6:	df 91       	pop	r29
    1de8:	1f 91       	pop	r17
    1dea:	0f 91       	pop	r16
    1dec:	08 95       	ret

00001dee <MODE_3>:
/**
 * @brief function to implement mode 3
 */
static void MODE_3(void)
{
    1dee:	0f 93       	push	r16
    1df0:	1f 93       	push	r17
    1df2:	df 93       	push	r29
    1df4:	cf 93       	push	r28
    1df6:	cd b7       	in	r28, 0x3d	; 61
    1df8:	de b7       	in	r29, 0x3e	; 62
    1dfa:	ce 57       	subi	r28, 0x7E	; 126
    1dfc:	d0 40       	sbci	r29, 0x00	; 0
    1dfe:	0f b6       	in	r0, 0x3f	; 63
    1e00:	f8 94       	cli
    1e02:	de bf       	out	0x3e, r29	; 62
    1e04:	0f be       	out	0x3f, r0	; 63
    1e06:	cd bf       	out	0x3d, r28	; 61
    1e08:	fe 01       	movw	r30, r28
    1e0a:	e5 58       	subi	r30, 0x85	; 133
    1e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0e:	80 e0       	ldi	r24, 0x00	; 0
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	a0 e2       	ldi	r26, 0x20	; 32
    1e14:	b1 e4       	ldi	r27, 0x41	; 65
    1e16:	80 83       	st	Z, r24
    1e18:	91 83       	std	Z+1, r25	; 0x01
    1e1a:	a2 83       	std	Z+2, r26	; 0x02
    1e1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e1e:	8e 01       	movw	r16, r28
    1e20:	09 58       	subi	r16, 0x89	; 137
    1e22:	1f 4f       	sbci	r17, 0xFF	; 255
    1e24:	fe 01       	movw	r30, r28
    1e26:	e5 58       	subi	r30, 0x85	; 133
    1e28:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2a:	60 81       	ld	r22, Z
    1e2c:	71 81       	ldd	r23, Z+1	; 0x01
    1e2e:	82 81       	ldd	r24, Z+2	; 0x02
    1e30:	93 81       	ldd	r25, Z+3	; 0x03
    1e32:	20 e0       	ldi	r18, 0x00	; 0
    1e34:	30 e0       	ldi	r19, 0x00	; 0
    1e36:	4a ef       	ldi	r20, 0xFA	; 250
    1e38:	54 e4       	ldi	r21, 0x44	; 68
    1e3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e3e:	dc 01       	movw	r26, r24
    1e40:	cb 01       	movw	r24, r22
    1e42:	f8 01       	movw	r30, r16
    1e44:	80 83       	st	Z, r24
    1e46:	91 83       	std	Z+1, r25	; 0x01
    1e48:	a2 83       	std	Z+2, r26	; 0x02
    1e4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e4c:	fe 01       	movw	r30, r28
    1e4e:	e9 58       	subi	r30, 0x89	; 137
    1e50:	ff 4f       	sbci	r31, 0xFF	; 255
    1e52:	60 81       	ld	r22, Z
    1e54:	71 81       	ldd	r23, Z+1	; 0x01
    1e56:	82 81       	ldd	r24, Z+2	; 0x02
    1e58:	93 81       	ldd	r25, Z+3	; 0x03
    1e5a:	20 e0       	ldi	r18, 0x00	; 0
    1e5c:	30 e0       	ldi	r19, 0x00	; 0
    1e5e:	40 e8       	ldi	r20, 0x80	; 128
    1e60:	5f e3       	ldi	r21, 0x3F	; 63
    1e62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e66:	88 23       	and	r24, r24
    1e68:	44 f4       	brge	.+16     	; 0x1e7a <MODE_3+0x8c>
		__ticks = 1;
    1e6a:	fe 01       	movw	r30, r28
    1e6c:	eb 58       	subi	r30, 0x8B	; 139
    1e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e70:	81 e0       	ldi	r24, 0x01	; 1
    1e72:	90 e0       	ldi	r25, 0x00	; 0
    1e74:	91 83       	std	Z+1, r25	; 0x01
    1e76:	80 83       	st	Z, r24
    1e78:	64 c0       	rjmp	.+200    	; 0x1f42 <MODE_3+0x154>
	else if (__tmp > 65535)
    1e7a:	fe 01       	movw	r30, r28
    1e7c:	e9 58       	subi	r30, 0x89	; 137
    1e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e80:	60 81       	ld	r22, Z
    1e82:	71 81       	ldd	r23, Z+1	; 0x01
    1e84:	82 81       	ldd	r24, Z+2	; 0x02
    1e86:	93 81       	ldd	r25, Z+3	; 0x03
    1e88:	20 e0       	ldi	r18, 0x00	; 0
    1e8a:	3f ef       	ldi	r19, 0xFF	; 255
    1e8c:	4f e7       	ldi	r20, 0x7F	; 127
    1e8e:	57 e4       	ldi	r21, 0x47	; 71
    1e90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e94:	18 16       	cp	r1, r24
    1e96:	0c f0       	brlt	.+2      	; 0x1e9a <MODE_3+0xac>
    1e98:	43 c0       	rjmp	.+134    	; 0x1f20 <MODE_3+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e9a:	fe 01       	movw	r30, r28
    1e9c:	e5 58       	subi	r30, 0x85	; 133
    1e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea0:	60 81       	ld	r22, Z
    1ea2:	71 81       	ldd	r23, Z+1	; 0x01
    1ea4:	82 81       	ldd	r24, Z+2	; 0x02
    1ea6:	93 81       	ldd	r25, Z+3	; 0x03
    1ea8:	20 e0       	ldi	r18, 0x00	; 0
    1eaa:	30 e0       	ldi	r19, 0x00	; 0
    1eac:	40 e2       	ldi	r20, 0x20	; 32
    1eae:	51 e4       	ldi	r21, 0x41	; 65
    1eb0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eb4:	dc 01       	movw	r26, r24
    1eb6:	cb 01       	movw	r24, r22
    1eb8:	8e 01       	movw	r16, r28
    1eba:	0b 58       	subi	r16, 0x8B	; 139
    1ebc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ebe:	bc 01       	movw	r22, r24
    1ec0:	cd 01       	movw	r24, r26
    1ec2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ec6:	dc 01       	movw	r26, r24
    1ec8:	cb 01       	movw	r24, r22
    1eca:	f8 01       	movw	r30, r16
    1ecc:	91 83       	std	Z+1, r25	; 0x01
    1ece:	80 83       	st	Z, r24
    1ed0:	1f c0       	rjmp	.+62     	; 0x1f10 <MODE_3+0x122>
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	ed 58       	subi	r30, 0x8D	; 141
    1ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed8:	88 ec       	ldi	r24, 0xC8	; 200
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	91 83       	std	Z+1, r25	; 0x01
    1ede:	80 83       	st	Z, r24
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	ed 58       	subi	r30, 0x8D	; 141
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	80 81       	ld	r24, Z
    1ee8:	91 81       	ldd	r25, Z+1	; 0x01
    1eea:	01 97       	sbiw	r24, 0x01	; 1
    1eec:	f1 f7       	brne	.-4      	; 0x1eea <MODE_3+0xfc>
    1eee:	fe 01       	movw	r30, r28
    1ef0:	ed 58       	subi	r30, 0x8D	; 141
    1ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef4:	91 83       	std	Z+1, r25	; 0x01
    1ef6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ef8:	de 01       	movw	r26, r28
    1efa:	ab 58       	subi	r26, 0x8B	; 139
    1efc:	bf 4f       	sbci	r27, 0xFF	; 255
    1efe:	fe 01       	movw	r30, r28
    1f00:	eb 58       	subi	r30, 0x8B	; 139
    1f02:	ff 4f       	sbci	r31, 0xFF	; 255
    1f04:	80 81       	ld	r24, Z
    1f06:	91 81       	ldd	r25, Z+1	; 0x01
    1f08:	01 97       	sbiw	r24, 0x01	; 1
    1f0a:	11 96       	adiw	r26, 0x01	; 1
    1f0c:	9c 93       	st	X, r25
    1f0e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f10:	fe 01       	movw	r30, r28
    1f12:	eb 58       	subi	r30, 0x8B	; 139
    1f14:	ff 4f       	sbci	r31, 0xFF	; 255
    1f16:	80 81       	ld	r24, Z
    1f18:	91 81       	ldd	r25, Z+1	; 0x01
    1f1a:	00 97       	sbiw	r24, 0x00	; 0
    1f1c:	d1 f6       	brne	.-76     	; 0x1ed2 <MODE_3+0xe4>
    1f1e:	27 c0       	rjmp	.+78     	; 0x1f6e <MODE_3+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f20:	8e 01       	movw	r16, r28
    1f22:	0b 58       	subi	r16, 0x8B	; 139
    1f24:	1f 4f       	sbci	r17, 0xFF	; 255
    1f26:	fe 01       	movw	r30, r28
    1f28:	e9 58       	subi	r30, 0x89	; 137
    1f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2c:	60 81       	ld	r22, Z
    1f2e:	71 81       	ldd	r23, Z+1	; 0x01
    1f30:	82 81       	ldd	r24, Z+2	; 0x02
    1f32:	93 81       	ldd	r25, Z+3	; 0x03
    1f34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f38:	dc 01       	movw	r26, r24
    1f3a:	cb 01       	movw	r24, r22
    1f3c:	f8 01       	movw	r30, r16
    1f3e:	91 83       	std	Z+1, r25	; 0x01
    1f40:	80 83       	st	Z, r24
    1f42:	de 01       	movw	r26, r28
    1f44:	af 58       	subi	r26, 0x8F	; 143
    1f46:	bf 4f       	sbci	r27, 0xFF	; 255
    1f48:	fe 01       	movw	r30, r28
    1f4a:	eb 58       	subi	r30, 0x8B	; 139
    1f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4e:	80 81       	ld	r24, Z
    1f50:	91 81       	ldd	r25, Z+1	; 0x01
    1f52:	8d 93       	st	X+, r24
    1f54:	9c 93       	st	X, r25
    1f56:	fe 01       	movw	r30, r28
    1f58:	ef 58       	subi	r30, 0x8F	; 143
    1f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5c:	80 81       	ld	r24, Z
    1f5e:	91 81       	ldd	r25, Z+1	; 0x01
    1f60:	01 97       	sbiw	r24, 0x01	; 1
    1f62:	f1 f7       	brne	.-4      	; 0x1f60 <MODE_3+0x172>
    1f64:	fe 01       	movw	r30, r28
    1f66:	ef 58       	subi	r30, 0x8F	; 143
    1f68:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6a:	91 83       	std	Z+1, r25	; 0x01
    1f6c:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED8, ON);
    1f6e:	87 e0       	ldi	r24, 0x07	; 7
    1f70:	61 e0       	ldi	r22, 0x01	; 1
    1f72:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    1f76:	fe 01       	movw	r30, r28
    1f78:	e3 59       	subi	r30, 0x93	; 147
    1f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	90 e0       	ldi	r25, 0x00	; 0
    1f80:	a0 e2       	ldi	r26, 0x20	; 32
    1f82:	b1 e4       	ldi	r27, 0x41	; 65
    1f84:	80 83       	st	Z, r24
    1f86:	91 83       	std	Z+1, r25	; 0x01
    1f88:	a2 83       	std	Z+2, r26	; 0x02
    1f8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f8c:	8e 01       	movw	r16, r28
    1f8e:	07 59       	subi	r16, 0x97	; 151
    1f90:	1f 4f       	sbci	r17, 0xFF	; 255
    1f92:	fe 01       	movw	r30, r28
    1f94:	e3 59       	subi	r30, 0x93	; 147
    1f96:	ff 4f       	sbci	r31, 0xFF	; 255
    1f98:	60 81       	ld	r22, Z
    1f9a:	71 81       	ldd	r23, Z+1	; 0x01
    1f9c:	82 81       	ldd	r24, Z+2	; 0x02
    1f9e:	93 81       	ldd	r25, Z+3	; 0x03
    1fa0:	20 e0       	ldi	r18, 0x00	; 0
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	4a ef       	ldi	r20, 0xFA	; 250
    1fa6:	54 e4       	ldi	r21, 0x44	; 68
    1fa8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fac:	dc 01       	movw	r26, r24
    1fae:	cb 01       	movw	r24, r22
    1fb0:	f8 01       	movw	r30, r16
    1fb2:	80 83       	st	Z, r24
    1fb4:	91 83       	std	Z+1, r25	; 0x01
    1fb6:	a2 83       	std	Z+2, r26	; 0x02
    1fb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fba:	fe 01       	movw	r30, r28
    1fbc:	e7 59       	subi	r30, 0x97	; 151
    1fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc0:	60 81       	ld	r22, Z
    1fc2:	71 81       	ldd	r23, Z+1	; 0x01
    1fc4:	82 81       	ldd	r24, Z+2	; 0x02
    1fc6:	93 81       	ldd	r25, Z+3	; 0x03
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	40 e8       	ldi	r20, 0x80	; 128
    1fce:	5f e3       	ldi	r21, 0x3F	; 63
    1fd0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fd4:	88 23       	and	r24, r24
    1fd6:	44 f4       	brge	.+16     	; 0x1fe8 <MODE_3+0x1fa>
		__ticks = 1;
    1fd8:	fe 01       	movw	r30, r28
    1fda:	e9 59       	subi	r30, 0x99	; 153
    1fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fde:	81 e0       	ldi	r24, 0x01	; 1
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	91 83       	std	Z+1, r25	; 0x01
    1fe4:	80 83       	st	Z, r24
    1fe6:	64 c0       	rjmp	.+200    	; 0x20b0 <MODE_3+0x2c2>
	else if (__tmp > 65535)
    1fe8:	fe 01       	movw	r30, r28
    1fea:	e7 59       	subi	r30, 0x97	; 151
    1fec:	ff 4f       	sbci	r31, 0xFF	; 255
    1fee:	60 81       	ld	r22, Z
    1ff0:	71 81       	ldd	r23, Z+1	; 0x01
    1ff2:	82 81       	ldd	r24, Z+2	; 0x02
    1ff4:	93 81       	ldd	r25, Z+3	; 0x03
    1ff6:	20 e0       	ldi	r18, 0x00	; 0
    1ff8:	3f ef       	ldi	r19, 0xFF	; 255
    1ffa:	4f e7       	ldi	r20, 0x7F	; 127
    1ffc:	57 e4       	ldi	r21, 0x47	; 71
    1ffe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2002:	18 16       	cp	r1, r24
    2004:	0c f0       	brlt	.+2      	; 0x2008 <MODE_3+0x21a>
    2006:	43 c0       	rjmp	.+134    	; 0x208e <MODE_3+0x2a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2008:	fe 01       	movw	r30, r28
    200a:	e3 59       	subi	r30, 0x93	; 147
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	60 81       	ld	r22, Z
    2010:	71 81       	ldd	r23, Z+1	; 0x01
    2012:	82 81       	ldd	r24, Z+2	; 0x02
    2014:	93 81       	ldd	r25, Z+3	; 0x03
    2016:	20 e0       	ldi	r18, 0x00	; 0
    2018:	30 e0       	ldi	r19, 0x00	; 0
    201a:	40 e2       	ldi	r20, 0x20	; 32
    201c:	51 e4       	ldi	r21, 0x41	; 65
    201e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2022:	dc 01       	movw	r26, r24
    2024:	cb 01       	movw	r24, r22
    2026:	8e 01       	movw	r16, r28
    2028:	09 59       	subi	r16, 0x99	; 153
    202a:	1f 4f       	sbci	r17, 0xFF	; 255
    202c:	bc 01       	movw	r22, r24
    202e:	cd 01       	movw	r24, r26
    2030:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2034:	dc 01       	movw	r26, r24
    2036:	cb 01       	movw	r24, r22
    2038:	f8 01       	movw	r30, r16
    203a:	91 83       	std	Z+1, r25	; 0x01
    203c:	80 83       	st	Z, r24
    203e:	1f c0       	rjmp	.+62     	; 0x207e <MODE_3+0x290>
    2040:	fe 01       	movw	r30, r28
    2042:	eb 59       	subi	r30, 0x9B	; 155
    2044:	ff 4f       	sbci	r31, 0xFF	; 255
    2046:	88 ec       	ldi	r24, 0xC8	; 200
    2048:	90 e0       	ldi	r25, 0x00	; 0
    204a:	91 83       	std	Z+1, r25	; 0x01
    204c:	80 83       	st	Z, r24
    204e:	fe 01       	movw	r30, r28
    2050:	eb 59       	subi	r30, 0x9B	; 155
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	80 81       	ld	r24, Z
    2056:	91 81       	ldd	r25, Z+1	; 0x01
    2058:	01 97       	sbiw	r24, 0x01	; 1
    205a:	f1 f7       	brne	.-4      	; 0x2058 <MODE_3+0x26a>
    205c:	fe 01       	movw	r30, r28
    205e:	eb 59       	subi	r30, 0x9B	; 155
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2066:	de 01       	movw	r26, r28
    2068:	a9 59       	subi	r26, 0x99	; 153
    206a:	bf 4f       	sbci	r27, 0xFF	; 255
    206c:	fe 01       	movw	r30, r28
    206e:	e9 59       	subi	r30, 0x99	; 153
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	80 81       	ld	r24, Z
    2074:	91 81       	ldd	r25, Z+1	; 0x01
    2076:	01 97       	sbiw	r24, 0x01	; 1
    2078:	11 96       	adiw	r26, 0x01	; 1
    207a:	9c 93       	st	X, r25
    207c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    207e:	fe 01       	movw	r30, r28
    2080:	e9 59       	subi	r30, 0x99	; 153
    2082:	ff 4f       	sbci	r31, 0xFF	; 255
    2084:	80 81       	ld	r24, Z
    2086:	91 81       	ldd	r25, Z+1	; 0x01
    2088:	00 97       	sbiw	r24, 0x00	; 0
    208a:	d1 f6       	brne	.-76     	; 0x2040 <MODE_3+0x252>
    208c:	27 c0       	rjmp	.+78     	; 0x20dc <MODE_3+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    208e:	8e 01       	movw	r16, r28
    2090:	09 59       	subi	r16, 0x99	; 153
    2092:	1f 4f       	sbci	r17, 0xFF	; 255
    2094:	fe 01       	movw	r30, r28
    2096:	e7 59       	subi	r30, 0x97	; 151
    2098:	ff 4f       	sbci	r31, 0xFF	; 255
    209a:	60 81       	ld	r22, Z
    209c:	71 81       	ldd	r23, Z+1	; 0x01
    209e:	82 81       	ldd	r24, Z+2	; 0x02
    20a0:	93 81       	ldd	r25, Z+3	; 0x03
    20a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20a6:	dc 01       	movw	r26, r24
    20a8:	cb 01       	movw	r24, r22
    20aa:	f8 01       	movw	r30, r16
    20ac:	91 83       	std	Z+1, r25	; 0x01
    20ae:	80 83       	st	Z, r24
    20b0:	de 01       	movw	r26, r28
    20b2:	ad 59       	subi	r26, 0x9D	; 157
    20b4:	bf 4f       	sbci	r27, 0xFF	; 255
    20b6:	fe 01       	movw	r30, r28
    20b8:	e9 59       	subi	r30, 0x99	; 153
    20ba:	ff 4f       	sbci	r31, 0xFF	; 255
    20bc:	80 81       	ld	r24, Z
    20be:	91 81       	ldd	r25, Z+1	; 0x01
    20c0:	8d 93       	st	X+, r24
    20c2:	9c 93       	st	X, r25
    20c4:	fe 01       	movw	r30, r28
    20c6:	ed 59       	subi	r30, 0x9D	; 157
    20c8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ca:	80 81       	ld	r24, Z
    20cc:	91 81       	ldd	r25, Z+1	; 0x01
    20ce:	01 97       	sbiw	r24, 0x01	; 1
    20d0:	f1 f7       	brne	.-4      	; 0x20ce <MODE_3+0x2e0>
    20d2:	fe 01       	movw	r30, r28
    20d4:	ed 59       	subi	r30, 0x9D	; 157
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	91 83       	std	Z+1, r25	; 0x01
    20da:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED8, OFF);
    20dc:	87 e0       	ldi	r24, 0x07	; 7
    20de:	60 e0       	ldi	r22, 0x00	; 0
    20e0:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED7, ON);
    20e4:	86 e0       	ldi	r24, 0x06	; 6
    20e6:	61 e0       	ldi	r22, 0x01	; 1
    20e8:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    20ec:	fe 01       	movw	r30, r28
    20ee:	e1 5a       	subi	r30, 0xA1	; 161
    20f0:	ff 4f       	sbci	r31, 0xFF	; 255
    20f2:	80 e0       	ldi	r24, 0x00	; 0
    20f4:	90 e0       	ldi	r25, 0x00	; 0
    20f6:	a0 e2       	ldi	r26, 0x20	; 32
    20f8:	b1 e4       	ldi	r27, 0x41	; 65
    20fa:	80 83       	st	Z, r24
    20fc:	91 83       	std	Z+1, r25	; 0x01
    20fe:	a2 83       	std	Z+2, r26	; 0x02
    2100:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2102:	8e 01       	movw	r16, r28
    2104:	05 5a       	subi	r16, 0xA5	; 165
    2106:	1f 4f       	sbci	r17, 0xFF	; 255
    2108:	fe 01       	movw	r30, r28
    210a:	e1 5a       	subi	r30, 0xA1	; 161
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	60 81       	ld	r22, Z
    2110:	71 81       	ldd	r23, Z+1	; 0x01
    2112:	82 81       	ldd	r24, Z+2	; 0x02
    2114:	93 81       	ldd	r25, Z+3	; 0x03
    2116:	20 e0       	ldi	r18, 0x00	; 0
    2118:	30 e0       	ldi	r19, 0x00	; 0
    211a:	4a ef       	ldi	r20, 0xFA	; 250
    211c:	54 e4       	ldi	r21, 0x44	; 68
    211e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2122:	dc 01       	movw	r26, r24
    2124:	cb 01       	movw	r24, r22
    2126:	f8 01       	movw	r30, r16
    2128:	80 83       	st	Z, r24
    212a:	91 83       	std	Z+1, r25	; 0x01
    212c:	a2 83       	std	Z+2, r26	; 0x02
    212e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2130:	fe 01       	movw	r30, r28
    2132:	e5 5a       	subi	r30, 0xA5	; 165
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	60 81       	ld	r22, Z
    2138:	71 81       	ldd	r23, Z+1	; 0x01
    213a:	82 81       	ldd	r24, Z+2	; 0x02
    213c:	93 81       	ldd	r25, Z+3	; 0x03
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	40 e8       	ldi	r20, 0x80	; 128
    2144:	5f e3       	ldi	r21, 0x3F	; 63
    2146:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    214a:	88 23       	and	r24, r24
    214c:	44 f4       	brge	.+16     	; 0x215e <MODE_3+0x370>
		__ticks = 1;
    214e:	fe 01       	movw	r30, r28
    2150:	e7 5a       	subi	r30, 0xA7	; 167
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	81 e0       	ldi	r24, 0x01	; 1
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	91 83       	std	Z+1, r25	; 0x01
    215a:	80 83       	st	Z, r24
    215c:	64 c0       	rjmp	.+200    	; 0x2226 <MODE_3+0x438>
	else if (__tmp > 65535)
    215e:	fe 01       	movw	r30, r28
    2160:	e5 5a       	subi	r30, 0xA5	; 165
    2162:	ff 4f       	sbci	r31, 0xFF	; 255
    2164:	60 81       	ld	r22, Z
    2166:	71 81       	ldd	r23, Z+1	; 0x01
    2168:	82 81       	ldd	r24, Z+2	; 0x02
    216a:	93 81       	ldd	r25, Z+3	; 0x03
    216c:	20 e0       	ldi	r18, 0x00	; 0
    216e:	3f ef       	ldi	r19, 0xFF	; 255
    2170:	4f e7       	ldi	r20, 0x7F	; 127
    2172:	57 e4       	ldi	r21, 0x47	; 71
    2174:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2178:	18 16       	cp	r1, r24
    217a:	0c f0       	brlt	.+2      	; 0x217e <MODE_3+0x390>
    217c:	43 c0       	rjmp	.+134    	; 0x2204 <MODE_3+0x416>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    217e:	fe 01       	movw	r30, r28
    2180:	e1 5a       	subi	r30, 0xA1	; 161
    2182:	ff 4f       	sbci	r31, 0xFF	; 255
    2184:	60 81       	ld	r22, Z
    2186:	71 81       	ldd	r23, Z+1	; 0x01
    2188:	82 81       	ldd	r24, Z+2	; 0x02
    218a:	93 81       	ldd	r25, Z+3	; 0x03
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	40 e2       	ldi	r20, 0x20	; 32
    2192:	51 e4       	ldi	r21, 0x41	; 65
    2194:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2198:	dc 01       	movw	r26, r24
    219a:	cb 01       	movw	r24, r22
    219c:	8e 01       	movw	r16, r28
    219e:	07 5a       	subi	r16, 0xA7	; 167
    21a0:	1f 4f       	sbci	r17, 0xFF	; 255
    21a2:	bc 01       	movw	r22, r24
    21a4:	cd 01       	movw	r24, r26
    21a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21aa:	dc 01       	movw	r26, r24
    21ac:	cb 01       	movw	r24, r22
    21ae:	f8 01       	movw	r30, r16
    21b0:	91 83       	std	Z+1, r25	; 0x01
    21b2:	80 83       	st	Z, r24
    21b4:	1f c0       	rjmp	.+62     	; 0x21f4 <MODE_3+0x406>
    21b6:	fe 01       	movw	r30, r28
    21b8:	e9 5a       	subi	r30, 0xA9	; 169
    21ba:	ff 4f       	sbci	r31, 0xFF	; 255
    21bc:	88 ec       	ldi	r24, 0xC8	; 200
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	91 83       	std	Z+1, r25	; 0x01
    21c2:	80 83       	st	Z, r24
    21c4:	fe 01       	movw	r30, r28
    21c6:	e9 5a       	subi	r30, 0xA9	; 169
    21c8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ca:	80 81       	ld	r24, Z
    21cc:	91 81       	ldd	r25, Z+1	; 0x01
    21ce:	01 97       	sbiw	r24, 0x01	; 1
    21d0:	f1 f7       	brne	.-4      	; 0x21ce <MODE_3+0x3e0>
    21d2:	fe 01       	movw	r30, r28
    21d4:	e9 5a       	subi	r30, 0xA9	; 169
    21d6:	ff 4f       	sbci	r31, 0xFF	; 255
    21d8:	91 83       	std	Z+1, r25	; 0x01
    21da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21dc:	de 01       	movw	r26, r28
    21de:	a7 5a       	subi	r26, 0xA7	; 167
    21e0:	bf 4f       	sbci	r27, 0xFF	; 255
    21e2:	fe 01       	movw	r30, r28
    21e4:	e7 5a       	subi	r30, 0xA7	; 167
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	80 81       	ld	r24, Z
    21ea:	91 81       	ldd	r25, Z+1	; 0x01
    21ec:	01 97       	sbiw	r24, 0x01	; 1
    21ee:	11 96       	adiw	r26, 0x01	; 1
    21f0:	9c 93       	st	X, r25
    21f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21f4:	fe 01       	movw	r30, r28
    21f6:	e7 5a       	subi	r30, 0xA7	; 167
    21f8:	ff 4f       	sbci	r31, 0xFF	; 255
    21fa:	80 81       	ld	r24, Z
    21fc:	91 81       	ldd	r25, Z+1	; 0x01
    21fe:	00 97       	sbiw	r24, 0x00	; 0
    2200:	d1 f6       	brne	.-76     	; 0x21b6 <MODE_3+0x3c8>
    2202:	27 c0       	rjmp	.+78     	; 0x2252 <MODE_3+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2204:	8e 01       	movw	r16, r28
    2206:	07 5a       	subi	r16, 0xA7	; 167
    2208:	1f 4f       	sbci	r17, 0xFF	; 255
    220a:	fe 01       	movw	r30, r28
    220c:	e5 5a       	subi	r30, 0xA5	; 165
    220e:	ff 4f       	sbci	r31, 0xFF	; 255
    2210:	60 81       	ld	r22, Z
    2212:	71 81       	ldd	r23, Z+1	; 0x01
    2214:	82 81       	ldd	r24, Z+2	; 0x02
    2216:	93 81       	ldd	r25, Z+3	; 0x03
    2218:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    221c:	dc 01       	movw	r26, r24
    221e:	cb 01       	movw	r24, r22
    2220:	f8 01       	movw	r30, r16
    2222:	91 83       	std	Z+1, r25	; 0x01
    2224:	80 83       	st	Z, r24
    2226:	de 01       	movw	r26, r28
    2228:	ab 5a       	subi	r26, 0xAB	; 171
    222a:	bf 4f       	sbci	r27, 0xFF	; 255
    222c:	fe 01       	movw	r30, r28
    222e:	e7 5a       	subi	r30, 0xA7	; 167
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	80 81       	ld	r24, Z
    2234:	91 81       	ldd	r25, Z+1	; 0x01
    2236:	8d 93       	st	X+, r24
    2238:	9c 93       	st	X, r25
    223a:	fe 01       	movw	r30, r28
    223c:	eb 5a       	subi	r30, 0xAB	; 171
    223e:	ff 4f       	sbci	r31, 0xFF	; 255
    2240:	80 81       	ld	r24, Z
    2242:	91 81       	ldd	r25, Z+1	; 0x01
    2244:	01 97       	sbiw	r24, 0x01	; 1
    2246:	f1 f7       	brne	.-4      	; 0x2244 <MODE_3+0x456>
    2248:	fe 01       	movw	r30, r28
    224a:	eb 5a       	subi	r30, 0xAB	; 171
    224c:	ff 4f       	sbci	r31, 0xFF	; 255
    224e:	91 83       	std	Z+1, r25	; 0x01
    2250:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED7, OFF);
    2252:	86 e0       	ldi	r24, 0x06	; 6
    2254:	60 e0       	ldi	r22, 0x00	; 0
    2256:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED6, ON);
    225a:	85 e0       	ldi	r24, 0x05	; 5
    225c:	61 e0       	ldi	r22, 0x01	; 1
    225e:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    2262:	fe 01       	movw	r30, r28
    2264:	ef 5a       	subi	r30, 0xAF	; 175
    2266:	ff 4f       	sbci	r31, 0xFF	; 255
    2268:	80 e0       	ldi	r24, 0x00	; 0
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	a0 e2       	ldi	r26, 0x20	; 32
    226e:	b1 e4       	ldi	r27, 0x41	; 65
    2270:	80 83       	st	Z, r24
    2272:	91 83       	std	Z+1, r25	; 0x01
    2274:	a2 83       	std	Z+2, r26	; 0x02
    2276:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2278:	8e 01       	movw	r16, r28
    227a:	03 5b       	subi	r16, 0xB3	; 179
    227c:	1f 4f       	sbci	r17, 0xFF	; 255
    227e:	fe 01       	movw	r30, r28
    2280:	ef 5a       	subi	r30, 0xAF	; 175
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	60 81       	ld	r22, Z
    2286:	71 81       	ldd	r23, Z+1	; 0x01
    2288:	82 81       	ldd	r24, Z+2	; 0x02
    228a:	93 81       	ldd	r25, Z+3	; 0x03
    228c:	20 e0       	ldi	r18, 0x00	; 0
    228e:	30 e0       	ldi	r19, 0x00	; 0
    2290:	4a ef       	ldi	r20, 0xFA	; 250
    2292:	54 e4       	ldi	r21, 0x44	; 68
    2294:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2298:	dc 01       	movw	r26, r24
    229a:	cb 01       	movw	r24, r22
    229c:	f8 01       	movw	r30, r16
    229e:	80 83       	st	Z, r24
    22a0:	91 83       	std	Z+1, r25	; 0x01
    22a2:	a2 83       	std	Z+2, r26	; 0x02
    22a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22a6:	fe 01       	movw	r30, r28
    22a8:	e3 5b       	subi	r30, 0xB3	; 179
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	60 81       	ld	r22, Z
    22ae:	71 81       	ldd	r23, Z+1	; 0x01
    22b0:	82 81       	ldd	r24, Z+2	; 0x02
    22b2:	93 81       	ldd	r25, Z+3	; 0x03
    22b4:	20 e0       	ldi	r18, 0x00	; 0
    22b6:	30 e0       	ldi	r19, 0x00	; 0
    22b8:	40 e8       	ldi	r20, 0x80	; 128
    22ba:	5f e3       	ldi	r21, 0x3F	; 63
    22bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22c0:	88 23       	and	r24, r24
    22c2:	44 f4       	brge	.+16     	; 0x22d4 <MODE_3+0x4e6>
		__ticks = 1;
    22c4:	fe 01       	movw	r30, r28
    22c6:	e5 5b       	subi	r30, 0xB5	; 181
    22c8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ca:	81 e0       	ldi	r24, 0x01	; 1
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
    22d2:	64 c0       	rjmp	.+200    	; 0x239c <MODE_3+0x5ae>
	else if (__tmp > 65535)
    22d4:	fe 01       	movw	r30, r28
    22d6:	e3 5b       	subi	r30, 0xB3	; 179
    22d8:	ff 4f       	sbci	r31, 0xFF	; 255
    22da:	60 81       	ld	r22, Z
    22dc:	71 81       	ldd	r23, Z+1	; 0x01
    22de:	82 81       	ldd	r24, Z+2	; 0x02
    22e0:	93 81       	ldd	r25, Z+3	; 0x03
    22e2:	20 e0       	ldi	r18, 0x00	; 0
    22e4:	3f ef       	ldi	r19, 0xFF	; 255
    22e6:	4f e7       	ldi	r20, 0x7F	; 127
    22e8:	57 e4       	ldi	r21, 0x47	; 71
    22ea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22ee:	18 16       	cp	r1, r24
    22f0:	0c f0       	brlt	.+2      	; 0x22f4 <MODE_3+0x506>
    22f2:	43 c0       	rjmp	.+134    	; 0x237a <MODE_3+0x58c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22f4:	fe 01       	movw	r30, r28
    22f6:	ef 5a       	subi	r30, 0xAF	; 175
    22f8:	ff 4f       	sbci	r31, 0xFF	; 255
    22fa:	60 81       	ld	r22, Z
    22fc:	71 81       	ldd	r23, Z+1	; 0x01
    22fe:	82 81       	ldd	r24, Z+2	; 0x02
    2300:	93 81       	ldd	r25, Z+3	; 0x03
    2302:	20 e0       	ldi	r18, 0x00	; 0
    2304:	30 e0       	ldi	r19, 0x00	; 0
    2306:	40 e2       	ldi	r20, 0x20	; 32
    2308:	51 e4       	ldi	r21, 0x41	; 65
    230a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    230e:	dc 01       	movw	r26, r24
    2310:	cb 01       	movw	r24, r22
    2312:	8e 01       	movw	r16, r28
    2314:	05 5b       	subi	r16, 0xB5	; 181
    2316:	1f 4f       	sbci	r17, 0xFF	; 255
    2318:	bc 01       	movw	r22, r24
    231a:	cd 01       	movw	r24, r26
    231c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2320:	dc 01       	movw	r26, r24
    2322:	cb 01       	movw	r24, r22
    2324:	f8 01       	movw	r30, r16
    2326:	91 83       	std	Z+1, r25	; 0x01
    2328:	80 83       	st	Z, r24
    232a:	1f c0       	rjmp	.+62     	; 0x236a <MODE_3+0x57c>
    232c:	fe 01       	movw	r30, r28
    232e:	e7 5b       	subi	r30, 0xB7	; 183
    2330:	ff 4f       	sbci	r31, 0xFF	; 255
    2332:	88 ec       	ldi	r24, 0xC8	; 200
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	80 83       	st	Z, r24
    233a:	fe 01       	movw	r30, r28
    233c:	e7 5b       	subi	r30, 0xB7	; 183
    233e:	ff 4f       	sbci	r31, 0xFF	; 255
    2340:	80 81       	ld	r24, Z
    2342:	91 81       	ldd	r25, Z+1	; 0x01
    2344:	01 97       	sbiw	r24, 0x01	; 1
    2346:	f1 f7       	brne	.-4      	; 0x2344 <MODE_3+0x556>
    2348:	fe 01       	movw	r30, r28
    234a:	e7 5b       	subi	r30, 0xB7	; 183
    234c:	ff 4f       	sbci	r31, 0xFF	; 255
    234e:	91 83       	std	Z+1, r25	; 0x01
    2350:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2352:	de 01       	movw	r26, r28
    2354:	a5 5b       	subi	r26, 0xB5	; 181
    2356:	bf 4f       	sbci	r27, 0xFF	; 255
    2358:	fe 01       	movw	r30, r28
    235a:	e5 5b       	subi	r30, 0xB5	; 181
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	80 81       	ld	r24, Z
    2360:	91 81       	ldd	r25, Z+1	; 0x01
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	11 96       	adiw	r26, 0x01	; 1
    2366:	9c 93       	st	X, r25
    2368:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    236a:	fe 01       	movw	r30, r28
    236c:	e5 5b       	subi	r30, 0xB5	; 181
    236e:	ff 4f       	sbci	r31, 0xFF	; 255
    2370:	80 81       	ld	r24, Z
    2372:	91 81       	ldd	r25, Z+1	; 0x01
    2374:	00 97       	sbiw	r24, 0x00	; 0
    2376:	d1 f6       	brne	.-76     	; 0x232c <MODE_3+0x53e>
    2378:	27 c0       	rjmp	.+78     	; 0x23c8 <MODE_3+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    237a:	8e 01       	movw	r16, r28
    237c:	05 5b       	subi	r16, 0xB5	; 181
    237e:	1f 4f       	sbci	r17, 0xFF	; 255
    2380:	fe 01       	movw	r30, r28
    2382:	e3 5b       	subi	r30, 0xB3	; 179
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	60 81       	ld	r22, Z
    2388:	71 81       	ldd	r23, Z+1	; 0x01
    238a:	82 81       	ldd	r24, Z+2	; 0x02
    238c:	93 81       	ldd	r25, Z+3	; 0x03
    238e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2392:	dc 01       	movw	r26, r24
    2394:	cb 01       	movw	r24, r22
    2396:	f8 01       	movw	r30, r16
    2398:	91 83       	std	Z+1, r25	; 0x01
    239a:	80 83       	st	Z, r24
    239c:	de 01       	movw	r26, r28
    239e:	a9 5b       	subi	r26, 0xB9	; 185
    23a0:	bf 4f       	sbci	r27, 0xFF	; 255
    23a2:	fe 01       	movw	r30, r28
    23a4:	e5 5b       	subi	r30, 0xB5	; 181
    23a6:	ff 4f       	sbci	r31, 0xFF	; 255
    23a8:	80 81       	ld	r24, Z
    23aa:	91 81       	ldd	r25, Z+1	; 0x01
    23ac:	8d 93       	st	X+, r24
    23ae:	9c 93       	st	X, r25
    23b0:	fe 01       	movw	r30, r28
    23b2:	e9 5b       	subi	r30, 0xB9	; 185
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	80 81       	ld	r24, Z
    23b8:	91 81       	ldd	r25, Z+1	; 0x01
    23ba:	01 97       	sbiw	r24, 0x01	; 1
    23bc:	f1 f7       	brne	.-4      	; 0x23ba <MODE_3+0x5cc>
    23be:	fe 01       	movw	r30, r28
    23c0:	e9 5b       	subi	r30, 0xB9	; 185
    23c2:	ff 4f       	sbci	r31, 0xFF	; 255
    23c4:	91 83       	std	Z+1, r25	; 0x01
    23c6:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED6, OFF);
    23c8:	85 e0       	ldi	r24, 0x05	; 5
    23ca:	60 e0       	ldi	r22, 0x00	; 0
    23cc:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED5, ON);
    23d0:	84 e0       	ldi	r24, 0x04	; 4
    23d2:	61 e0       	ldi	r22, 0x01	; 1
    23d4:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    23d8:	fe 01       	movw	r30, r28
    23da:	ed 5b       	subi	r30, 0xBD	; 189
    23dc:	ff 4f       	sbci	r31, 0xFF	; 255
    23de:	80 e0       	ldi	r24, 0x00	; 0
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	a0 e2       	ldi	r26, 0x20	; 32
    23e4:	b1 e4       	ldi	r27, 0x41	; 65
    23e6:	80 83       	st	Z, r24
    23e8:	91 83       	std	Z+1, r25	; 0x01
    23ea:	a2 83       	std	Z+2, r26	; 0x02
    23ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23ee:	8e 01       	movw	r16, r28
    23f0:	01 5c       	subi	r16, 0xC1	; 193
    23f2:	1f 4f       	sbci	r17, 0xFF	; 255
    23f4:	fe 01       	movw	r30, r28
    23f6:	ed 5b       	subi	r30, 0xBD	; 189
    23f8:	ff 4f       	sbci	r31, 0xFF	; 255
    23fa:	60 81       	ld	r22, Z
    23fc:	71 81       	ldd	r23, Z+1	; 0x01
    23fe:	82 81       	ldd	r24, Z+2	; 0x02
    2400:	93 81       	ldd	r25, Z+3	; 0x03
    2402:	20 e0       	ldi	r18, 0x00	; 0
    2404:	30 e0       	ldi	r19, 0x00	; 0
    2406:	4a ef       	ldi	r20, 0xFA	; 250
    2408:	54 e4       	ldi	r21, 0x44	; 68
    240a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    240e:	dc 01       	movw	r26, r24
    2410:	cb 01       	movw	r24, r22
    2412:	f8 01       	movw	r30, r16
    2414:	80 83       	st	Z, r24
    2416:	91 83       	std	Z+1, r25	; 0x01
    2418:	a2 83       	std	Z+2, r26	; 0x02
    241a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    241c:	fe 01       	movw	r30, r28
    241e:	ff 96       	adiw	r30, 0x3f	; 63
    2420:	60 81       	ld	r22, Z
    2422:	71 81       	ldd	r23, Z+1	; 0x01
    2424:	82 81       	ldd	r24, Z+2	; 0x02
    2426:	93 81       	ldd	r25, Z+3	; 0x03
    2428:	20 e0       	ldi	r18, 0x00	; 0
    242a:	30 e0       	ldi	r19, 0x00	; 0
    242c:	40 e8       	ldi	r20, 0x80	; 128
    242e:	5f e3       	ldi	r21, 0x3F	; 63
    2430:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2434:	88 23       	and	r24, r24
    2436:	2c f4       	brge	.+10     	; 0x2442 <MODE_3+0x654>
		__ticks = 1;
    2438:	81 e0       	ldi	r24, 0x01	; 1
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	9e af       	std	Y+62, r25	; 0x3e
    243e:	8d af       	std	Y+61, r24	; 0x3d
    2440:	46 c0       	rjmp	.+140    	; 0x24ce <MODE_3+0x6e0>
	else if (__tmp > 65535)
    2442:	fe 01       	movw	r30, r28
    2444:	ff 96       	adiw	r30, 0x3f	; 63
    2446:	60 81       	ld	r22, Z
    2448:	71 81       	ldd	r23, Z+1	; 0x01
    244a:	82 81       	ldd	r24, Z+2	; 0x02
    244c:	93 81       	ldd	r25, Z+3	; 0x03
    244e:	20 e0       	ldi	r18, 0x00	; 0
    2450:	3f ef       	ldi	r19, 0xFF	; 255
    2452:	4f e7       	ldi	r20, 0x7F	; 127
    2454:	57 e4       	ldi	r21, 0x47	; 71
    2456:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    245a:	18 16       	cp	r1, r24
    245c:	64 f5       	brge	.+88     	; 0x24b6 <MODE_3+0x6c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    245e:	fe 01       	movw	r30, r28
    2460:	ed 5b       	subi	r30, 0xBD	; 189
    2462:	ff 4f       	sbci	r31, 0xFF	; 255
    2464:	60 81       	ld	r22, Z
    2466:	71 81       	ldd	r23, Z+1	; 0x01
    2468:	82 81       	ldd	r24, Z+2	; 0x02
    246a:	93 81       	ldd	r25, Z+3	; 0x03
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	40 e2       	ldi	r20, 0x20	; 32
    2472:	51 e4       	ldi	r21, 0x41	; 65
    2474:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2478:	dc 01       	movw	r26, r24
    247a:	cb 01       	movw	r24, r22
    247c:	bc 01       	movw	r22, r24
    247e:	cd 01       	movw	r24, r26
    2480:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2484:	dc 01       	movw	r26, r24
    2486:	cb 01       	movw	r24, r22
    2488:	9e af       	std	Y+62, r25	; 0x3e
    248a:	8d af       	std	Y+61, r24	; 0x3d
    248c:	0f c0       	rjmp	.+30     	; 0x24ac <MODE_3+0x6be>
    248e:	88 ec       	ldi	r24, 0xC8	; 200
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	9c af       	std	Y+60, r25	; 0x3c
    2494:	8b af       	std	Y+59, r24	; 0x3b
    2496:	8b ad       	ldd	r24, Y+59	; 0x3b
    2498:	9c ad       	ldd	r25, Y+60	; 0x3c
    249a:	01 97       	sbiw	r24, 0x01	; 1
    249c:	f1 f7       	brne	.-4      	; 0x249a <MODE_3+0x6ac>
    249e:	9c af       	std	Y+60, r25	; 0x3c
    24a0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24a2:	8d ad       	ldd	r24, Y+61	; 0x3d
    24a4:	9e ad       	ldd	r25, Y+62	; 0x3e
    24a6:	01 97       	sbiw	r24, 0x01	; 1
    24a8:	9e af       	std	Y+62, r25	; 0x3e
    24aa:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24ac:	8d ad       	ldd	r24, Y+61	; 0x3d
    24ae:	9e ad       	ldd	r25, Y+62	; 0x3e
    24b0:	00 97       	sbiw	r24, 0x00	; 0
    24b2:	69 f7       	brne	.-38     	; 0x248e <MODE_3+0x6a0>
    24b4:	16 c0       	rjmp	.+44     	; 0x24e2 <MODE_3+0x6f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24b6:	fe 01       	movw	r30, r28
    24b8:	ff 96       	adiw	r30, 0x3f	; 63
    24ba:	60 81       	ld	r22, Z
    24bc:	71 81       	ldd	r23, Z+1	; 0x01
    24be:	82 81       	ldd	r24, Z+2	; 0x02
    24c0:	93 81       	ldd	r25, Z+3	; 0x03
    24c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	9e af       	std	Y+62, r25	; 0x3e
    24cc:	8d af       	std	Y+61, r24	; 0x3d
    24ce:	8d ad       	ldd	r24, Y+61	; 0x3d
    24d0:	9e ad       	ldd	r25, Y+62	; 0x3e
    24d2:	9a af       	std	Y+58, r25	; 0x3a
    24d4:	89 af       	std	Y+57, r24	; 0x39
    24d6:	89 ad       	ldd	r24, Y+57	; 0x39
    24d8:	9a ad       	ldd	r25, Y+58	; 0x3a
    24da:	01 97       	sbiw	r24, 0x01	; 1
    24dc:	f1 f7       	brne	.-4      	; 0x24da <MODE_3+0x6ec>
    24de:	9a af       	std	Y+58, r25	; 0x3a
    24e0:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED5, OFF);
    24e2:	84 e0       	ldi	r24, 0x04	; 4
    24e4:	60 e0       	ldi	r22, 0x00	; 0
    24e6:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED4, ON);
    24ea:	83 e0       	ldi	r24, 0x03	; 3
    24ec:	61 e0       	ldi	r22, 0x01	; 1
    24ee:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    24f2:	80 e0       	ldi	r24, 0x00	; 0
    24f4:	90 e0       	ldi	r25, 0x00	; 0
    24f6:	a0 e2       	ldi	r26, 0x20	; 32
    24f8:	b1 e4       	ldi	r27, 0x41	; 65
    24fa:	8d ab       	std	Y+53, r24	; 0x35
    24fc:	9e ab       	std	Y+54, r25	; 0x36
    24fe:	af ab       	std	Y+55, r26	; 0x37
    2500:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2502:	6d a9       	ldd	r22, Y+53	; 0x35
    2504:	7e a9       	ldd	r23, Y+54	; 0x36
    2506:	8f a9       	ldd	r24, Y+55	; 0x37
    2508:	98 ad       	ldd	r25, Y+56	; 0x38
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	4a ef       	ldi	r20, 0xFA	; 250
    2510:	54 e4       	ldi	r21, 0x44	; 68
    2512:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2516:	dc 01       	movw	r26, r24
    2518:	cb 01       	movw	r24, r22
    251a:	89 ab       	std	Y+49, r24	; 0x31
    251c:	9a ab       	std	Y+50, r25	; 0x32
    251e:	ab ab       	std	Y+51, r26	; 0x33
    2520:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2522:	69 a9       	ldd	r22, Y+49	; 0x31
    2524:	7a a9       	ldd	r23, Y+50	; 0x32
    2526:	8b a9       	ldd	r24, Y+51	; 0x33
    2528:	9c a9       	ldd	r25, Y+52	; 0x34
    252a:	20 e0       	ldi	r18, 0x00	; 0
    252c:	30 e0       	ldi	r19, 0x00	; 0
    252e:	40 e8       	ldi	r20, 0x80	; 128
    2530:	5f e3       	ldi	r21, 0x3F	; 63
    2532:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2536:	88 23       	and	r24, r24
    2538:	2c f4       	brge	.+10     	; 0x2544 <MODE_3+0x756>
		__ticks = 1;
    253a:	81 e0       	ldi	r24, 0x01	; 1
    253c:	90 e0       	ldi	r25, 0x00	; 0
    253e:	98 ab       	std	Y+48, r25	; 0x30
    2540:	8f a7       	std	Y+47, r24	; 0x2f
    2542:	3f c0       	rjmp	.+126    	; 0x25c2 <MODE_3+0x7d4>
	else if (__tmp > 65535)
    2544:	69 a9       	ldd	r22, Y+49	; 0x31
    2546:	7a a9       	ldd	r23, Y+50	; 0x32
    2548:	8b a9       	ldd	r24, Y+51	; 0x33
    254a:	9c a9       	ldd	r25, Y+52	; 0x34
    254c:	20 e0       	ldi	r18, 0x00	; 0
    254e:	3f ef       	ldi	r19, 0xFF	; 255
    2550:	4f e7       	ldi	r20, 0x7F	; 127
    2552:	57 e4       	ldi	r21, 0x47	; 71
    2554:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2558:	18 16       	cp	r1, r24
    255a:	4c f5       	brge	.+82     	; 0x25ae <MODE_3+0x7c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    255c:	6d a9       	ldd	r22, Y+53	; 0x35
    255e:	7e a9       	ldd	r23, Y+54	; 0x36
    2560:	8f a9       	ldd	r24, Y+55	; 0x37
    2562:	98 ad       	ldd	r25, Y+56	; 0x38
    2564:	20 e0       	ldi	r18, 0x00	; 0
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	40 e2       	ldi	r20, 0x20	; 32
    256a:	51 e4       	ldi	r21, 0x41	; 65
    256c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2570:	dc 01       	movw	r26, r24
    2572:	cb 01       	movw	r24, r22
    2574:	bc 01       	movw	r22, r24
    2576:	cd 01       	movw	r24, r26
    2578:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    257c:	dc 01       	movw	r26, r24
    257e:	cb 01       	movw	r24, r22
    2580:	98 ab       	std	Y+48, r25	; 0x30
    2582:	8f a7       	std	Y+47, r24	; 0x2f
    2584:	0f c0       	rjmp	.+30     	; 0x25a4 <MODE_3+0x7b6>
    2586:	88 ec       	ldi	r24, 0xC8	; 200
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	9e a7       	std	Y+46, r25	; 0x2e
    258c:	8d a7       	std	Y+45, r24	; 0x2d
    258e:	8d a5       	ldd	r24, Y+45	; 0x2d
    2590:	9e a5       	ldd	r25, Y+46	; 0x2e
    2592:	01 97       	sbiw	r24, 0x01	; 1
    2594:	f1 f7       	brne	.-4      	; 0x2592 <MODE_3+0x7a4>
    2596:	9e a7       	std	Y+46, r25	; 0x2e
    2598:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    259a:	8f a5       	ldd	r24, Y+47	; 0x2f
    259c:	98 a9       	ldd	r25, Y+48	; 0x30
    259e:	01 97       	sbiw	r24, 0x01	; 1
    25a0:	98 ab       	std	Y+48, r25	; 0x30
    25a2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25a4:	8f a5       	ldd	r24, Y+47	; 0x2f
    25a6:	98 a9       	ldd	r25, Y+48	; 0x30
    25a8:	00 97       	sbiw	r24, 0x00	; 0
    25aa:	69 f7       	brne	.-38     	; 0x2586 <MODE_3+0x798>
    25ac:	14 c0       	rjmp	.+40     	; 0x25d6 <MODE_3+0x7e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25ae:	69 a9       	ldd	r22, Y+49	; 0x31
    25b0:	7a a9       	ldd	r23, Y+50	; 0x32
    25b2:	8b a9       	ldd	r24, Y+51	; 0x33
    25b4:	9c a9       	ldd	r25, Y+52	; 0x34
    25b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25ba:	dc 01       	movw	r26, r24
    25bc:	cb 01       	movw	r24, r22
    25be:	98 ab       	std	Y+48, r25	; 0x30
    25c0:	8f a7       	std	Y+47, r24	; 0x2f
    25c2:	8f a5       	ldd	r24, Y+47	; 0x2f
    25c4:	98 a9       	ldd	r25, Y+48	; 0x30
    25c6:	9c a7       	std	Y+44, r25	; 0x2c
    25c8:	8b a7       	std	Y+43, r24	; 0x2b
    25ca:	8b a5       	ldd	r24, Y+43	; 0x2b
    25cc:	9c a5       	ldd	r25, Y+44	; 0x2c
    25ce:	01 97       	sbiw	r24, 0x01	; 1
    25d0:	f1 f7       	brne	.-4      	; 0x25ce <MODE_3+0x7e0>
    25d2:	9c a7       	std	Y+44, r25	; 0x2c
    25d4:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED4, OFF);
    25d6:	83 e0       	ldi	r24, 0x03	; 3
    25d8:	60 e0       	ldi	r22, 0x00	; 0
    25da:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED3, ON);
    25de:	82 e0       	ldi	r24, 0x02	; 2
    25e0:	61 e0       	ldi	r22, 0x01	; 1
    25e2:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    25e6:	80 e0       	ldi	r24, 0x00	; 0
    25e8:	90 e0       	ldi	r25, 0x00	; 0
    25ea:	a0 e2       	ldi	r26, 0x20	; 32
    25ec:	b1 e4       	ldi	r27, 0x41	; 65
    25ee:	8f a3       	std	Y+39, r24	; 0x27
    25f0:	98 a7       	std	Y+40, r25	; 0x28
    25f2:	a9 a7       	std	Y+41, r26	; 0x29
    25f4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25f6:	6f a1       	ldd	r22, Y+39	; 0x27
    25f8:	78 a5       	ldd	r23, Y+40	; 0x28
    25fa:	89 a5       	ldd	r24, Y+41	; 0x29
    25fc:	9a a5       	ldd	r25, Y+42	; 0x2a
    25fe:	20 e0       	ldi	r18, 0x00	; 0
    2600:	30 e0       	ldi	r19, 0x00	; 0
    2602:	4a ef       	ldi	r20, 0xFA	; 250
    2604:	54 e4       	ldi	r21, 0x44	; 68
    2606:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    260a:	dc 01       	movw	r26, r24
    260c:	cb 01       	movw	r24, r22
    260e:	8b a3       	std	Y+35, r24	; 0x23
    2610:	9c a3       	std	Y+36, r25	; 0x24
    2612:	ad a3       	std	Y+37, r26	; 0x25
    2614:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2616:	6b a1       	ldd	r22, Y+35	; 0x23
    2618:	7c a1       	ldd	r23, Y+36	; 0x24
    261a:	8d a1       	ldd	r24, Y+37	; 0x25
    261c:	9e a1       	ldd	r25, Y+38	; 0x26
    261e:	20 e0       	ldi	r18, 0x00	; 0
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	40 e8       	ldi	r20, 0x80	; 128
    2624:	5f e3       	ldi	r21, 0x3F	; 63
    2626:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    262a:	88 23       	and	r24, r24
    262c:	2c f4       	brge	.+10     	; 0x2638 <MODE_3+0x84a>
		__ticks = 1;
    262e:	81 e0       	ldi	r24, 0x01	; 1
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	9a a3       	std	Y+34, r25	; 0x22
    2634:	89 a3       	std	Y+33, r24	; 0x21
    2636:	3f c0       	rjmp	.+126    	; 0x26b6 <MODE_3+0x8c8>
	else if (__tmp > 65535)
    2638:	6b a1       	ldd	r22, Y+35	; 0x23
    263a:	7c a1       	ldd	r23, Y+36	; 0x24
    263c:	8d a1       	ldd	r24, Y+37	; 0x25
    263e:	9e a1       	ldd	r25, Y+38	; 0x26
    2640:	20 e0       	ldi	r18, 0x00	; 0
    2642:	3f ef       	ldi	r19, 0xFF	; 255
    2644:	4f e7       	ldi	r20, 0x7F	; 127
    2646:	57 e4       	ldi	r21, 0x47	; 71
    2648:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    264c:	18 16       	cp	r1, r24
    264e:	4c f5       	brge	.+82     	; 0x26a2 <MODE_3+0x8b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2650:	6f a1       	ldd	r22, Y+39	; 0x27
    2652:	78 a5       	ldd	r23, Y+40	; 0x28
    2654:	89 a5       	ldd	r24, Y+41	; 0x29
    2656:	9a a5       	ldd	r25, Y+42	; 0x2a
    2658:	20 e0       	ldi	r18, 0x00	; 0
    265a:	30 e0       	ldi	r19, 0x00	; 0
    265c:	40 e2       	ldi	r20, 0x20	; 32
    265e:	51 e4       	ldi	r21, 0x41	; 65
    2660:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2664:	dc 01       	movw	r26, r24
    2666:	cb 01       	movw	r24, r22
    2668:	bc 01       	movw	r22, r24
    266a:	cd 01       	movw	r24, r26
    266c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2670:	dc 01       	movw	r26, r24
    2672:	cb 01       	movw	r24, r22
    2674:	9a a3       	std	Y+34, r25	; 0x22
    2676:	89 a3       	std	Y+33, r24	; 0x21
    2678:	0f c0       	rjmp	.+30     	; 0x2698 <MODE_3+0x8aa>
    267a:	88 ec       	ldi	r24, 0xC8	; 200
    267c:	90 e0       	ldi	r25, 0x00	; 0
    267e:	98 a3       	std	Y+32, r25	; 0x20
    2680:	8f 8f       	std	Y+31, r24	; 0x1f
    2682:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2684:	98 a1       	ldd	r25, Y+32	; 0x20
    2686:	01 97       	sbiw	r24, 0x01	; 1
    2688:	f1 f7       	brne	.-4      	; 0x2686 <MODE_3+0x898>
    268a:	98 a3       	std	Y+32, r25	; 0x20
    268c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    268e:	89 a1       	ldd	r24, Y+33	; 0x21
    2690:	9a a1       	ldd	r25, Y+34	; 0x22
    2692:	01 97       	sbiw	r24, 0x01	; 1
    2694:	9a a3       	std	Y+34, r25	; 0x22
    2696:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2698:	89 a1       	ldd	r24, Y+33	; 0x21
    269a:	9a a1       	ldd	r25, Y+34	; 0x22
    269c:	00 97       	sbiw	r24, 0x00	; 0
    269e:	69 f7       	brne	.-38     	; 0x267a <MODE_3+0x88c>
    26a0:	14 c0       	rjmp	.+40     	; 0x26ca <MODE_3+0x8dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26a2:	6b a1       	ldd	r22, Y+35	; 0x23
    26a4:	7c a1       	ldd	r23, Y+36	; 0x24
    26a6:	8d a1       	ldd	r24, Y+37	; 0x25
    26a8:	9e a1       	ldd	r25, Y+38	; 0x26
    26aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26ae:	dc 01       	movw	r26, r24
    26b0:	cb 01       	movw	r24, r22
    26b2:	9a a3       	std	Y+34, r25	; 0x22
    26b4:	89 a3       	std	Y+33, r24	; 0x21
    26b6:	89 a1       	ldd	r24, Y+33	; 0x21
    26b8:	9a a1       	ldd	r25, Y+34	; 0x22
    26ba:	9e 8f       	std	Y+30, r25	; 0x1e
    26bc:	8d 8f       	std	Y+29, r24	; 0x1d
    26be:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26c0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    26c2:	01 97       	sbiw	r24, 0x01	; 1
    26c4:	f1 f7       	brne	.-4      	; 0x26c2 <MODE_3+0x8d4>
    26c6:	9e 8f       	std	Y+30, r25	; 0x1e
    26c8:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED3, OFF);
    26ca:	82 e0       	ldi	r24, 0x02	; 2
    26cc:	60 e0       	ldi	r22, 0x00	; 0
    26ce:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED2, ON);
    26d2:	81 e0       	ldi	r24, 0x01	; 1
    26d4:	61 e0       	ldi	r22, 0x01	; 1
    26d6:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    26da:	80 e0       	ldi	r24, 0x00	; 0
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	a0 e2       	ldi	r26, 0x20	; 32
    26e0:	b1 e4       	ldi	r27, 0x41	; 65
    26e2:	89 8f       	std	Y+25, r24	; 0x19
    26e4:	9a 8f       	std	Y+26, r25	; 0x1a
    26e6:	ab 8f       	std	Y+27, r26	; 0x1b
    26e8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26ea:	69 8d       	ldd	r22, Y+25	; 0x19
    26ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26f2:	20 e0       	ldi	r18, 0x00	; 0
    26f4:	30 e0       	ldi	r19, 0x00	; 0
    26f6:	4a ef       	ldi	r20, 0xFA	; 250
    26f8:	54 e4       	ldi	r21, 0x44	; 68
    26fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26fe:	dc 01       	movw	r26, r24
    2700:	cb 01       	movw	r24, r22
    2702:	8d 8b       	std	Y+21, r24	; 0x15
    2704:	9e 8b       	std	Y+22, r25	; 0x16
    2706:	af 8b       	std	Y+23, r26	; 0x17
    2708:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    270a:	6d 89       	ldd	r22, Y+21	; 0x15
    270c:	7e 89       	ldd	r23, Y+22	; 0x16
    270e:	8f 89       	ldd	r24, Y+23	; 0x17
    2710:	98 8d       	ldd	r25, Y+24	; 0x18
    2712:	20 e0       	ldi	r18, 0x00	; 0
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	40 e8       	ldi	r20, 0x80	; 128
    2718:	5f e3       	ldi	r21, 0x3F	; 63
    271a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    271e:	88 23       	and	r24, r24
    2720:	2c f4       	brge	.+10     	; 0x272c <MODE_3+0x93e>
		__ticks = 1;
    2722:	81 e0       	ldi	r24, 0x01	; 1
    2724:	90 e0       	ldi	r25, 0x00	; 0
    2726:	9c 8b       	std	Y+20, r25	; 0x14
    2728:	8b 8b       	std	Y+19, r24	; 0x13
    272a:	3f c0       	rjmp	.+126    	; 0x27aa <MODE_3+0x9bc>
	else if (__tmp > 65535)
    272c:	6d 89       	ldd	r22, Y+21	; 0x15
    272e:	7e 89       	ldd	r23, Y+22	; 0x16
    2730:	8f 89       	ldd	r24, Y+23	; 0x17
    2732:	98 8d       	ldd	r25, Y+24	; 0x18
    2734:	20 e0       	ldi	r18, 0x00	; 0
    2736:	3f ef       	ldi	r19, 0xFF	; 255
    2738:	4f e7       	ldi	r20, 0x7F	; 127
    273a:	57 e4       	ldi	r21, 0x47	; 71
    273c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2740:	18 16       	cp	r1, r24
    2742:	4c f5       	brge	.+82     	; 0x2796 <MODE_3+0x9a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2744:	69 8d       	ldd	r22, Y+25	; 0x19
    2746:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2748:	8b 8d       	ldd	r24, Y+27	; 0x1b
    274a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    274c:	20 e0       	ldi	r18, 0x00	; 0
    274e:	30 e0       	ldi	r19, 0x00	; 0
    2750:	40 e2       	ldi	r20, 0x20	; 32
    2752:	51 e4       	ldi	r21, 0x41	; 65
    2754:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2758:	dc 01       	movw	r26, r24
    275a:	cb 01       	movw	r24, r22
    275c:	bc 01       	movw	r22, r24
    275e:	cd 01       	movw	r24, r26
    2760:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2764:	dc 01       	movw	r26, r24
    2766:	cb 01       	movw	r24, r22
    2768:	9c 8b       	std	Y+20, r25	; 0x14
    276a:	8b 8b       	std	Y+19, r24	; 0x13
    276c:	0f c0       	rjmp	.+30     	; 0x278c <MODE_3+0x99e>
    276e:	88 ec       	ldi	r24, 0xC8	; 200
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	9a 8b       	std	Y+18, r25	; 0x12
    2774:	89 8b       	std	Y+17, r24	; 0x11
    2776:	89 89       	ldd	r24, Y+17	; 0x11
    2778:	9a 89       	ldd	r25, Y+18	; 0x12
    277a:	01 97       	sbiw	r24, 0x01	; 1
    277c:	f1 f7       	brne	.-4      	; 0x277a <MODE_3+0x98c>
    277e:	9a 8b       	std	Y+18, r25	; 0x12
    2780:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2782:	8b 89       	ldd	r24, Y+19	; 0x13
    2784:	9c 89       	ldd	r25, Y+20	; 0x14
    2786:	01 97       	sbiw	r24, 0x01	; 1
    2788:	9c 8b       	std	Y+20, r25	; 0x14
    278a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    278c:	8b 89       	ldd	r24, Y+19	; 0x13
    278e:	9c 89       	ldd	r25, Y+20	; 0x14
    2790:	00 97       	sbiw	r24, 0x00	; 0
    2792:	69 f7       	brne	.-38     	; 0x276e <MODE_3+0x980>
    2794:	14 c0       	rjmp	.+40     	; 0x27be <MODE_3+0x9d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2796:	6d 89       	ldd	r22, Y+21	; 0x15
    2798:	7e 89       	ldd	r23, Y+22	; 0x16
    279a:	8f 89       	ldd	r24, Y+23	; 0x17
    279c:	98 8d       	ldd	r25, Y+24	; 0x18
    279e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27a2:	dc 01       	movw	r26, r24
    27a4:	cb 01       	movw	r24, r22
    27a6:	9c 8b       	std	Y+20, r25	; 0x14
    27a8:	8b 8b       	std	Y+19, r24	; 0x13
    27aa:	8b 89       	ldd	r24, Y+19	; 0x13
    27ac:	9c 89       	ldd	r25, Y+20	; 0x14
    27ae:	98 8b       	std	Y+16, r25	; 0x10
    27b0:	8f 87       	std	Y+15, r24	; 0x0f
    27b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    27b4:	98 89       	ldd	r25, Y+16	; 0x10
    27b6:	01 97       	sbiw	r24, 0x01	; 1
    27b8:	f1 f7       	brne	.-4      	; 0x27b6 <MODE_3+0x9c8>
    27ba:	98 8b       	std	Y+16, r25	; 0x10
    27bc:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED2, OFF);
    27be:	81 e0       	ldi	r24, 0x01	; 1
    27c0:	60 e0       	ldi	r22, 0x00	; 0
    27c2:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED1, ON);
    27c6:	80 e0       	ldi	r24, 0x00	; 0
    27c8:	61 e0       	ldi	r22, 0x01	; 1
    27ca:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    27ce:	80 e0       	ldi	r24, 0x00	; 0
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	aa e7       	ldi	r26, 0x7A	; 122
    27d4:	b3 e4       	ldi	r27, 0x43	; 67
    27d6:	8b 87       	std	Y+11, r24	; 0x0b
    27d8:	9c 87       	std	Y+12, r25	; 0x0c
    27da:	ad 87       	std	Y+13, r26	; 0x0d
    27dc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27de:	6b 85       	ldd	r22, Y+11	; 0x0b
    27e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    27e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    27e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    27e6:	20 e0       	ldi	r18, 0x00	; 0
    27e8:	30 e0       	ldi	r19, 0x00	; 0
    27ea:	4a ef       	ldi	r20, 0xFA	; 250
    27ec:	54 e4       	ldi	r21, 0x44	; 68
    27ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27f2:	dc 01       	movw	r26, r24
    27f4:	cb 01       	movw	r24, r22
    27f6:	8f 83       	std	Y+7, r24	; 0x07
    27f8:	98 87       	std	Y+8, r25	; 0x08
    27fa:	a9 87       	std	Y+9, r26	; 0x09
    27fc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27fe:	6f 81       	ldd	r22, Y+7	; 0x07
    2800:	78 85       	ldd	r23, Y+8	; 0x08
    2802:	89 85       	ldd	r24, Y+9	; 0x09
    2804:	9a 85       	ldd	r25, Y+10	; 0x0a
    2806:	20 e0       	ldi	r18, 0x00	; 0
    2808:	30 e0       	ldi	r19, 0x00	; 0
    280a:	40 e8       	ldi	r20, 0x80	; 128
    280c:	5f e3       	ldi	r21, 0x3F	; 63
    280e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2812:	88 23       	and	r24, r24
    2814:	2c f4       	brge	.+10     	; 0x2820 <MODE_3+0xa32>
		__ticks = 1;
    2816:	81 e0       	ldi	r24, 0x01	; 1
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	9e 83       	std	Y+6, r25	; 0x06
    281c:	8d 83       	std	Y+5, r24	; 0x05
    281e:	3f c0       	rjmp	.+126    	; 0x289e <MODE_3+0xab0>
	else if (__tmp > 65535)
    2820:	6f 81       	ldd	r22, Y+7	; 0x07
    2822:	78 85       	ldd	r23, Y+8	; 0x08
    2824:	89 85       	ldd	r24, Y+9	; 0x09
    2826:	9a 85       	ldd	r25, Y+10	; 0x0a
    2828:	20 e0       	ldi	r18, 0x00	; 0
    282a:	3f ef       	ldi	r19, 0xFF	; 255
    282c:	4f e7       	ldi	r20, 0x7F	; 127
    282e:	57 e4       	ldi	r21, 0x47	; 71
    2830:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2834:	18 16       	cp	r1, r24
    2836:	4c f5       	brge	.+82     	; 0x288a <MODE_3+0xa9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2838:	6b 85       	ldd	r22, Y+11	; 0x0b
    283a:	7c 85       	ldd	r23, Y+12	; 0x0c
    283c:	8d 85       	ldd	r24, Y+13	; 0x0d
    283e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2840:	20 e0       	ldi	r18, 0x00	; 0
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	40 e2       	ldi	r20, 0x20	; 32
    2846:	51 e4       	ldi	r21, 0x41	; 65
    2848:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    284c:	dc 01       	movw	r26, r24
    284e:	cb 01       	movw	r24, r22
    2850:	bc 01       	movw	r22, r24
    2852:	cd 01       	movw	r24, r26
    2854:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2858:	dc 01       	movw	r26, r24
    285a:	cb 01       	movw	r24, r22
    285c:	9e 83       	std	Y+6, r25	; 0x06
    285e:	8d 83       	std	Y+5, r24	; 0x05
    2860:	0f c0       	rjmp	.+30     	; 0x2880 <MODE_3+0xa92>
    2862:	88 ec       	ldi	r24, 0xC8	; 200
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	9c 83       	std	Y+4, r25	; 0x04
    2868:	8b 83       	std	Y+3, r24	; 0x03
    286a:	8b 81       	ldd	r24, Y+3	; 0x03
    286c:	9c 81       	ldd	r25, Y+4	; 0x04
    286e:	01 97       	sbiw	r24, 0x01	; 1
    2870:	f1 f7       	brne	.-4      	; 0x286e <MODE_3+0xa80>
    2872:	9c 83       	std	Y+4, r25	; 0x04
    2874:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2876:	8d 81       	ldd	r24, Y+5	; 0x05
    2878:	9e 81       	ldd	r25, Y+6	; 0x06
    287a:	01 97       	sbiw	r24, 0x01	; 1
    287c:	9e 83       	std	Y+6, r25	; 0x06
    287e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2880:	8d 81       	ldd	r24, Y+5	; 0x05
    2882:	9e 81       	ldd	r25, Y+6	; 0x06
    2884:	00 97       	sbiw	r24, 0x00	; 0
    2886:	69 f7       	brne	.-38     	; 0x2862 <MODE_3+0xa74>
    2888:	14 c0       	rjmp	.+40     	; 0x28b2 <MODE_3+0xac4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    288a:	6f 81       	ldd	r22, Y+7	; 0x07
    288c:	78 85       	ldd	r23, Y+8	; 0x08
    288e:	89 85       	ldd	r24, Y+9	; 0x09
    2890:	9a 85       	ldd	r25, Y+10	; 0x0a
    2892:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2896:	dc 01       	movw	r26, r24
    2898:	cb 01       	movw	r24, r22
    289a:	9e 83       	std	Y+6, r25	; 0x06
    289c:	8d 83       	std	Y+5, r24	; 0x05
    289e:	8d 81       	ldd	r24, Y+5	; 0x05
    28a0:	9e 81       	ldd	r25, Y+6	; 0x06
    28a2:	9a 83       	std	Y+2, r25	; 0x02
    28a4:	89 83       	std	Y+1, r24	; 0x01
    28a6:	89 81       	ldd	r24, Y+1	; 0x01
    28a8:	9a 81       	ldd	r25, Y+2	; 0x02
    28aa:	01 97       	sbiw	r24, 0x01	; 1
    28ac:	f1 f7       	brne	.-4      	; 0x28aa <MODE_3+0xabc>
    28ae:	9a 83       	std	Y+2, r25	; 0x02
    28b0:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(250);
}/** @end MODE_3 */
    28b2:	c2 58       	subi	r28, 0x82	; 130
    28b4:	df 4f       	sbci	r29, 0xFF	; 255
    28b6:	0f b6       	in	r0, 0x3f	; 63
    28b8:	f8 94       	cli
    28ba:	de bf       	out	0x3e, r29	; 62
    28bc:	0f be       	out	0x3f, r0	; 63
    28be:	cd bf       	out	0x3d, r28	; 61
    28c0:	cf 91       	pop	r28
    28c2:	df 91       	pop	r29
    28c4:	1f 91       	pop	r17
    28c6:	0f 91       	pop	r16
    28c8:	08 95       	ret

000028ca <MODE_4>:
/**
 * @brief function to implement mode 4
 */
static void MODE_4(void)
{
    28ca:	0f 93       	push	r16
    28cc:	1f 93       	push	r17
    28ce:	df 93       	push	r29
    28d0:	cf 93       	push	r28
    28d2:	cd b7       	in	r28, 0x3d	; 61
    28d4:	de b7       	in	r29, 0x3e	; 62
    28d6:	c0 57       	subi	r28, 0x70	; 112
    28d8:	d0 40       	sbci	r29, 0x00	; 0
    28da:	0f b6       	in	r0, 0x3f	; 63
    28dc:	f8 94       	cli
    28de:	de bf       	out	0x3e, r29	; 62
    28e0:	0f be       	out	0x3f, r0	; 63
    28e2:	cd bf       	out	0x3d, r28	; 61
	LED_CTRL(LED1, ON);
    28e4:	80 e0       	ldi	r24, 0x00	; 0
    28e6:	61 e0       	ldi	r22, 0x01	; 1
    28e8:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED8, ON);
    28ec:	87 e0       	ldi	r24, 0x07	; 7
    28ee:	61 e0       	ldi	r22, 0x01	; 1
    28f0:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    28f4:	fe 01       	movw	r30, r28
    28f6:	e3 59       	subi	r30, 0x93	; 147
    28f8:	ff 4f       	sbci	r31, 0xFF	; 255
    28fa:	80 e0       	ldi	r24, 0x00	; 0
    28fc:	90 e0       	ldi	r25, 0x00	; 0
    28fe:	a0 e2       	ldi	r26, 0x20	; 32
    2900:	b1 e4       	ldi	r27, 0x41	; 65
    2902:	80 83       	st	Z, r24
    2904:	91 83       	std	Z+1, r25	; 0x01
    2906:	a2 83       	std	Z+2, r26	; 0x02
    2908:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    290a:	8e 01       	movw	r16, r28
    290c:	07 59       	subi	r16, 0x97	; 151
    290e:	1f 4f       	sbci	r17, 0xFF	; 255
    2910:	fe 01       	movw	r30, r28
    2912:	e3 59       	subi	r30, 0x93	; 147
    2914:	ff 4f       	sbci	r31, 0xFF	; 255
    2916:	60 81       	ld	r22, Z
    2918:	71 81       	ldd	r23, Z+1	; 0x01
    291a:	82 81       	ldd	r24, Z+2	; 0x02
    291c:	93 81       	ldd	r25, Z+3	; 0x03
    291e:	20 e0       	ldi	r18, 0x00	; 0
    2920:	30 e0       	ldi	r19, 0x00	; 0
    2922:	4a ef       	ldi	r20, 0xFA	; 250
    2924:	54 e4       	ldi	r21, 0x44	; 68
    2926:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    292a:	dc 01       	movw	r26, r24
    292c:	cb 01       	movw	r24, r22
    292e:	f8 01       	movw	r30, r16
    2930:	80 83       	st	Z, r24
    2932:	91 83       	std	Z+1, r25	; 0x01
    2934:	a2 83       	std	Z+2, r26	; 0x02
    2936:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2938:	fe 01       	movw	r30, r28
    293a:	e7 59       	subi	r30, 0x97	; 151
    293c:	ff 4f       	sbci	r31, 0xFF	; 255
    293e:	60 81       	ld	r22, Z
    2940:	71 81       	ldd	r23, Z+1	; 0x01
    2942:	82 81       	ldd	r24, Z+2	; 0x02
    2944:	93 81       	ldd	r25, Z+3	; 0x03
    2946:	20 e0       	ldi	r18, 0x00	; 0
    2948:	30 e0       	ldi	r19, 0x00	; 0
    294a:	40 e8       	ldi	r20, 0x80	; 128
    294c:	5f e3       	ldi	r21, 0x3F	; 63
    294e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2952:	88 23       	and	r24, r24
    2954:	44 f4       	brge	.+16     	; 0x2966 <MODE_4+0x9c>
		__ticks = 1;
    2956:	fe 01       	movw	r30, r28
    2958:	e9 59       	subi	r30, 0x99	; 153
    295a:	ff 4f       	sbci	r31, 0xFF	; 255
    295c:	81 e0       	ldi	r24, 0x01	; 1
    295e:	90 e0       	ldi	r25, 0x00	; 0
    2960:	91 83       	std	Z+1, r25	; 0x01
    2962:	80 83       	st	Z, r24
    2964:	64 c0       	rjmp	.+200    	; 0x2a2e <MODE_4+0x164>
	else if (__tmp > 65535)
    2966:	fe 01       	movw	r30, r28
    2968:	e7 59       	subi	r30, 0x97	; 151
    296a:	ff 4f       	sbci	r31, 0xFF	; 255
    296c:	60 81       	ld	r22, Z
    296e:	71 81       	ldd	r23, Z+1	; 0x01
    2970:	82 81       	ldd	r24, Z+2	; 0x02
    2972:	93 81       	ldd	r25, Z+3	; 0x03
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	3f ef       	ldi	r19, 0xFF	; 255
    2978:	4f e7       	ldi	r20, 0x7F	; 127
    297a:	57 e4       	ldi	r21, 0x47	; 71
    297c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2980:	18 16       	cp	r1, r24
    2982:	0c f0       	brlt	.+2      	; 0x2986 <MODE_4+0xbc>
    2984:	43 c0       	rjmp	.+134    	; 0x2a0c <MODE_4+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2986:	fe 01       	movw	r30, r28
    2988:	e3 59       	subi	r30, 0x93	; 147
    298a:	ff 4f       	sbci	r31, 0xFF	; 255
    298c:	60 81       	ld	r22, Z
    298e:	71 81       	ldd	r23, Z+1	; 0x01
    2990:	82 81       	ldd	r24, Z+2	; 0x02
    2992:	93 81       	ldd	r25, Z+3	; 0x03
    2994:	20 e0       	ldi	r18, 0x00	; 0
    2996:	30 e0       	ldi	r19, 0x00	; 0
    2998:	40 e2       	ldi	r20, 0x20	; 32
    299a:	51 e4       	ldi	r21, 0x41	; 65
    299c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29a0:	dc 01       	movw	r26, r24
    29a2:	cb 01       	movw	r24, r22
    29a4:	8e 01       	movw	r16, r28
    29a6:	09 59       	subi	r16, 0x99	; 153
    29a8:	1f 4f       	sbci	r17, 0xFF	; 255
    29aa:	bc 01       	movw	r22, r24
    29ac:	cd 01       	movw	r24, r26
    29ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29b2:	dc 01       	movw	r26, r24
    29b4:	cb 01       	movw	r24, r22
    29b6:	f8 01       	movw	r30, r16
    29b8:	91 83       	std	Z+1, r25	; 0x01
    29ba:	80 83       	st	Z, r24
    29bc:	1f c0       	rjmp	.+62     	; 0x29fc <MODE_4+0x132>
    29be:	fe 01       	movw	r30, r28
    29c0:	eb 59       	subi	r30, 0x9B	; 155
    29c2:	ff 4f       	sbci	r31, 0xFF	; 255
    29c4:	88 ec       	ldi	r24, 0xC8	; 200
    29c6:	90 e0       	ldi	r25, 0x00	; 0
    29c8:	91 83       	std	Z+1, r25	; 0x01
    29ca:	80 83       	st	Z, r24
    29cc:	fe 01       	movw	r30, r28
    29ce:	eb 59       	subi	r30, 0x9B	; 155
    29d0:	ff 4f       	sbci	r31, 0xFF	; 255
    29d2:	80 81       	ld	r24, Z
    29d4:	91 81       	ldd	r25, Z+1	; 0x01
    29d6:	01 97       	sbiw	r24, 0x01	; 1
    29d8:	f1 f7       	brne	.-4      	; 0x29d6 <MODE_4+0x10c>
    29da:	fe 01       	movw	r30, r28
    29dc:	eb 59       	subi	r30, 0x9B	; 155
    29de:	ff 4f       	sbci	r31, 0xFF	; 255
    29e0:	91 83       	std	Z+1, r25	; 0x01
    29e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29e4:	de 01       	movw	r26, r28
    29e6:	a9 59       	subi	r26, 0x99	; 153
    29e8:	bf 4f       	sbci	r27, 0xFF	; 255
    29ea:	fe 01       	movw	r30, r28
    29ec:	e9 59       	subi	r30, 0x99	; 153
    29ee:	ff 4f       	sbci	r31, 0xFF	; 255
    29f0:	80 81       	ld	r24, Z
    29f2:	91 81       	ldd	r25, Z+1	; 0x01
    29f4:	01 97       	sbiw	r24, 0x01	; 1
    29f6:	11 96       	adiw	r26, 0x01	; 1
    29f8:	9c 93       	st	X, r25
    29fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29fc:	fe 01       	movw	r30, r28
    29fe:	e9 59       	subi	r30, 0x99	; 153
    2a00:	ff 4f       	sbci	r31, 0xFF	; 255
    2a02:	80 81       	ld	r24, Z
    2a04:	91 81       	ldd	r25, Z+1	; 0x01
    2a06:	00 97       	sbiw	r24, 0x00	; 0
    2a08:	d1 f6       	brne	.-76     	; 0x29be <MODE_4+0xf4>
    2a0a:	27 c0       	rjmp	.+78     	; 0x2a5a <MODE_4+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a0c:	8e 01       	movw	r16, r28
    2a0e:	09 59       	subi	r16, 0x99	; 153
    2a10:	1f 4f       	sbci	r17, 0xFF	; 255
    2a12:	fe 01       	movw	r30, r28
    2a14:	e7 59       	subi	r30, 0x97	; 151
    2a16:	ff 4f       	sbci	r31, 0xFF	; 255
    2a18:	60 81       	ld	r22, Z
    2a1a:	71 81       	ldd	r23, Z+1	; 0x01
    2a1c:	82 81       	ldd	r24, Z+2	; 0x02
    2a1e:	93 81       	ldd	r25, Z+3	; 0x03
    2a20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a24:	dc 01       	movw	r26, r24
    2a26:	cb 01       	movw	r24, r22
    2a28:	f8 01       	movw	r30, r16
    2a2a:	91 83       	std	Z+1, r25	; 0x01
    2a2c:	80 83       	st	Z, r24
    2a2e:	de 01       	movw	r26, r28
    2a30:	ad 59       	subi	r26, 0x9D	; 157
    2a32:	bf 4f       	sbci	r27, 0xFF	; 255
    2a34:	fe 01       	movw	r30, r28
    2a36:	e9 59       	subi	r30, 0x99	; 153
    2a38:	ff 4f       	sbci	r31, 0xFF	; 255
    2a3a:	80 81       	ld	r24, Z
    2a3c:	91 81       	ldd	r25, Z+1	; 0x01
    2a3e:	8d 93       	st	X+, r24
    2a40:	9c 93       	st	X, r25
    2a42:	fe 01       	movw	r30, r28
    2a44:	ed 59       	subi	r30, 0x9D	; 157
    2a46:	ff 4f       	sbci	r31, 0xFF	; 255
    2a48:	80 81       	ld	r24, Z
    2a4a:	91 81       	ldd	r25, Z+1	; 0x01
    2a4c:	01 97       	sbiw	r24, 0x01	; 1
    2a4e:	f1 f7       	brne	.-4      	; 0x2a4c <MODE_4+0x182>
    2a50:	fe 01       	movw	r30, r28
    2a52:	ed 59       	subi	r30, 0x9D	; 157
    2a54:	ff 4f       	sbci	r31, 0xFF	; 255
    2a56:	91 83       	std	Z+1, r25	; 0x01
    2a58:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED1, OFF);
    2a5a:	80 e0       	ldi	r24, 0x00	; 0
    2a5c:	60 e0       	ldi	r22, 0x00	; 0
    2a5e:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED8, OFF);
    2a62:	87 e0       	ldi	r24, 0x07	; 7
    2a64:	60 e0       	ldi	r22, 0x00	; 0
    2a66:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    2a6a:	fe 01       	movw	r30, r28
    2a6c:	e1 5a       	subi	r30, 0xA1	; 161
    2a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a70:	80 e0       	ldi	r24, 0x00	; 0
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	a0 e2       	ldi	r26, 0x20	; 32
    2a76:	b1 e4       	ldi	r27, 0x41	; 65
    2a78:	80 83       	st	Z, r24
    2a7a:	91 83       	std	Z+1, r25	; 0x01
    2a7c:	a2 83       	std	Z+2, r26	; 0x02
    2a7e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a80:	8e 01       	movw	r16, r28
    2a82:	05 5a       	subi	r16, 0xA5	; 165
    2a84:	1f 4f       	sbci	r17, 0xFF	; 255
    2a86:	fe 01       	movw	r30, r28
    2a88:	e1 5a       	subi	r30, 0xA1	; 161
    2a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8c:	60 81       	ld	r22, Z
    2a8e:	71 81       	ldd	r23, Z+1	; 0x01
    2a90:	82 81       	ldd	r24, Z+2	; 0x02
    2a92:	93 81       	ldd	r25, Z+3	; 0x03
    2a94:	20 e0       	ldi	r18, 0x00	; 0
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	4a ef       	ldi	r20, 0xFA	; 250
    2a9a:	54 e4       	ldi	r21, 0x44	; 68
    2a9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2aa0:	dc 01       	movw	r26, r24
    2aa2:	cb 01       	movw	r24, r22
    2aa4:	f8 01       	movw	r30, r16
    2aa6:	80 83       	st	Z, r24
    2aa8:	91 83       	std	Z+1, r25	; 0x01
    2aaa:	a2 83       	std	Z+2, r26	; 0x02
    2aac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2aae:	fe 01       	movw	r30, r28
    2ab0:	e5 5a       	subi	r30, 0xA5	; 165
    2ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab4:	60 81       	ld	r22, Z
    2ab6:	71 81       	ldd	r23, Z+1	; 0x01
    2ab8:	82 81       	ldd	r24, Z+2	; 0x02
    2aba:	93 81       	ldd	r25, Z+3	; 0x03
    2abc:	20 e0       	ldi	r18, 0x00	; 0
    2abe:	30 e0       	ldi	r19, 0x00	; 0
    2ac0:	40 e8       	ldi	r20, 0x80	; 128
    2ac2:	5f e3       	ldi	r21, 0x3F	; 63
    2ac4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ac8:	88 23       	and	r24, r24
    2aca:	44 f4       	brge	.+16     	; 0x2adc <MODE_4+0x212>
		__ticks = 1;
    2acc:	fe 01       	movw	r30, r28
    2ace:	e7 5a       	subi	r30, 0xA7	; 167
    2ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad2:	81 e0       	ldi	r24, 0x01	; 1
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	91 83       	std	Z+1, r25	; 0x01
    2ad8:	80 83       	st	Z, r24
    2ada:	64 c0       	rjmp	.+200    	; 0x2ba4 <MODE_4+0x2da>
	else if (__tmp > 65535)
    2adc:	fe 01       	movw	r30, r28
    2ade:	e5 5a       	subi	r30, 0xA5	; 165
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	60 81       	ld	r22, Z
    2ae4:	71 81       	ldd	r23, Z+1	; 0x01
    2ae6:	82 81       	ldd	r24, Z+2	; 0x02
    2ae8:	93 81       	ldd	r25, Z+3	; 0x03
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	3f ef       	ldi	r19, 0xFF	; 255
    2aee:	4f e7       	ldi	r20, 0x7F	; 127
    2af0:	57 e4       	ldi	r21, 0x47	; 71
    2af2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2af6:	18 16       	cp	r1, r24
    2af8:	0c f0       	brlt	.+2      	; 0x2afc <MODE_4+0x232>
    2afa:	43 c0       	rjmp	.+134    	; 0x2b82 <MODE_4+0x2b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2afc:	fe 01       	movw	r30, r28
    2afe:	e1 5a       	subi	r30, 0xA1	; 161
    2b00:	ff 4f       	sbci	r31, 0xFF	; 255
    2b02:	60 81       	ld	r22, Z
    2b04:	71 81       	ldd	r23, Z+1	; 0x01
    2b06:	82 81       	ldd	r24, Z+2	; 0x02
    2b08:	93 81       	ldd	r25, Z+3	; 0x03
    2b0a:	20 e0       	ldi	r18, 0x00	; 0
    2b0c:	30 e0       	ldi	r19, 0x00	; 0
    2b0e:	40 e2       	ldi	r20, 0x20	; 32
    2b10:	51 e4       	ldi	r21, 0x41	; 65
    2b12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b16:	dc 01       	movw	r26, r24
    2b18:	cb 01       	movw	r24, r22
    2b1a:	8e 01       	movw	r16, r28
    2b1c:	07 5a       	subi	r16, 0xA7	; 167
    2b1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b20:	bc 01       	movw	r22, r24
    2b22:	cd 01       	movw	r24, r26
    2b24:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b28:	dc 01       	movw	r26, r24
    2b2a:	cb 01       	movw	r24, r22
    2b2c:	f8 01       	movw	r30, r16
    2b2e:	91 83       	std	Z+1, r25	; 0x01
    2b30:	80 83       	st	Z, r24
    2b32:	1f c0       	rjmp	.+62     	; 0x2b72 <MODE_4+0x2a8>
    2b34:	fe 01       	movw	r30, r28
    2b36:	e9 5a       	subi	r30, 0xA9	; 169
    2b38:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3a:	88 ec       	ldi	r24, 0xC8	; 200
    2b3c:	90 e0       	ldi	r25, 0x00	; 0
    2b3e:	91 83       	std	Z+1, r25	; 0x01
    2b40:	80 83       	st	Z, r24
    2b42:	fe 01       	movw	r30, r28
    2b44:	e9 5a       	subi	r30, 0xA9	; 169
    2b46:	ff 4f       	sbci	r31, 0xFF	; 255
    2b48:	80 81       	ld	r24, Z
    2b4a:	91 81       	ldd	r25, Z+1	; 0x01
    2b4c:	01 97       	sbiw	r24, 0x01	; 1
    2b4e:	f1 f7       	brne	.-4      	; 0x2b4c <MODE_4+0x282>
    2b50:	fe 01       	movw	r30, r28
    2b52:	e9 5a       	subi	r30, 0xA9	; 169
    2b54:	ff 4f       	sbci	r31, 0xFF	; 255
    2b56:	91 83       	std	Z+1, r25	; 0x01
    2b58:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b5a:	de 01       	movw	r26, r28
    2b5c:	a7 5a       	subi	r26, 0xA7	; 167
    2b5e:	bf 4f       	sbci	r27, 0xFF	; 255
    2b60:	fe 01       	movw	r30, r28
    2b62:	e7 5a       	subi	r30, 0xA7	; 167
    2b64:	ff 4f       	sbci	r31, 0xFF	; 255
    2b66:	80 81       	ld	r24, Z
    2b68:	91 81       	ldd	r25, Z+1	; 0x01
    2b6a:	01 97       	sbiw	r24, 0x01	; 1
    2b6c:	11 96       	adiw	r26, 0x01	; 1
    2b6e:	9c 93       	st	X, r25
    2b70:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b72:	fe 01       	movw	r30, r28
    2b74:	e7 5a       	subi	r30, 0xA7	; 167
    2b76:	ff 4f       	sbci	r31, 0xFF	; 255
    2b78:	80 81       	ld	r24, Z
    2b7a:	91 81       	ldd	r25, Z+1	; 0x01
    2b7c:	00 97       	sbiw	r24, 0x00	; 0
    2b7e:	d1 f6       	brne	.-76     	; 0x2b34 <MODE_4+0x26a>
    2b80:	27 c0       	rjmp	.+78     	; 0x2bd0 <MODE_4+0x306>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b82:	8e 01       	movw	r16, r28
    2b84:	07 5a       	subi	r16, 0xA7	; 167
    2b86:	1f 4f       	sbci	r17, 0xFF	; 255
    2b88:	fe 01       	movw	r30, r28
    2b8a:	e5 5a       	subi	r30, 0xA5	; 165
    2b8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b8e:	60 81       	ld	r22, Z
    2b90:	71 81       	ldd	r23, Z+1	; 0x01
    2b92:	82 81       	ldd	r24, Z+2	; 0x02
    2b94:	93 81       	ldd	r25, Z+3	; 0x03
    2b96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b9a:	dc 01       	movw	r26, r24
    2b9c:	cb 01       	movw	r24, r22
    2b9e:	f8 01       	movw	r30, r16
    2ba0:	91 83       	std	Z+1, r25	; 0x01
    2ba2:	80 83       	st	Z, r24
    2ba4:	de 01       	movw	r26, r28
    2ba6:	ab 5a       	subi	r26, 0xAB	; 171
    2ba8:	bf 4f       	sbci	r27, 0xFF	; 255
    2baa:	fe 01       	movw	r30, r28
    2bac:	e7 5a       	subi	r30, 0xA7	; 167
    2bae:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb0:	80 81       	ld	r24, Z
    2bb2:	91 81       	ldd	r25, Z+1	; 0x01
    2bb4:	8d 93       	st	X+, r24
    2bb6:	9c 93       	st	X, r25
    2bb8:	fe 01       	movw	r30, r28
    2bba:	eb 5a       	subi	r30, 0xAB	; 171
    2bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbe:	80 81       	ld	r24, Z
    2bc0:	91 81       	ldd	r25, Z+1	; 0x01
    2bc2:	01 97       	sbiw	r24, 0x01	; 1
    2bc4:	f1 f7       	brne	.-4      	; 0x2bc2 <MODE_4+0x2f8>
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	eb 5a       	subi	r30, 0xAB	; 171
    2bca:	ff 4f       	sbci	r31, 0xFF	; 255
    2bcc:	91 83       	std	Z+1, r25	; 0x01
    2bce:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, ON);
    2bd0:	81 e0       	ldi	r24, 0x01	; 1
    2bd2:	61 e0       	ldi	r22, 0x01	; 1
    2bd4:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED7, ON);
    2bd8:	86 e0       	ldi	r24, 0x06	; 6
    2bda:	61 e0       	ldi	r22, 0x01	; 1
    2bdc:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    2be0:	fe 01       	movw	r30, r28
    2be2:	ef 5a       	subi	r30, 0xAF	; 175
    2be4:	ff 4f       	sbci	r31, 0xFF	; 255
    2be6:	80 e0       	ldi	r24, 0x00	; 0
    2be8:	90 e0       	ldi	r25, 0x00	; 0
    2bea:	a0 e2       	ldi	r26, 0x20	; 32
    2bec:	b1 e4       	ldi	r27, 0x41	; 65
    2bee:	80 83       	st	Z, r24
    2bf0:	91 83       	std	Z+1, r25	; 0x01
    2bf2:	a2 83       	std	Z+2, r26	; 0x02
    2bf4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bf6:	8e 01       	movw	r16, r28
    2bf8:	03 5b       	subi	r16, 0xB3	; 179
    2bfa:	1f 4f       	sbci	r17, 0xFF	; 255
    2bfc:	fe 01       	movw	r30, r28
    2bfe:	ef 5a       	subi	r30, 0xAF	; 175
    2c00:	ff 4f       	sbci	r31, 0xFF	; 255
    2c02:	60 81       	ld	r22, Z
    2c04:	71 81       	ldd	r23, Z+1	; 0x01
    2c06:	82 81       	ldd	r24, Z+2	; 0x02
    2c08:	93 81       	ldd	r25, Z+3	; 0x03
    2c0a:	20 e0       	ldi	r18, 0x00	; 0
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	4a ef       	ldi	r20, 0xFA	; 250
    2c10:	54 e4       	ldi	r21, 0x44	; 68
    2c12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c16:	dc 01       	movw	r26, r24
    2c18:	cb 01       	movw	r24, r22
    2c1a:	f8 01       	movw	r30, r16
    2c1c:	80 83       	st	Z, r24
    2c1e:	91 83       	std	Z+1, r25	; 0x01
    2c20:	a2 83       	std	Z+2, r26	; 0x02
    2c22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c24:	fe 01       	movw	r30, r28
    2c26:	e3 5b       	subi	r30, 0xB3	; 179
    2c28:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2a:	60 81       	ld	r22, Z
    2c2c:	71 81       	ldd	r23, Z+1	; 0x01
    2c2e:	82 81       	ldd	r24, Z+2	; 0x02
    2c30:	93 81       	ldd	r25, Z+3	; 0x03
    2c32:	20 e0       	ldi	r18, 0x00	; 0
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	40 e8       	ldi	r20, 0x80	; 128
    2c38:	5f e3       	ldi	r21, 0x3F	; 63
    2c3a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c3e:	88 23       	and	r24, r24
    2c40:	44 f4       	brge	.+16     	; 0x2c52 <MODE_4+0x388>
		__ticks = 1;
    2c42:	fe 01       	movw	r30, r28
    2c44:	e5 5b       	subi	r30, 0xB5	; 181
    2c46:	ff 4f       	sbci	r31, 0xFF	; 255
    2c48:	81 e0       	ldi	r24, 0x01	; 1
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	91 83       	std	Z+1, r25	; 0x01
    2c4e:	80 83       	st	Z, r24
    2c50:	64 c0       	rjmp	.+200    	; 0x2d1a <MODE_4+0x450>
	else if (__tmp > 65535)
    2c52:	fe 01       	movw	r30, r28
    2c54:	e3 5b       	subi	r30, 0xB3	; 179
    2c56:	ff 4f       	sbci	r31, 0xFF	; 255
    2c58:	60 81       	ld	r22, Z
    2c5a:	71 81       	ldd	r23, Z+1	; 0x01
    2c5c:	82 81       	ldd	r24, Z+2	; 0x02
    2c5e:	93 81       	ldd	r25, Z+3	; 0x03
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	3f ef       	ldi	r19, 0xFF	; 255
    2c64:	4f e7       	ldi	r20, 0x7F	; 127
    2c66:	57 e4       	ldi	r21, 0x47	; 71
    2c68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c6c:	18 16       	cp	r1, r24
    2c6e:	0c f0       	brlt	.+2      	; 0x2c72 <MODE_4+0x3a8>
    2c70:	43 c0       	rjmp	.+134    	; 0x2cf8 <MODE_4+0x42e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c72:	fe 01       	movw	r30, r28
    2c74:	ef 5a       	subi	r30, 0xAF	; 175
    2c76:	ff 4f       	sbci	r31, 0xFF	; 255
    2c78:	60 81       	ld	r22, Z
    2c7a:	71 81       	ldd	r23, Z+1	; 0x01
    2c7c:	82 81       	ldd	r24, Z+2	; 0x02
    2c7e:	93 81       	ldd	r25, Z+3	; 0x03
    2c80:	20 e0       	ldi	r18, 0x00	; 0
    2c82:	30 e0       	ldi	r19, 0x00	; 0
    2c84:	40 e2       	ldi	r20, 0x20	; 32
    2c86:	51 e4       	ldi	r21, 0x41	; 65
    2c88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c8c:	dc 01       	movw	r26, r24
    2c8e:	cb 01       	movw	r24, r22
    2c90:	8e 01       	movw	r16, r28
    2c92:	05 5b       	subi	r16, 0xB5	; 181
    2c94:	1f 4f       	sbci	r17, 0xFF	; 255
    2c96:	bc 01       	movw	r22, r24
    2c98:	cd 01       	movw	r24, r26
    2c9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c9e:	dc 01       	movw	r26, r24
    2ca0:	cb 01       	movw	r24, r22
    2ca2:	f8 01       	movw	r30, r16
    2ca4:	91 83       	std	Z+1, r25	; 0x01
    2ca6:	80 83       	st	Z, r24
    2ca8:	1f c0       	rjmp	.+62     	; 0x2ce8 <MODE_4+0x41e>
    2caa:	fe 01       	movw	r30, r28
    2cac:	e7 5b       	subi	r30, 0xB7	; 183
    2cae:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb0:	88 ec       	ldi	r24, 0xC8	; 200
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	91 83       	std	Z+1, r25	; 0x01
    2cb6:	80 83       	st	Z, r24
    2cb8:	fe 01       	movw	r30, r28
    2cba:	e7 5b       	subi	r30, 0xB7	; 183
    2cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbe:	80 81       	ld	r24, Z
    2cc0:	91 81       	ldd	r25, Z+1	; 0x01
    2cc2:	01 97       	sbiw	r24, 0x01	; 1
    2cc4:	f1 f7       	brne	.-4      	; 0x2cc2 <MODE_4+0x3f8>
    2cc6:	fe 01       	movw	r30, r28
    2cc8:	e7 5b       	subi	r30, 0xB7	; 183
    2cca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ccc:	91 83       	std	Z+1, r25	; 0x01
    2cce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cd0:	de 01       	movw	r26, r28
    2cd2:	a5 5b       	subi	r26, 0xB5	; 181
    2cd4:	bf 4f       	sbci	r27, 0xFF	; 255
    2cd6:	fe 01       	movw	r30, r28
    2cd8:	e5 5b       	subi	r30, 0xB5	; 181
    2cda:	ff 4f       	sbci	r31, 0xFF	; 255
    2cdc:	80 81       	ld	r24, Z
    2cde:	91 81       	ldd	r25, Z+1	; 0x01
    2ce0:	01 97       	sbiw	r24, 0x01	; 1
    2ce2:	11 96       	adiw	r26, 0x01	; 1
    2ce4:	9c 93       	st	X, r25
    2ce6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ce8:	fe 01       	movw	r30, r28
    2cea:	e5 5b       	subi	r30, 0xB5	; 181
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	80 81       	ld	r24, Z
    2cf0:	91 81       	ldd	r25, Z+1	; 0x01
    2cf2:	00 97       	sbiw	r24, 0x00	; 0
    2cf4:	d1 f6       	brne	.-76     	; 0x2caa <MODE_4+0x3e0>
    2cf6:	27 c0       	rjmp	.+78     	; 0x2d46 <MODE_4+0x47c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cf8:	8e 01       	movw	r16, r28
    2cfa:	05 5b       	subi	r16, 0xB5	; 181
    2cfc:	1f 4f       	sbci	r17, 0xFF	; 255
    2cfe:	fe 01       	movw	r30, r28
    2d00:	e3 5b       	subi	r30, 0xB3	; 179
    2d02:	ff 4f       	sbci	r31, 0xFF	; 255
    2d04:	60 81       	ld	r22, Z
    2d06:	71 81       	ldd	r23, Z+1	; 0x01
    2d08:	82 81       	ldd	r24, Z+2	; 0x02
    2d0a:	93 81       	ldd	r25, Z+3	; 0x03
    2d0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d10:	dc 01       	movw	r26, r24
    2d12:	cb 01       	movw	r24, r22
    2d14:	f8 01       	movw	r30, r16
    2d16:	91 83       	std	Z+1, r25	; 0x01
    2d18:	80 83       	st	Z, r24
    2d1a:	de 01       	movw	r26, r28
    2d1c:	a9 5b       	subi	r26, 0xB9	; 185
    2d1e:	bf 4f       	sbci	r27, 0xFF	; 255
    2d20:	fe 01       	movw	r30, r28
    2d22:	e5 5b       	subi	r30, 0xB5	; 181
    2d24:	ff 4f       	sbci	r31, 0xFF	; 255
    2d26:	80 81       	ld	r24, Z
    2d28:	91 81       	ldd	r25, Z+1	; 0x01
    2d2a:	8d 93       	st	X+, r24
    2d2c:	9c 93       	st	X, r25
    2d2e:	fe 01       	movw	r30, r28
    2d30:	e9 5b       	subi	r30, 0xB9	; 185
    2d32:	ff 4f       	sbci	r31, 0xFF	; 255
    2d34:	80 81       	ld	r24, Z
    2d36:	91 81       	ldd	r25, Z+1	; 0x01
    2d38:	01 97       	sbiw	r24, 0x01	; 1
    2d3a:	f1 f7       	brne	.-4      	; 0x2d38 <MODE_4+0x46e>
    2d3c:	fe 01       	movw	r30, r28
    2d3e:	e9 5b       	subi	r30, 0xB9	; 185
    2d40:	ff 4f       	sbci	r31, 0xFF	; 255
    2d42:	91 83       	std	Z+1, r25	; 0x01
    2d44:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, OFF);
    2d46:	81 e0       	ldi	r24, 0x01	; 1
    2d48:	60 e0       	ldi	r22, 0x00	; 0
    2d4a:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED7, OFF);
    2d4e:	86 e0       	ldi	r24, 0x06	; 6
    2d50:	60 e0       	ldi	r22, 0x00	; 0
    2d52:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    2d56:	fe 01       	movw	r30, r28
    2d58:	ed 5b       	subi	r30, 0xBD	; 189
    2d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5c:	80 e0       	ldi	r24, 0x00	; 0
    2d5e:	90 e0       	ldi	r25, 0x00	; 0
    2d60:	a0 e2       	ldi	r26, 0x20	; 32
    2d62:	b1 e4       	ldi	r27, 0x41	; 65
    2d64:	80 83       	st	Z, r24
    2d66:	91 83       	std	Z+1, r25	; 0x01
    2d68:	a2 83       	std	Z+2, r26	; 0x02
    2d6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d6c:	8e 01       	movw	r16, r28
    2d6e:	01 5c       	subi	r16, 0xC1	; 193
    2d70:	1f 4f       	sbci	r17, 0xFF	; 255
    2d72:	fe 01       	movw	r30, r28
    2d74:	ed 5b       	subi	r30, 0xBD	; 189
    2d76:	ff 4f       	sbci	r31, 0xFF	; 255
    2d78:	60 81       	ld	r22, Z
    2d7a:	71 81       	ldd	r23, Z+1	; 0x01
    2d7c:	82 81       	ldd	r24, Z+2	; 0x02
    2d7e:	93 81       	ldd	r25, Z+3	; 0x03
    2d80:	20 e0       	ldi	r18, 0x00	; 0
    2d82:	30 e0       	ldi	r19, 0x00	; 0
    2d84:	4a ef       	ldi	r20, 0xFA	; 250
    2d86:	54 e4       	ldi	r21, 0x44	; 68
    2d88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d8c:	dc 01       	movw	r26, r24
    2d8e:	cb 01       	movw	r24, r22
    2d90:	f8 01       	movw	r30, r16
    2d92:	80 83       	st	Z, r24
    2d94:	91 83       	std	Z+1, r25	; 0x01
    2d96:	a2 83       	std	Z+2, r26	; 0x02
    2d98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d9a:	fe 01       	movw	r30, r28
    2d9c:	ff 96       	adiw	r30, 0x3f	; 63
    2d9e:	60 81       	ld	r22, Z
    2da0:	71 81       	ldd	r23, Z+1	; 0x01
    2da2:	82 81       	ldd	r24, Z+2	; 0x02
    2da4:	93 81       	ldd	r25, Z+3	; 0x03
    2da6:	20 e0       	ldi	r18, 0x00	; 0
    2da8:	30 e0       	ldi	r19, 0x00	; 0
    2daa:	40 e8       	ldi	r20, 0x80	; 128
    2dac:	5f e3       	ldi	r21, 0x3F	; 63
    2dae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2db2:	88 23       	and	r24, r24
    2db4:	2c f4       	brge	.+10     	; 0x2dc0 <MODE_4+0x4f6>
		__ticks = 1;
    2db6:	81 e0       	ldi	r24, 0x01	; 1
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	9e af       	std	Y+62, r25	; 0x3e
    2dbc:	8d af       	std	Y+61, r24	; 0x3d
    2dbe:	46 c0       	rjmp	.+140    	; 0x2e4c <MODE_4+0x582>
	else if (__tmp > 65535)
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	ff 96       	adiw	r30, 0x3f	; 63
    2dc4:	60 81       	ld	r22, Z
    2dc6:	71 81       	ldd	r23, Z+1	; 0x01
    2dc8:	82 81       	ldd	r24, Z+2	; 0x02
    2dca:	93 81       	ldd	r25, Z+3	; 0x03
    2dcc:	20 e0       	ldi	r18, 0x00	; 0
    2dce:	3f ef       	ldi	r19, 0xFF	; 255
    2dd0:	4f e7       	ldi	r20, 0x7F	; 127
    2dd2:	57 e4       	ldi	r21, 0x47	; 71
    2dd4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dd8:	18 16       	cp	r1, r24
    2dda:	64 f5       	brge	.+88     	; 0x2e34 <MODE_4+0x56a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ddc:	fe 01       	movw	r30, r28
    2dde:	ed 5b       	subi	r30, 0xBD	; 189
    2de0:	ff 4f       	sbci	r31, 0xFF	; 255
    2de2:	60 81       	ld	r22, Z
    2de4:	71 81       	ldd	r23, Z+1	; 0x01
    2de6:	82 81       	ldd	r24, Z+2	; 0x02
    2de8:	93 81       	ldd	r25, Z+3	; 0x03
    2dea:	20 e0       	ldi	r18, 0x00	; 0
    2dec:	30 e0       	ldi	r19, 0x00	; 0
    2dee:	40 e2       	ldi	r20, 0x20	; 32
    2df0:	51 e4       	ldi	r21, 0x41	; 65
    2df2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2df6:	dc 01       	movw	r26, r24
    2df8:	cb 01       	movw	r24, r22
    2dfa:	bc 01       	movw	r22, r24
    2dfc:	cd 01       	movw	r24, r26
    2dfe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e02:	dc 01       	movw	r26, r24
    2e04:	cb 01       	movw	r24, r22
    2e06:	9e af       	std	Y+62, r25	; 0x3e
    2e08:	8d af       	std	Y+61, r24	; 0x3d
    2e0a:	0f c0       	rjmp	.+30     	; 0x2e2a <MODE_4+0x560>
    2e0c:	88 ec       	ldi	r24, 0xC8	; 200
    2e0e:	90 e0       	ldi	r25, 0x00	; 0
    2e10:	9c af       	std	Y+60, r25	; 0x3c
    2e12:	8b af       	std	Y+59, r24	; 0x3b
    2e14:	8b ad       	ldd	r24, Y+59	; 0x3b
    2e16:	9c ad       	ldd	r25, Y+60	; 0x3c
    2e18:	01 97       	sbiw	r24, 0x01	; 1
    2e1a:	f1 f7       	brne	.-4      	; 0x2e18 <MODE_4+0x54e>
    2e1c:	9c af       	std	Y+60, r25	; 0x3c
    2e1e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e20:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e22:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e24:	01 97       	sbiw	r24, 0x01	; 1
    2e26:	9e af       	std	Y+62, r25	; 0x3e
    2e28:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e2a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e2c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e2e:	00 97       	sbiw	r24, 0x00	; 0
    2e30:	69 f7       	brne	.-38     	; 0x2e0c <MODE_4+0x542>
    2e32:	16 c0       	rjmp	.+44     	; 0x2e60 <MODE_4+0x596>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e34:	fe 01       	movw	r30, r28
    2e36:	ff 96       	adiw	r30, 0x3f	; 63
    2e38:	60 81       	ld	r22, Z
    2e3a:	71 81       	ldd	r23, Z+1	; 0x01
    2e3c:	82 81       	ldd	r24, Z+2	; 0x02
    2e3e:	93 81       	ldd	r25, Z+3	; 0x03
    2e40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e44:	dc 01       	movw	r26, r24
    2e46:	cb 01       	movw	r24, r22
    2e48:	9e af       	std	Y+62, r25	; 0x3e
    2e4a:	8d af       	std	Y+61, r24	; 0x3d
    2e4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e4e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e50:	9a af       	std	Y+58, r25	; 0x3a
    2e52:	89 af       	std	Y+57, r24	; 0x39
    2e54:	89 ad       	ldd	r24, Y+57	; 0x39
    2e56:	9a ad       	ldd	r25, Y+58	; 0x3a
    2e58:	01 97       	sbiw	r24, 0x01	; 1
    2e5a:	f1 f7       	brne	.-4      	; 0x2e58 <MODE_4+0x58e>
    2e5c:	9a af       	std	Y+58, r25	; 0x3a
    2e5e:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, ON);
    2e60:	82 e0       	ldi	r24, 0x02	; 2
    2e62:	61 e0       	ldi	r22, 0x01	; 1
    2e64:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED6, ON);
    2e68:	85 e0       	ldi	r24, 0x05	; 5
    2e6a:	61 e0       	ldi	r22, 0x01	; 1
    2e6c:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    2e70:	80 e0       	ldi	r24, 0x00	; 0
    2e72:	90 e0       	ldi	r25, 0x00	; 0
    2e74:	a0 e2       	ldi	r26, 0x20	; 32
    2e76:	b1 e4       	ldi	r27, 0x41	; 65
    2e78:	8d ab       	std	Y+53, r24	; 0x35
    2e7a:	9e ab       	std	Y+54, r25	; 0x36
    2e7c:	af ab       	std	Y+55, r26	; 0x37
    2e7e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e80:	6d a9       	ldd	r22, Y+53	; 0x35
    2e82:	7e a9       	ldd	r23, Y+54	; 0x36
    2e84:	8f a9       	ldd	r24, Y+55	; 0x37
    2e86:	98 ad       	ldd	r25, Y+56	; 0x38
    2e88:	20 e0       	ldi	r18, 0x00	; 0
    2e8a:	30 e0       	ldi	r19, 0x00	; 0
    2e8c:	4a ef       	ldi	r20, 0xFA	; 250
    2e8e:	54 e4       	ldi	r21, 0x44	; 68
    2e90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e94:	dc 01       	movw	r26, r24
    2e96:	cb 01       	movw	r24, r22
    2e98:	89 ab       	std	Y+49, r24	; 0x31
    2e9a:	9a ab       	std	Y+50, r25	; 0x32
    2e9c:	ab ab       	std	Y+51, r26	; 0x33
    2e9e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2ea0:	69 a9       	ldd	r22, Y+49	; 0x31
    2ea2:	7a a9       	ldd	r23, Y+50	; 0x32
    2ea4:	8b a9       	ldd	r24, Y+51	; 0x33
    2ea6:	9c a9       	ldd	r25, Y+52	; 0x34
    2ea8:	20 e0       	ldi	r18, 0x00	; 0
    2eaa:	30 e0       	ldi	r19, 0x00	; 0
    2eac:	40 e8       	ldi	r20, 0x80	; 128
    2eae:	5f e3       	ldi	r21, 0x3F	; 63
    2eb0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2eb4:	88 23       	and	r24, r24
    2eb6:	2c f4       	brge	.+10     	; 0x2ec2 <MODE_4+0x5f8>
		__ticks = 1;
    2eb8:	81 e0       	ldi	r24, 0x01	; 1
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	98 ab       	std	Y+48, r25	; 0x30
    2ebe:	8f a7       	std	Y+47, r24	; 0x2f
    2ec0:	3f c0       	rjmp	.+126    	; 0x2f40 <MODE_4+0x676>
	else if (__tmp > 65535)
    2ec2:	69 a9       	ldd	r22, Y+49	; 0x31
    2ec4:	7a a9       	ldd	r23, Y+50	; 0x32
    2ec6:	8b a9       	ldd	r24, Y+51	; 0x33
    2ec8:	9c a9       	ldd	r25, Y+52	; 0x34
    2eca:	20 e0       	ldi	r18, 0x00	; 0
    2ecc:	3f ef       	ldi	r19, 0xFF	; 255
    2ece:	4f e7       	ldi	r20, 0x7F	; 127
    2ed0:	57 e4       	ldi	r21, 0x47	; 71
    2ed2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ed6:	18 16       	cp	r1, r24
    2ed8:	4c f5       	brge	.+82     	; 0x2f2c <MODE_4+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eda:	6d a9       	ldd	r22, Y+53	; 0x35
    2edc:	7e a9       	ldd	r23, Y+54	; 0x36
    2ede:	8f a9       	ldd	r24, Y+55	; 0x37
    2ee0:	98 ad       	ldd	r25, Y+56	; 0x38
    2ee2:	20 e0       	ldi	r18, 0x00	; 0
    2ee4:	30 e0       	ldi	r19, 0x00	; 0
    2ee6:	40 e2       	ldi	r20, 0x20	; 32
    2ee8:	51 e4       	ldi	r21, 0x41	; 65
    2eea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eee:	dc 01       	movw	r26, r24
    2ef0:	cb 01       	movw	r24, r22
    2ef2:	bc 01       	movw	r22, r24
    2ef4:	cd 01       	movw	r24, r26
    2ef6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2efa:	dc 01       	movw	r26, r24
    2efc:	cb 01       	movw	r24, r22
    2efe:	98 ab       	std	Y+48, r25	; 0x30
    2f00:	8f a7       	std	Y+47, r24	; 0x2f
    2f02:	0f c0       	rjmp	.+30     	; 0x2f22 <MODE_4+0x658>
    2f04:	88 ec       	ldi	r24, 0xC8	; 200
    2f06:	90 e0       	ldi	r25, 0x00	; 0
    2f08:	9e a7       	std	Y+46, r25	; 0x2e
    2f0a:	8d a7       	std	Y+45, r24	; 0x2d
    2f0c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2f0e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2f10:	01 97       	sbiw	r24, 0x01	; 1
    2f12:	f1 f7       	brne	.-4      	; 0x2f10 <MODE_4+0x646>
    2f14:	9e a7       	std	Y+46, r25	; 0x2e
    2f16:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f18:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f1a:	98 a9       	ldd	r25, Y+48	; 0x30
    2f1c:	01 97       	sbiw	r24, 0x01	; 1
    2f1e:	98 ab       	std	Y+48, r25	; 0x30
    2f20:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f22:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f24:	98 a9       	ldd	r25, Y+48	; 0x30
    2f26:	00 97       	sbiw	r24, 0x00	; 0
    2f28:	69 f7       	brne	.-38     	; 0x2f04 <MODE_4+0x63a>
    2f2a:	14 c0       	rjmp	.+40     	; 0x2f54 <MODE_4+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f2c:	69 a9       	ldd	r22, Y+49	; 0x31
    2f2e:	7a a9       	ldd	r23, Y+50	; 0x32
    2f30:	8b a9       	ldd	r24, Y+51	; 0x33
    2f32:	9c a9       	ldd	r25, Y+52	; 0x34
    2f34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f38:	dc 01       	movw	r26, r24
    2f3a:	cb 01       	movw	r24, r22
    2f3c:	98 ab       	std	Y+48, r25	; 0x30
    2f3e:	8f a7       	std	Y+47, r24	; 0x2f
    2f40:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f42:	98 a9       	ldd	r25, Y+48	; 0x30
    2f44:	9c a7       	std	Y+44, r25	; 0x2c
    2f46:	8b a7       	std	Y+43, r24	; 0x2b
    2f48:	8b a5       	ldd	r24, Y+43	; 0x2b
    2f4a:	9c a5       	ldd	r25, Y+44	; 0x2c
    2f4c:	01 97       	sbiw	r24, 0x01	; 1
    2f4e:	f1 f7       	brne	.-4      	; 0x2f4c <MODE_4+0x682>
    2f50:	9c a7       	std	Y+44, r25	; 0x2c
    2f52:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, OFF);
    2f54:	82 e0       	ldi	r24, 0x02	; 2
    2f56:	60 e0       	ldi	r22, 0x00	; 0
    2f58:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED6, OFF);
    2f5c:	85 e0       	ldi	r24, 0x05	; 5
    2f5e:	60 e0       	ldi	r22, 0x00	; 0
    2f60:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    2f64:	80 e0       	ldi	r24, 0x00	; 0
    2f66:	90 e0       	ldi	r25, 0x00	; 0
    2f68:	a0 e2       	ldi	r26, 0x20	; 32
    2f6a:	b1 e4       	ldi	r27, 0x41	; 65
    2f6c:	8f a3       	std	Y+39, r24	; 0x27
    2f6e:	98 a7       	std	Y+40, r25	; 0x28
    2f70:	a9 a7       	std	Y+41, r26	; 0x29
    2f72:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f74:	6f a1       	ldd	r22, Y+39	; 0x27
    2f76:	78 a5       	ldd	r23, Y+40	; 0x28
    2f78:	89 a5       	ldd	r24, Y+41	; 0x29
    2f7a:	9a a5       	ldd	r25, Y+42	; 0x2a
    2f7c:	20 e0       	ldi	r18, 0x00	; 0
    2f7e:	30 e0       	ldi	r19, 0x00	; 0
    2f80:	4a ef       	ldi	r20, 0xFA	; 250
    2f82:	54 e4       	ldi	r21, 0x44	; 68
    2f84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f88:	dc 01       	movw	r26, r24
    2f8a:	cb 01       	movw	r24, r22
    2f8c:	8b a3       	std	Y+35, r24	; 0x23
    2f8e:	9c a3       	std	Y+36, r25	; 0x24
    2f90:	ad a3       	std	Y+37, r26	; 0x25
    2f92:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2f94:	6b a1       	ldd	r22, Y+35	; 0x23
    2f96:	7c a1       	ldd	r23, Y+36	; 0x24
    2f98:	8d a1       	ldd	r24, Y+37	; 0x25
    2f9a:	9e a1       	ldd	r25, Y+38	; 0x26
    2f9c:	20 e0       	ldi	r18, 0x00	; 0
    2f9e:	30 e0       	ldi	r19, 0x00	; 0
    2fa0:	40 e8       	ldi	r20, 0x80	; 128
    2fa2:	5f e3       	ldi	r21, 0x3F	; 63
    2fa4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fa8:	88 23       	and	r24, r24
    2faa:	2c f4       	brge	.+10     	; 0x2fb6 <MODE_4+0x6ec>
		__ticks = 1;
    2fac:	81 e0       	ldi	r24, 0x01	; 1
    2fae:	90 e0       	ldi	r25, 0x00	; 0
    2fb0:	9a a3       	std	Y+34, r25	; 0x22
    2fb2:	89 a3       	std	Y+33, r24	; 0x21
    2fb4:	3f c0       	rjmp	.+126    	; 0x3034 <MODE_4+0x76a>
	else if (__tmp > 65535)
    2fb6:	6b a1       	ldd	r22, Y+35	; 0x23
    2fb8:	7c a1       	ldd	r23, Y+36	; 0x24
    2fba:	8d a1       	ldd	r24, Y+37	; 0x25
    2fbc:	9e a1       	ldd	r25, Y+38	; 0x26
    2fbe:	20 e0       	ldi	r18, 0x00	; 0
    2fc0:	3f ef       	ldi	r19, 0xFF	; 255
    2fc2:	4f e7       	ldi	r20, 0x7F	; 127
    2fc4:	57 e4       	ldi	r21, 0x47	; 71
    2fc6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fca:	18 16       	cp	r1, r24
    2fcc:	4c f5       	brge	.+82     	; 0x3020 <MODE_4+0x756>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fce:	6f a1       	ldd	r22, Y+39	; 0x27
    2fd0:	78 a5       	ldd	r23, Y+40	; 0x28
    2fd2:	89 a5       	ldd	r24, Y+41	; 0x29
    2fd4:	9a a5       	ldd	r25, Y+42	; 0x2a
    2fd6:	20 e0       	ldi	r18, 0x00	; 0
    2fd8:	30 e0       	ldi	r19, 0x00	; 0
    2fda:	40 e2       	ldi	r20, 0x20	; 32
    2fdc:	51 e4       	ldi	r21, 0x41	; 65
    2fde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fe2:	dc 01       	movw	r26, r24
    2fe4:	cb 01       	movw	r24, r22
    2fe6:	bc 01       	movw	r22, r24
    2fe8:	cd 01       	movw	r24, r26
    2fea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fee:	dc 01       	movw	r26, r24
    2ff0:	cb 01       	movw	r24, r22
    2ff2:	9a a3       	std	Y+34, r25	; 0x22
    2ff4:	89 a3       	std	Y+33, r24	; 0x21
    2ff6:	0f c0       	rjmp	.+30     	; 0x3016 <MODE_4+0x74c>
    2ff8:	88 ec       	ldi	r24, 0xC8	; 200
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	98 a3       	std	Y+32, r25	; 0x20
    2ffe:	8f 8f       	std	Y+31, r24	; 0x1f
    3000:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3002:	98 a1       	ldd	r25, Y+32	; 0x20
    3004:	01 97       	sbiw	r24, 0x01	; 1
    3006:	f1 f7       	brne	.-4      	; 0x3004 <MODE_4+0x73a>
    3008:	98 a3       	std	Y+32, r25	; 0x20
    300a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    300c:	89 a1       	ldd	r24, Y+33	; 0x21
    300e:	9a a1       	ldd	r25, Y+34	; 0x22
    3010:	01 97       	sbiw	r24, 0x01	; 1
    3012:	9a a3       	std	Y+34, r25	; 0x22
    3014:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3016:	89 a1       	ldd	r24, Y+33	; 0x21
    3018:	9a a1       	ldd	r25, Y+34	; 0x22
    301a:	00 97       	sbiw	r24, 0x00	; 0
    301c:	69 f7       	brne	.-38     	; 0x2ff8 <MODE_4+0x72e>
    301e:	14 c0       	rjmp	.+40     	; 0x3048 <MODE_4+0x77e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3020:	6b a1       	ldd	r22, Y+35	; 0x23
    3022:	7c a1       	ldd	r23, Y+36	; 0x24
    3024:	8d a1       	ldd	r24, Y+37	; 0x25
    3026:	9e a1       	ldd	r25, Y+38	; 0x26
    3028:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    302c:	dc 01       	movw	r26, r24
    302e:	cb 01       	movw	r24, r22
    3030:	9a a3       	std	Y+34, r25	; 0x22
    3032:	89 a3       	std	Y+33, r24	; 0x21
    3034:	89 a1       	ldd	r24, Y+33	; 0x21
    3036:	9a a1       	ldd	r25, Y+34	; 0x22
    3038:	9e 8f       	std	Y+30, r25	; 0x1e
    303a:	8d 8f       	std	Y+29, r24	; 0x1d
    303c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    303e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3040:	01 97       	sbiw	r24, 0x01	; 1
    3042:	f1 f7       	brne	.-4      	; 0x3040 <MODE_4+0x776>
    3044:	9e 8f       	std	Y+30, r25	; 0x1e
    3046:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED4, ON);
    3048:	83 e0       	ldi	r24, 0x03	; 3
    304a:	61 e0       	ldi	r22, 0x01	; 1
    304c:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED5, ON);
    3050:	84 e0       	ldi	r24, 0x04	; 4
    3052:	61 e0       	ldi	r22, 0x01	; 1
    3054:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    3058:	80 e0       	ldi	r24, 0x00	; 0
    305a:	90 e0       	ldi	r25, 0x00	; 0
    305c:	a0 e2       	ldi	r26, 0x20	; 32
    305e:	b1 e4       	ldi	r27, 0x41	; 65
    3060:	89 8f       	std	Y+25, r24	; 0x19
    3062:	9a 8f       	std	Y+26, r25	; 0x1a
    3064:	ab 8f       	std	Y+27, r26	; 0x1b
    3066:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3068:	69 8d       	ldd	r22, Y+25	; 0x19
    306a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    306c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    306e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3070:	20 e0       	ldi	r18, 0x00	; 0
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	4a ef       	ldi	r20, 0xFA	; 250
    3076:	54 e4       	ldi	r21, 0x44	; 68
    3078:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    307c:	dc 01       	movw	r26, r24
    307e:	cb 01       	movw	r24, r22
    3080:	8d 8b       	std	Y+21, r24	; 0x15
    3082:	9e 8b       	std	Y+22, r25	; 0x16
    3084:	af 8b       	std	Y+23, r26	; 0x17
    3086:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3088:	6d 89       	ldd	r22, Y+21	; 0x15
    308a:	7e 89       	ldd	r23, Y+22	; 0x16
    308c:	8f 89       	ldd	r24, Y+23	; 0x17
    308e:	98 8d       	ldd	r25, Y+24	; 0x18
    3090:	20 e0       	ldi	r18, 0x00	; 0
    3092:	30 e0       	ldi	r19, 0x00	; 0
    3094:	40 e8       	ldi	r20, 0x80	; 128
    3096:	5f e3       	ldi	r21, 0x3F	; 63
    3098:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    309c:	88 23       	and	r24, r24
    309e:	2c f4       	brge	.+10     	; 0x30aa <MODE_4+0x7e0>
		__ticks = 1;
    30a0:	81 e0       	ldi	r24, 0x01	; 1
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	9c 8b       	std	Y+20, r25	; 0x14
    30a6:	8b 8b       	std	Y+19, r24	; 0x13
    30a8:	3f c0       	rjmp	.+126    	; 0x3128 <MODE_4+0x85e>
	else if (__tmp > 65535)
    30aa:	6d 89       	ldd	r22, Y+21	; 0x15
    30ac:	7e 89       	ldd	r23, Y+22	; 0x16
    30ae:	8f 89       	ldd	r24, Y+23	; 0x17
    30b0:	98 8d       	ldd	r25, Y+24	; 0x18
    30b2:	20 e0       	ldi	r18, 0x00	; 0
    30b4:	3f ef       	ldi	r19, 0xFF	; 255
    30b6:	4f e7       	ldi	r20, 0x7F	; 127
    30b8:	57 e4       	ldi	r21, 0x47	; 71
    30ba:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    30be:	18 16       	cp	r1, r24
    30c0:	4c f5       	brge	.+82     	; 0x3114 <MODE_4+0x84a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30c2:	69 8d       	ldd	r22, Y+25	; 0x19
    30c4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    30c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    30c8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    30ca:	20 e0       	ldi	r18, 0x00	; 0
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	40 e2       	ldi	r20, 0x20	; 32
    30d0:	51 e4       	ldi	r21, 0x41	; 65
    30d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30d6:	dc 01       	movw	r26, r24
    30d8:	cb 01       	movw	r24, r22
    30da:	bc 01       	movw	r22, r24
    30dc:	cd 01       	movw	r24, r26
    30de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e2:	dc 01       	movw	r26, r24
    30e4:	cb 01       	movw	r24, r22
    30e6:	9c 8b       	std	Y+20, r25	; 0x14
    30e8:	8b 8b       	std	Y+19, r24	; 0x13
    30ea:	0f c0       	rjmp	.+30     	; 0x310a <MODE_4+0x840>
    30ec:	88 ec       	ldi	r24, 0xC8	; 200
    30ee:	90 e0       	ldi	r25, 0x00	; 0
    30f0:	9a 8b       	std	Y+18, r25	; 0x12
    30f2:	89 8b       	std	Y+17, r24	; 0x11
    30f4:	89 89       	ldd	r24, Y+17	; 0x11
    30f6:	9a 89       	ldd	r25, Y+18	; 0x12
    30f8:	01 97       	sbiw	r24, 0x01	; 1
    30fa:	f1 f7       	brne	.-4      	; 0x30f8 <MODE_4+0x82e>
    30fc:	9a 8b       	std	Y+18, r25	; 0x12
    30fe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3100:	8b 89       	ldd	r24, Y+19	; 0x13
    3102:	9c 89       	ldd	r25, Y+20	; 0x14
    3104:	01 97       	sbiw	r24, 0x01	; 1
    3106:	9c 8b       	std	Y+20, r25	; 0x14
    3108:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    310a:	8b 89       	ldd	r24, Y+19	; 0x13
    310c:	9c 89       	ldd	r25, Y+20	; 0x14
    310e:	00 97       	sbiw	r24, 0x00	; 0
    3110:	69 f7       	brne	.-38     	; 0x30ec <MODE_4+0x822>
    3112:	14 c0       	rjmp	.+40     	; 0x313c <MODE_4+0x872>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3114:	6d 89       	ldd	r22, Y+21	; 0x15
    3116:	7e 89       	ldd	r23, Y+22	; 0x16
    3118:	8f 89       	ldd	r24, Y+23	; 0x17
    311a:	98 8d       	ldd	r25, Y+24	; 0x18
    311c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3120:	dc 01       	movw	r26, r24
    3122:	cb 01       	movw	r24, r22
    3124:	9c 8b       	std	Y+20, r25	; 0x14
    3126:	8b 8b       	std	Y+19, r24	; 0x13
    3128:	8b 89       	ldd	r24, Y+19	; 0x13
    312a:	9c 89       	ldd	r25, Y+20	; 0x14
    312c:	98 8b       	std	Y+16, r25	; 0x10
    312e:	8f 87       	std	Y+15, r24	; 0x0f
    3130:	8f 85       	ldd	r24, Y+15	; 0x0f
    3132:	98 89       	ldd	r25, Y+16	; 0x10
    3134:	01 97       	sbiw	r24, 0x01	; 1
    3136:	f1 f7       	brne	.-4      	; 0x3134 <MODE_4+0x86a>
    3138:	98 8b       	std	Y+16, r25	; 0x10
    313a:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED4, OFF);
    313c:	83 e0       	ldi	r24, 0x03	; 3
    313e:	60 e0       	ldi	r22, 0x00	; 0
    3140:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED5, OFF);
    3144:	84 e0       	ldi	r24, 0x04	; 4
    3146:	60 e0       	ldi	r22, 0x00	; 0
    3148:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    314c:	80 e0       	ldi	r24, 0x00	; 0
    314e:	90 e0       	ldi	r25, 0x00	; 0
    3150:	a6 e9       	ldi	r26, 0x96	; 150
    3152:	b3 e4       	ldi	r27, 0x43	; 67
    3154:	8b 87       	std	Y+11, r24	; 0x0b
    3156:	9c 87       	std	Y+12, r25	; 0x0c
    3158:	ad 87       	std	Y+13, r26	; 0x0d
    315a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    315c:	6b 85       	ldd	r22, Y+11	; 0x0b
    315e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3160:	8d 85       	ldd	r24, Y+13	; 0x0d
    3162:	9e 85       	ldd	r25, Y+14	; 0x0e
    3164:	20 e0       	ldi	r18, 0x00	; 0
    3166:	30 e0       	ldi	r19, 0x00	; 0
    3168:	4a ef       	ldi	r20, 0xFA	; 250
    316a:	54 e4       	ldi	r21, 0x44	; 68
    316c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3170:	dc 01       	movw	r26, r24
    3172:	cb 01       	movw	r24, r22
    3174:	8f 83       	std	Y+7, r24	; 0x07
    3176:	98 87       	std	Y+8, r25	; 0x08
    3178:	a9 87       	std	Y+9, r26	; 0x09
    317a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    317c:	6f 81       	ldd	r22, Y+7	; 0x07
    317e:	78 85       	ldd	r23, Y+8	; 0x08
    3180:	89 85       	ldd	r24, Y+9	; 0x09
    3182:	9a 85       	ldd	r25, Y+10	; 0x0a
    3184:	20 e0       	ldi	r18, 0x00	; 0
    3186:	30 e0       	ldi	r19, 0x00	; 0
    3188:	40 e8       	ldi	r20, 0x80	; 128
    318a:	5f e3       	ldi	r21, 0x3F	; 63
    318c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3190:	88 23       	and	r24, r24
    3192:	2c f4       	brge	.+10     	; 0x319e <MODE_4+0x8d4>
		__ticks = 1;
    3194:	81 e0       	ldi	r24, 0x01	; 1
    3196:	90 e0       	ldi	r25, 0x00	; 0
    3198:	9e 83       	std	Y+6, r25	; 0x06
    319a:	8d 83       	std	Y+5, r24	; 0x05
    319c:	3f c0       	rjmp	.+126    	; 0x321c <MODE_4+0x952>
	else if (__tmp > 65535)
    319e:	6f 81       	ldd	r22, Y+7	; 0x07
    31a0:	78 85       	ldd	r23, Y+8	; 0x08
    31a2:	89 85       	ldd	r24, Y+9	; 0x09
    31a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    31a6:	20 e0       	ldi	r18, 0x00	; 0
    31a8:	3f ef       	ldi	r19, 0xFF	; 255
    31aa:	4f e7       	ldi	r20, 0x7F	; 127
    31ac:	57 e4       	ldi	r21, 0x47	; 71
    31ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    31b2:	18 16       	cp	r1, r24
    31b4:	4c f5       	brge	.+82     	; 0x3208 <MODE_4+0x93e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31b6:	6b 85       	ldd	r22, Y+11	; 0x0b
    31b8:	7c 85       	ldd	r23, Y+12	; 0x0c
    31ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    31bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    31be:	20 e0       	ldi	r18, 0x00	; 0
    31c0:	30 e0       	ldi	r19, 0x00	; 0
    31c2:	40 e2       	ldi	r20, 0x20	; 32
    31c4:	51 e4       	ldi	r21, 0x41	; 65
    31c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31ca:	dc 01       	movw	r26, r24
    31cc:	cb 01       	movw	r24, r22
    31ce:	bc 01       	movw	r22, r24
    31d0:	cd 01       	movw	r24, r26
    31d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31d6:	dc 01       	movw	r26, r24
    31d8:	cb 01       	movw	r24, r22
    31da:	9e 83       	std	Y+6, r25	; 0x06
    31dc:	8d 83       	std	Y+5, r24	; 0x05
    31de:	0f c0       	rjmp	.+30     	; 0x31fe <MODE_4+0x934>
    31e0:	88 ec       	ldi	r24, 0xC8	; 200
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	9c 83       	std	Y+4, r25	; 0x04
    31e6:	8b 83       	std	Y+3, r24	; 0x03
    31e8:	8b 81       	ldd	r24, Y+3	; 0x03
    31ea:	9c 81       	ldd	r25, Y+4	; 0x04
    31ec:	01 97       	sbiw	r24, 0x01	; 1
    31ee:	f1 f7       	brne	.-4      	; 0x31ec <MODE_4+0x922>
    31f0:	9c 83       	std	Y+4, r25	; 0x04
    31f2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31f4:	8d 81       	ldd	r24, Y+5	; 0x05
    31f6:	9e 81       	ldd	r25, Y+6	; 0x06
    31f8:	01 97       	sbiw	r24, 0x01	; 1
    31fa:	9e 83       	std	Y+6, r25	; 0x06
    31fc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3200:	9e 81       	ldd	r25, Y+6	; 0x06
    3202:	00 97       	sbiw	r24, 0x00	; 0
    3204:	69 f7       	brne	.-38     	; 0x31e0 <MODE_4+0x916>
    3206:	14 c0       	rjmp	.+40     	; 0x3230 <MODE_4+0x966>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3208:	6f 81       	ldd	r22, Y+7	; 0x07
    320a:	78 85       	ldd	r23, Y+8	; 0x08
    320c:	89 85       	ldd	r24, Y+9	; 0x09
    320e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3210:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3214:	dc 01       	movw	r26, r24
    3216:	cb 01       	movw	r24, r22
    3218:	9e 83       	std	Y+6, r25	; 0x06
    321a:	8d 83       	std	Y+5, r24	; 0x05
    321c:	8d 81       	ldd	r24, Y+5	; 0x05
    321e:	9e 81       	ldd	r25, Y+6	; 0x06
    3220:	9a 83       	std	Y+2, r25	; 0x02
    3222:	89 83       	std	Y+1, r24	; 0x01
    3224:	89 81       	ldd	r24, Y+1	; 0x01
    3226:	9a 81       	ldd	r25, Y+2	; 0x02
    3228:	01 97       	sbiw	r24, 0x01	; 1
    322a:	f1 f7       	brne	.-4      	; 0x3228 <MODE_4+0x95e>
    322c:	9a 83       	std	Y+2, r25	; 0x02
    322e:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_4 */
    3230:	c0 59       	subi	r28, 0x90	; 144
    3232:	df 4f       	sbci	r29, 0xFF	; 255
    3234:	0f b6       	in	r0, 0x3f	; 63
    3236:	f8 94       	cli
    3238:	de bf       	out	0x3e, r29	; 62
    323a:	0f be       	out	0x3f, r0	; 63
    323c:	cd bf       	out	0x3d, r28	; 61
    323e:	cf 91       	pop	r28
    3240:	df 91       	pop	r29
    3242:	1f 91       	pop	r17
    3244:	0f 91       	pop	r16
    3246:	08 95       	ret

00003248 <MODE_5>:
/**
 * @brief function to implement mode 5
 */
static void MODE_5(void)
{
    3248:	0f 93       	push	r16
    324a:	1f 93       	push	r17
    324c:	df 93       	push	r29
    324e:	cf 93       	push	r28
    3250:	cd b7       	in	r28, 0x3d	; 61
    3252:	de b7       	in	r29, 0x3e	; 62
    3254:	c0 57       	subi	r28, 0x70	; 112
    3256:	d0 40       	sbci	r29, 0x00	; 0
    3258:	0f b6       	in	r0, 0x3f	; 63
    325a:	f8 94       	cli
    325c:	de bf       	out	0x3e, r29	; 62
    325e:	0f be       	out	0x3f, r0	; 63
    3260:	cd bf       	out	0x3d, r28	; 61
	LED_CTRL(LED4, ON);
    3262:	83 e0       	ldi	r24, 0x03	; 3
    3264:	61 e0       	ldi	r22, 0x01	; 1
    3266:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED5, ON);
    326a:	84 e0       	ldi	r24, 0x04	; 4
    326c:	61 e0       	ldi	r22, 0x01	; 1
    326e:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    3272:	fe 01       	movw	r30, r28
    3274:	e3 59       	subi	r30, 0x93	; 147
    3276:	ff 4f       	sbci	r31, 0xFF	; 255
    3278:	80 e0       	ldi	r24, 0x00	; 0
    327a:	90 e0       	ldi	r25, 0x00	; 0
    327c:	a0 e2       	ldi	r26, 0x20	; 32
    327e:	b1 e4       	ldi	r27, 0x41	; 65
    3280:	80 83       	st	Z, r24
    3282:	91 83       	std	Z+1, r25	; 0x01
    3284:	a2 83       	std	Z+2, r26	; 0x02
    3286:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3288:	8e 01       	movw	r16, r28
    328a:	07 59       	subi	r16, 0x97	; 151
    328c:	1f 4f       	sbci	r17, 0xFF	; 255
    328e:	fe 01       	movw	r30, r28
    3290:	e3 59       	subi	r30, 0x93	; 147
    3292:	ff 4f       	sbci	r31, 0xFF	; 255
    3294:	60 81       	ld	r22, Z
    3296:	71 81       	ldd	r23, Z+1	; 0x01
    3298:	82 81       	ldd	r24, Z+2	; 0x02
    329a:	93 81       	ldd	r25, Z+3	; 0x03
    329c:	20 e0       	ldi	r18, 0x00	; 0
    329e:	30 e0       	ldi	r19, 0x00	; 0
    32a0:	4a ef       	ldi	r20, 0xFA	; 250
    32a2:	54 e4       	ldi	r21, 0x44	; 68
    32a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32a8:	dc 01       	movw	r26, r24
    32aa:	cb 01       	movw	r24, r22
    32ac:	f8 01       	movw	r30, r16
    32ae:	80 83       	st	Z, r24
    32b0:	91 83       	std	Z+1, r25	; 0x01
    32b2:	a2 83       	std	Z+2, r26	; 0x02
    32b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32b6:	fe 01       	movw	r30, r28
    32b8:	e7 59       	subi	r30, 0x97	; 151
    32ba:	ff 4f       	sbci	r31, 0xFF	; 255
    32bc:	60 81       	ld	r22, Z
    32be:	71 81       	ldd	r23, Z+1	; 0x01
    32c0:	82 81       	ldd	r24, Z+2	; 0x02
    32c2:	93 81       	ldd	r25, Z+3	; 0x03
    32c4:	20 e0       	ldi	r18, 0x00	; 0
    32c6:	30 e0       	ldi	r19, 0x00	; 0
    32c8:	40 e8       	ldi	r20, 0x80	; 128
    32ca:	5f e3       	ldi	r21, 0x3F	; 63
    32cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32d0:	88 23       	and	r24, r24
    32d2:	44 f4       	brge	.+16     	; 0x32e4 <MODE_5+0x9c>
		__ticks = 1;
    32d4:	fe 01       	movw	r30, r28
    32d6:	e9 59       	subi	r30, 0x99	; 153
    32d8:	ff 4f       	sbci	r31, 0xFF	; 255
    32da:	81 e0       	ldi	r24, 0x01	; 1
    32dc:	90 e0       	ldi	r25, 0x00	; 0
    32de:	91 83       	std	Z+1, r25	; 0x01
    32e0:	80 83       	st	Z, r24
    32e2:	64 c0       	rjmp	.+200    	; 0x33ac <MODE_5+0x164>
	else if (__tmp > 65535)
    32e4:	fe 01       	movw	r30, r28
    32e6:	e7 59       	subi	r30, 0x97	; 151
    32e8:	ff 4f       	sbci	r31, 0xFF	; 255
    32ea:	60 81       	ld	r22, Z
    32ec:	71 81       	ldd	r23, Z+1	; 0x01
    32ee:	82 81       	ldd	r24, Z+2	; 0x02
    32f0:	93 81       	ldd	r25, Z+3	; 0x03
    32f2:	20 e0       	ldi	r18, 0x00	; 0
    32f4:	3f ef       	ldi	r19, 0xFF	; 255
    32f6:	4f e7       	ldi	r20, 0x7F	; 127
    32f8:	57 e4       	ldi	r21, 0x47	; 71
    32fa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32fe:	18 16       	cp	r1, r24
    3300:	0c f0       	brlt	.+2      	; 0x3304 <MODE_5+0xbc>
    3302:	43 c0       	rjmp	.+134    	; 0x338a <MODE_5+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3304:	fe 01       	movw	r30, r28
    3306:	e3 59       	subi	r30, 0x93	; 147
    3308:	ff 4f       	sbci	r31, 0xFF	; 255
    330a:	60 81       	ld	r22, Z
    330c:	71 81       	ldd	r23, Z+1	; 0x01
    330e:	82 81       	ldd	r24, Z+2	; 0x02
    3310:	93 81       	ldd	r25, Z+3	; 0x03
    3312:	20 e0       	ldi	r18, 0x00	; 0
    3314:	30 e0       	ldi	r19, 0x00	; 0
    3316:	40 e2       	ldi	r20, 0x20	; 32
    3318:	51 e4       	ldi	r21, 0x41	; 65
    331a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    331e:	dc 01       	movw	r26, r24
    3320:	cb 01       	movw	r24, r22
    3322:	8e 01       	movw	r16, r28
    3324:	09 59       	subi	r16, 0x99	; 153
    3326:	1f 4f       	sbci	r17, 0xFF	; 255
    3328:	bc 01       	movw	r22, r24
    332a:	cd 01       	movw	r24, r26
    332c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3330:	dc 01       	movw	r26, r24
    3332:	cb 01       	movw	r24, r22
    3334:	f8 01       	movw	r30, r16
    3336:	91 83       	std	Z+1, r25	; 0x01
    3338:	80 83       	st	Z, r24
    333a:	1f c0       	rjmp	.+62     	; 0x337a <MODE_5+0x132>
    333c:	fe 01       	movw	r30, r28
    333e:	eb 59       	subi	r30, 0x9B	; 155
    3340:	ff 4f       	sbci	r31, 0xFF	; 255
    3342:	88 ec       	ldi	r24, 0xC8	; 200
    3344:	90 e0       	ldi	r25, 0x00	; 0
    3346:	91 83       	std	Z+1, r25	; 0x01
    3348:	80 83       	st	Z, r24
    334a:	fe 01       	movw	r30, r28
    334c:	eb 59       	subi	r30, 0x9B	; 155
    334e:	ff 4f       	sbci	r31, 0xFF	; 255
    3350:	80 81       	ld	r24, Z
    3352:	91 81       	ldd	r25, Z+1	; 0x01
    3354:	01 97       	sbiw	r24, 0x01	; 1
    3356:	f1 f7       	brne	.-4      	; 0x3354 <MODE_5+0x10c>
    3358:	fe 01       	movw	r30, r28
    335a:	eb 59       	subi	r30, 0x9B	; 155
    335c:	ff 4f       	sbci	r31, 0xFF	; 255
    335e:	91 83       	std	Z+1, r25	; 0x01
    3360:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3362:	de 01       	movw	r26, r28
    3364:	a9 59       	subi	r26, 0x99	; 153
    3366:	bf 4f       	sbci	r27, 0xFF	; 255
    3368:	fe 01       	movw	r30, r28
    336a:	e9 59       	subi	r30, 0x99	; 153
    336c:	ff 4f       	sbci	r31, 0xFF	; 255
    336e:	80 81       	ld	r24, Z
    3370:	91 81       	ldd	r25, Z+1	; 0x01
    3372:	01 97       	sbiw	r24, 0x01	; 1
    3374:	11 96       	adiw	r26, 0x01	; 1
    3376:	9c 93       	st	X, r25
    3378:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    337a:	fe 01       	movw	r30, r28
    337c:	e9 59       	subi	r30, 0x99	; 153
    337e:	ff 4f       	sbci	r31, 0xFF	; 255
    3380:	80 81       	ld	r24, Z
    3382:	91 81       	ldd	r25, Z+1	; 0x01
    3384:	00 97       	sbiw	r24, 0x00	; 0
    3386:	d1 f6       	brne	.-76     	; 0x333c <MODE_5+0xf4>
    3388:	27 c0       	rjmp	.+78     	; 0x33d8 <MODE_5+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    338a:	8e 01       	movw	r16, r28
    338c:	09 59       	subi	r16, 0x99	; 153
    338e:	1f 4f       	sbci	r17, 0xFF	; 255
    3390:	fe 01       	movw	r30, r28
    3392:	e7 59       	subi	r30, 0x97	; 151
    3394:	ff 4f       	sbci	r31, 0xFF	; 255
    3396:	60 81       	ld	r22, Z
    3398:	71 81       	ldd	r23, Z+1	; 0x01
    339a:	82 81       	ldd	r24, Z+2	; 0x02
    339c:	93 81       	ldd	r25, Z+3	; 0x03
    339e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33a2:	dc 01       	movw	r26, r24
    33a4:	cb 01       	movw	r24, r22
    33a6:	f8 01       	movw	r30, r16
    33a8:	91 83       	std	Z+1, r25	; 0x01
    33aa:	80 83       	st	Z, r24
    33ac:	de 01       	movw	r26, r28
    33ae:	ad 59       	subi	r26, 0x9D	; 157
    33b0:	bf 4f       	sbci	r27, 0xFF	; 255
    33b2:	fe 01       	movw	r30, r28
    33b4:	e9 59       	subi	r30, 0x99	; 153
    33b6:	ff 4f       	sbci	r31, 0xFF	; 255
    33b8:	80 81       	ld	r24, Z
    33ba:	91 81       	ldd	r25, Z+1	; 0x01
    33bc:	8d 93       	st	X+, r24
    33be:	9c 93       	st	X, r25
    33c0:	fe 01       	movw	r30, r28
    33c2:	ed 59       	subi	r30, 0x9D	; 157
    33c4:	ff 4f       	sbci	r31, 0xFF	; 255
    33c6:	80 81       	ld	r24, Z
    33c8:	91 81       	ldd	r25, Z+1	; 0x01
    33ca:	01 97       	sbiw	r24, 0x01	; 1
    33cc:	f1 f7       	brne	.-4      	; 0x33ca <MODE_5+0x182>
    33ce:	fe 01       	movw	r30, r28
    33d0:	ed 59       	subi	r30, 0x9D	; 157
    33d2:	ff 4f       	sbci	r31, 0xFF	; 255
    33d4:	91 83       	std	Z+1, r25	; 0x01
    33d6:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED4, OFF);
    33d8:	83 e0       	ldi	r24, 0x03	; 3
    33da:	60 e0       	ldi	r22, 0x00	; 0
    33dc:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED5, OFF);
    33e0:	84 e0       	ldi	r24, 0x04	; 4
    33e2:	60 e0       	ldi	r22, 0x00	; 0
    33e4:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    33e8:	fe 01       	movw	r30, r28
    33ea:	e1 5a       	subi	r30, 0xA1	; 161
    33ec:	ff 4f       	sbci	r31, 0xFF	; 255
    33ee:	80 e0       	ldi	r24, 0x00	; 0
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	a0 e2       	ldi	r26, 0x20	; 32
    33f4:	b1 e4       	ldi	r27, 0x41	; 65
    33f6:	80 83       	st	Z, r24
    33f8:	91 83       	std	Z+1, r25	; 0x01
    33fa:	a2 83       	std	Z+2, r26	; 0x02
    33fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33fe:	8e 01       	movw	r16, r28
    3400:	05 5a       	subi	r16, 0xA5	; 165
    3402:	1f 4f       	sbci	r17, 0xFF	; 255
    3404:	fe 01       	movw	r30, r28
    3406:	e1 5a       	subi	r30, 0xA1	; 161
    3408:	ff 4f       	sbci	r31, 0xFF	; 255
    340a:	60 81       	ld	r22, Z
    340c:	71 81       	ldd	r23, Z+1	; 0x01
    340e:	82 81       	ldd	r24, Z+2	; 0x02
    3410:	93 81       	ldd	r25, Z+3	; 0x03
    3412:	20 e0       	ldi	r18, 0x00	; 0
    3414:	30 e0       	ldi	r19, 0x00	; 0
    3416:	4a ef       	ldi	r20, 0xFA	; 250
    3418:	54 e4       	ldi	r21, 0x44	; 68
    341a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    341e:	dc 01       	movw	r26, r24
    3420:	cb 01       	movw	r24, r22
    3422:	f8 01       	movw	r30, r16
    3424:	80 83       	st	Z, r24
    3426:	91 83       	std	Z+1, r25	; 0x01
    3428:	a2 83       	std	Z+2, r26	; 0x02
    342a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    342c:	fe 01       	movw	r30, r28
    342e:	e5 5a       	subi	r30, 0xA5	; 165
    3430:	ff 4f       	sbci	r31, 0xFF	; 255
    3432:	60 81       	ld	r22, Z
    3434:	71 81       	ldd	r23, Z+1	; 0x01
    3436:	82 81       	ldd	r24, Z+2	; 0x02
    3438:	93 81       	ldd	r25, Z+3	; 0x03
    343a:	20 e0       	ldi	r18, 0x00	; 0
    343c:	30 e0       	ldi	r19, 0x00	; 0
    343e:	40 e8       	ldi	r20, 0x80	; 128
    3440:	5f e3       	ldi	r21, 0x3F	; 63
    3442:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3446:	88 23       	and	r24, r24
    3448:	44 f4       	brge	.+16     	; 0x345a <MODE_5+0x212>
		__ticks = 1;
    344a:	fe 01       	movw	r30, r28
    344c:	e7 5a       	subi	r30, 0xA7	; 167
    344e:	ff 4f       	sbci	r31, 0xFF	; 255
    3450:	81 e0       	ldi	r24, 0x01	; 1
    3452:	90 e0       	ldi	r25, 0x00	; 0
    3454:	91 83       	std	Z+1, r25	; 0x01
    3456:	80 83       	st	Z, r24
    3458:	64 c0       	rjmp	.+200    	; 0x3522 <MODE_5+0x2da>
	else if (__tmp > 65535)
    345a:	fe 01       	movw	r30, r28
    345c:	e5 5a       	subi	r30, 0xA5	; 165
    345e:	ff 4f       	sbci	r31, 0xFF	; 255
    3460:	60 81       	ld	r22, Z
    3462:	71 81       	ldd	r23, Z+1	; 0x01
    3464:	82 81       	ldd	r24, Z+2	; 0x02
    3466:	93 81       	ldd	r25, Z+3	; 0x03
    3468:	20 e0       	ldi	r18, 0x00	; 0
    346a:	3f ef       	ldi	r19, 0xFF	; 255
    346c:	4f e7       	ldi	r20, 0x7F	; 127
    346e:	57 e4       	ldi	r21, 0x47	; 71
    3470:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3474:	18 16       	cp	r1, r24
    3476:	0c f0       	brlt	.+2      	; 0x347a <MODE_5+0x232>
    3478:	43 c0       	rjmp	.+134    	; 0x3500 <MODE_5+0x2b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    347a:	fe 01       	movw	r30, r28
    347c:	e1 5a       	subi	r30, 0xA1	; 161
    347e:	ff 4f       	sbci	r31, 0xFF	; 255
    3480:	60 81       	ld	r22, Z
    3482:	71 81       	ldd	r23, Z+1	; 0x01
    3484:	82 81       	ldd	r24, Z+2	; 0x02
    3486:	93 81       	ldd	r25, Z+3	; 0x03
    3488:	20 e0       	ldi	r18, 0x00	; 0
    348a:	30 e0       	ldi	r19, 0x00	; 0
    348c:	40 e2       	ldi	r20, 0x20	; 32
    348e:	51 e4       	ldi	r21, 0x41	; 65
    3490:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3494:	dc 01       	movw	r26, r24
    3496:	cb 01       	movw	r24, r22
    3498:	8e 01       	movw	r16, r28
    349a:	07 5a       	subi	r16, 0xA7	; 167
    349c:	1f 4f       	sbci	r17, 0xFF	; 255
    349e:	bc 01       	movw	r22, r24
    34a0:	cd 01       	movw	r24, r26
    34a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34a6:	dc 01       	movw	r26, r24
    34a8:	cb 01       	movw	r24, r22
    34aa:	f8 01       	movw	r30, r16
    34ac:	91 83       	std	Z+1, r25	; 0x01
    34ae:	80 83       	st	Z, r24
    34b0:	1f c0       	rjmp	.+62     	; 0x34f0 <MODE_5+0x2a8>
    34b2:	fe 01       	movw	r30, r28
    34b4:	e9 5a       	subi	r30, 0xA9	; 169
    34b6:	ff 4f       	sbci	r31, 0xFF	; 255
    34b8:	88 ec       	ldi	r24, 0xC8	; 200
    34ba:	90 e0       	ldi	r25, 0x00	; 0
    34bc:	91 83       	std	Z+1, r25	; 0x01
    34be:	80 83       	st	Z, r24
    34c0:	fe 01       	movw	r30, r28
    34c2:	e9 5a       	subi	r30, 0xA9	; 169
    34c4:	ff 4f       	sbci	r31, 0xFF	; 255
    34c6:	80 81       	ld	r24, Z
    34c8:	91 81       	ldd	r25, Z+1	; 0x01
    34ca:	01 97       	sbiw	r24, 0x01	; 1
    34cc:	f1 f7       	brne	.-4      	; 0x34ca <MODE_5+0x282>
    34ce:	fe 01       	movw	r30, r28
    34d0:	e9 5a       	subi	r30, 0xA9	; 169
    34d2:	ff 4f       	sbci	r31, 0xFF	; 255
    34d4:	91 83       	std	Z+1, r25	; 0x01
    34d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34d8:	de 01       	movw	r26, r28
    34da:	a7 5a       	subi	r26, 0xA7	; 167
    34dc:	bf 4f       	sbci	r27, 0xFF	; 255
    34de:	fe 01       	movw	r30, r28
    34e0:	e7 5a       	subi	r30, 0xA7	; 167
    34e2:	ff 4f       	sbci	r31, 0xFF	; 255
    34e4:	80 81       	ld	r24, Z
    34e6:	91 81       	ldd	r25, Z+1	; 0x01
    34e8:	01 97       	sbiw	r24, 0x01	; 1
    34ea:	11 96       	adiw	r26, 0x01	; 1
    34ec:	9c 93       	st	X, r25
    34ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34f0:	fe 01       	movw	r30, r28
    34f2:	e7 5a       	subi	r30, 0xA7	; 167
    34f4:	ff 4f       	sbci	r31, 0xFF	; 255
    34f6:	80 81       	ld	r24, Z
    34f8:	91 81       	ldd	r25, Z+1	; 0x01
    34fa:	00 97       	sbiw	r24, 0x00	; 0
    34fc:	d1 f6       	brne	.-76     	; 0x34b2 <MODE_5+0x26a>
    34fe:	27 c0       	rjmp	.+78     	; 0x354e <MODE_5+0x306>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3500:	8e 01       	movw	r16, r28
    3502:	07 5a       	subi	r16, 0xA7	; 167
    3504:	1f 4f       	sbci	r17, 0xFF	; 255
    3506:	fe 01       	movw	r30, r28
    3508:	e5 5a       	subi	r30, 0xA5	; 165
    350a:	ff 4f       	sbci	r31, 0xFF	; 255
    350c:	60 81       	ld	r22, Z
    350e:	71 81       	ldd	r23, Z+1	; 0x01
    3510:	82 81       	ldd	r24, Z+2	; 0x02
    3512:	93 81       	ldd	r25, Z+3	; 0x03
    3514:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3518:	dc 01       	movw	r26, r24
    351a:	cb 01       	movw	r24, r22
    351c:	f8 01       	movw	r30, r16
    351e:	91 83       	std	Z+1, r25	; 0x01
    3520:	80 83       	st	Z, r24
    3522:	de 01       	movw	r26, r28
    3524:	ab 5a       	subi	r26, 0xAB	; 171
    3526:	bf 4f       	sbci	r27, 0xFF	; 255
    3528:	fe 01       	movw	r30, r28
    352a:	e7 5a       	subi	r30, 0xA7	; 167
    352c:	ff 4f       	sbci	r31, 0xFF	; 255
    352e:	80 81       	ld	r24, Z
    3530:	91 81       	ldd	r25, Z+1	; 0x01
    3532:	8d 93       	st	X+, r24
    3534:	9c 93       	st	X, r25
    3536:	fe 01       	movw	r30, r28
    3538:	eb 5a       	subi	r30, 0xAB	; 171
    353a:	ff 4f       	sbci	r31, 0xFF	; 255
    353c:	80 81       	ld	r24, Z
    353e:	91 81       	ldd	r25, Z+1	; 0x01
    3540:	01 97       	sbiw	r24, 0x01	; 1
    3542:	f1 f7       	brne	.-4      	; 0x3540 <MODE_5+0x2f8>
    3544:	fe 01       	movw	r30, r28
    3546:	eb 5a       	subi	r30, 0xAB	; 171
    3548:	ff 4f       	sbci	r31, 0xFF	; 255
    354a:	91 83       	std	Z+1, r25	; 0x01
    354c:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, ON);
    354e:	82 e0       	ldi	r24, 0x02	; 2
    3550:	61 e0       	ldi	r22, 0x01	; 1
    3552:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED6, ON);
    3556:	85 e0       	ldi	r24, 0x05	; 5
    3558:	61 e0       	ldi	r22, 0x01	; 1
    355a:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    355e:	fe 01       	movw	r30, r28
    3560:	ef 5a       	subi	r30, 0xAF	; 175
    3562:	ff 4f       	sbci	r31, 0xFF	; 255
    3564:	80 e0       	ldi	r24, 0x00	; 0
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	a0 e2       	ldi	r26, 0x20	; 32
    356a:	b1 e4       	ldi	r27, 0x41	; 65
    356c:	80 83       	st	Z, r24
    356e:	91 83       	std	Z+1, r25	; 0x01
    3570:	a2 83       	std	Z+2, r26	; 0x02
    3572:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3574:	8e 01       	movw	r16, r28
    3576:	03 5b       	subi	r16, 0xB3	; 179
    3578:	1f 4f       	sbci	r17, 0xFF	; 255
    357a:	fe 01       	movw	r30, r28
    357c:	ef 5a       	subi	r30, 0xAF	; 175
    357e:	ff 4f       	sbci	r31, 0xFF	; 255
    3580:	60 81       	ld	r22, Z
    3582:	71 81       	ldd	r23, Z+1	; 0x01
    3584:	82 81       	ldd	r24, Z+2	; 0x02
    3586:	93 81       	ldd	r25, Z+3	; 0x03
    3588:	20 e0       	ldi	r18, 0x00	; 0
    358a:	30 e0       	ldi	r19, 0x00	; 0
    358c:	4a ef       	ldi	r20, 0xFA	; 250
    358e:	54 e4       	ldi	r21, 0x44	; 68
    3590:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3594:	dc 01       	movw	r26, r24
    3596:	cb 01       	movw	r24, r22
    3598:	f8 01       	movw	r30, r16
    359a:	80 83       	st	Z, r24
    359c:	91 83       	std	Z+1, r25	; 0x01
    359e:	a2 83       	std	Z+2, r26	; 0x02
    35a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35a2:	fe 01       	movw	r30, r28
    35a4:	e3 5b       	subi	r30, 0xB3	; 179
    35a6:	ff 4f       	sbci	r31, 0xFF	; 255
    35a8:	60 81       	ld	r22, Z
    35aa:	71 81       	ldd	r23, Z+1	; 0x01
    35ac:	82 81       	ldd	r24, Z+2	; 0x02
    35ae:	93 81       	ldd	r25, Z+3	; 0x03
    35b0:	20 e0       	ldi	r18, 0x00	; 0
    35b2:	30 e0       	ldi	r19, 0x00	; 0
    35b4:	40 e8       	ldi	r20, 0x80	; 128
    35b6:	5f e3       	ldi	r21, 0x3F	; 63
    35b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35bc:	88 23       	and	r24, r24
    35be:	44 f4       	brge	.+16     	; 0x35d0 <MODE_5+0x388>
		__ticks = 1;
    35c0:	fe 01       	movw	r30, r28
    35c2:	e5 5b       	subi	r30, 0xB5	; 181
    35c4:	ff 4f       	sbci	r31, 0xFF	; 255
    35c6:	81 e0       	ldi	r24, 0x01	; 1
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	91 83       	std	Z+1, r25	; 0x01
    35cc:	80 83       	st	Z, r24
    35ce:	64 c0       	rjmp	.+200    	; 0x3698 <MODE_5+0x450>
	else if (__tmp > 65535)
    35d0:	fe 01       	movw	r30, r28
    35d2:	e3 5b       	subi	r30, 0xB3	; 179
    35d4:	ff 4f       	sbci	r31, 0xFF	; 255
    35d6:	60 81       	ld	r22, Z
    35d8:	71 81       	ldd	r23, Z+1	; 0x01
    35da:	82 81       	ldd	r24, Z+2	; 0x02
    35dc:	93 81       	ldd	r25, Z+3	; 0x03
    35de:	20 e0       	ldi	r18, 0x00	; 0
    35e0:	3f ef       	ldi	r19, 0xFF	; 255
    35e2:	4f e7       	ldi	r20, 0x7F	; 127
    35e4:	57 e4       	ldi	r21, 0x47	; 71
    35e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35ea:	18 16       	cp	r1, r24
    35ec:	0c f0       	brlt	.+2      	; 0x35f0 <MODE_5+0x3a8>
    35ee:	43 c0       	rjmp	.+134    	; 0x3676 <MODE_5+0x42e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35f0:	fe 01       	movw	r30, r28
    35f2:	ef 5a       	subi	r30, 0xAF	; 175
    35f4:	ff 4f       	sbci	r31, 0xFF	; 255
    35f6:	60 81       	ld	r22, Z
    35f8:	71 81       	ldd	r23, Z+1	; 0x01
    35fa:	82 81       	ldd	r24, Z+2	; 0x02
    35fc:	93 81       	ldd	r25, Z+3	; 0x03
    35fe:	20 e0       	ldi	r18, 0x00	; 0
    3600:	30 e0       	ldi	r19, 0x00	; 0
    3602:	40 e2       	ldi	r20, 0x20	; 32
    3604:	51 e4       	ldi	r21, 0x41	; 65
    3606:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    360a:	dc 01       	movw	r26, r24
    360c:	cb 01       	movw	r24, r22
    360e:	8e 01       	movw	r16, r28
    3610:	05 5b       	subi	r16, 0xB5	; 181
    3612:	1f 4f       	sbci	r17, 0xFF	; 255
    3614:	bc 01       	movw	r22, r24
    3616:	cd 01       	movw	r24, r26
    3618:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    361c:	dc 01       	movw	r26, r24
    361e:	cb 01       	movw	r24, r22
    3620:	f8 01       	movw	r30, r16
    3622:	91 83       	std	Z+1, r25	; 0x01
    3624:	80 83       	st	Z, r24
    3626:	1f c0       	rjmp	.+62     	; 0x3666 <MODE_5+0x41e>
    3628:	fe 01       	movw	r30, r28
    362a:	e7 5b       	subi	r30, 0xB7	; 183
    362c:	ff 4f       	sbci	r31, 0xFF	; 255
    362e:	88 ec       	ldi	r24, 0xC8	; 200
    3630:	90 e0       	ldi	r25, 0x00	; 0
    3632:	91 83       	std	Z+1, r25	; 0x01
    3634:	80 83       	st	Z, r24
    3636:	fe 01       	movw	r30, r28
    3638:	e7 5b       	subi	r30, 0xB7	; 183
    363a:	ff 4f       	sbci	r31, 0xFF	; 255
    363c:	80 81       	ld	r24, Z
    363e:	91 81       	ldd	r25, Z+1	; 0x01
    3640:	01 97       	sbiw	r24, 0x01	; 1
    3642:	f1 f7       	brne	.-4      	; 0x3640 <MODE_5+0x3f8>
    3644:	fe 01       	movw	r30, r28
    3646:	e7 5b       	subi	r30, 0xB7	; 183
    3648:	ff 4f       	sbci	r31, 0xFF	; 255
    364a:	91 83       	std	Z+1, r25	; 0x01
    364c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    364e:	de 01       	movw	r26, r28
    3650:	a5 5b       	subi	r26, 0xB5	; 181
    3652:	bf 4f       	sbci	r27, 0xFF	; 255
    3654:	fe 01       	movw	r30, r28
    3656:	e5 5b       	subi	r30, 0xB5	; 181
    3658:	ff 4f       	sbci	r31, 0xFF	; 255
    365a:	80 81       	ld	r24, Z
    365c:	91 81       	ldd	r25, Z+1	; 0x01
    365e:	01 97       	sbiw	r24, 0x01	; 1
    3660:	11 96       	adiw	r26, 0x01	; 1
    3662:	9c 93       	st	X, r25
    3664:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3666:	fe 01       	movw	r30, r28
    3668:	e5 5b       	subi	r30, 0xB5	; 181
    366a:	ff 4f       	sbci	r31, 0xFF	; 255
    366c:	80 81       	ld	r24, Z
    366e:	91 81       	ldd	r25, Z+1	; 0x01
    3670:	00 97       	sbiw	r24, 0x00	; 0
    3672:	d1 f6       	brne	.-76     	; 0x3628 <MODE_5+0x3e0>
    3674:	27 c0       	rjmp	.+78     	; 0x36c4 <MODE_5+0x47c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3676:	8e 01       	movw	r16, r28
    3678:	05 5b       	subi	r16, 0xB5	; 181
    367a:	1f 4f       	sbci	r17, 0xFF	; 255
    367c:	fe 01       	movw	r30, r28
    367e:	e3 5b       	subi	r30, 0xB3	; 179
    3680:	ff 4f       	sbci	r31, 0xFF	; 255
    3682:	60 81       	ld	r22, Z
    3684:	71 81       	ldd	r23, Z+1	; 0x01
    3686:	82 81       	ldd	r24, Z+2	; 0x02
    3688:	93 81       	ldd	r25, Z+3	; 0x03
    368a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    368e:	dc 01       	movw	r26, r24
    3690:	cb 01       	movw	r24, r22
    3692:	f8 01       	movw	r30, r16
    3694:	91 83       	std	Z+1, r25	; 0x01
    3696:	80 83       	st	Z, r24
    3698:	de 01       	movw	r26, r28
    369a:	a9 5b       	subi	r26, 0xB9	; 185
    369c:	bf 4f       	sbci	r27, 0xFF	; 255
    369e:	fe 01       	movw	r30, r28
    36a0:	e5 5b       	subi	r30, 0xB5	; 181
    36a2:	ff 4f       	sbci	r31, 0xFF	; 255
    36a4:	80 81       	ld	r24, Z
    36a6:	91 81       	ldd	r25, Z+1	; 0x01
    36a8:	8d 93       	st	X+, r24
    36aa:	9c 93       	st	X, r25
    36ac:	fe 01       	movw	r30, r28
    36ae:	e9 5b       	subi	r30, 0xB9	; 185
    36b0:	ff 4f       	sbci	r31, 0xFF	; 255
    36b2:	80 81       	ld	r24, Z
    36b4:	91 81       	ldd	r25, Z+1	; 0x01
    36b6:	01 97       	sbiw	r24, 0x01	; 1
    36b8:	f1 f7       	brne	.-4      	; 0x36b6 <MODE_5+0x46e>
    36ba:	fe 01       	movw	r30, r28
    36bc:	e9 5b       	subi	r30, 0xB9	; 185
    36be:	ff 4f       	sbci	r31, 0xFF	; 255
    36c0:	91 83       	std	Z+1, r25	; 0x01
    36c2:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, OFF);
    36c4:	82 e0       	ldi	r24, 0x02	; 2
    36c6:	60 e0       	ldi	r22, 0x00	; 0
    36c8:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED6, OFF);
    36cc:	85 e0       	ldi	r24, 0x05	; 5
    36ce:	60 e0       	ldi	r22, 0x00	; 0
    36d0:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    36d4:	fe 01       	movw	r30, r28
    36d6:	ed 5b       	subi	r30, 0xBD	; 189
    36d8:	ff 4f       	sbci	r31, 0xFF	; 255
    36da:	80 e0       	ldi	r24, 0x00	; 0
    36dc:	90 e0       	ldi	r25, 0x00	; 0
    36de:	a0 e2       	ldi	r26, 0x20	; 32
    36e0:	b1 e4       	ldi	r27, 0x41	; 65
    36e2:	80 83       	st	Z, r24
    36e4:	91 83       	std	Z+1, r25	; 0x01
    36e6:	a2 83       	std	Z+2, r26	; 0x02
    36e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36ea:	8e 01       	movw	r16, r28
    36ec:	01 5c       	subi	r16, 0xC1	; 193
    36ee:	1f 4f       	sbci	r17, 0xFF	; 255
    36f0:	fe 01       	movw	r30, r28
    36f2:	ed 5b       	subi	r30, 0xBD	; 189
    36f4:	ff 4f       	sbci	r31, 0xFF	; 255
    36f6:	60 81       	ld	r22, Z
    36f8:	71 81       	ldd	r23, Z+1	; 0x01
    36fa:	82 81       	ldd	r24, Z+2	; 0x02
    36fc:	93 81       	ldd	r25, Z+3	; 0x03
    36fe:	20 e0       	ldi	r18, 0x00	; 0
    3700:	30 e0       	ldi	r19, 0x00	; 0
    3702:	4a ef       	ldi	r20, 0xFA	; 250
    3704:	54 e4       	ldi	r21, 0x44	; 68
    3706:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    370a:	dc 01       	movw	r26, r24
    370c:	cb 01       	movw	r24, r22
    370e:	f8 01       	movw	r30, r16
    3710:	80 83       	st	Z, r24
    3712:	91 83       	std	Z+1, r25	; 0x01
    3714:	a2 83       	std	Z+2, r26	; 0x02
    3716:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3718:	fe 01       	movw	r30, r28
    371a:	ff 96       	adiw	r30, 0x3f	; 63
    371c:	60 81       	ld	r22, Z
    371e:	71 81       	ldd	r23, Z+1	; 0x01
    3720:	82 81       	ldd	r24, Z+2	; 0x02
    3722:	93 81       	ldd	r25, Z+3	; 0x03
    3724:	20 e0       	ldi	r18, 0x00	; 0
    3726:	30 e0       	ldi	r19, 0x00	; 0
    3728:	40 e8       	ldi	r20, 0x80	; 128
    372a:	5f e3       	ldi	r21, 0x3F	; 63
    372c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3730:	88 23       	and	r24, r24
    3732:	2c f4       	brge	.+10     	; 0x373e <MODE_5+0x4f6>
		__ticks = 1;
    3734:	81 e0       	ldi	r24, 0x01	; 1
    3736:	90 e0       	ldi	r25, 0x00	; 0
    3738:	9e af       	std	Y+62, r25	; 0x3e
    373a:	8d af       	std	Y+61, r24	; 0x3d
    373c:	46 c0       	rjmp	.+140    	; 0x37ca <MODE_5+0x582>
	else if (__tmp > 65535)
    373e:	fe 01       	movw	r30, r28
    3740:	ff 96       	adiw	r30, 0x3f	; 63
    3742:	60 81       	ld	r22, Z
    3744:	71 81       	ldd	r23, Z+1	; 0x01
    3746:	82 81       	ldd	r24, Z+2	; 0x02
    3748:	93 81       	ldd	r25, Z+3	; 0x03
    374a:	20 e0       	ldi	r18, 0x00	; 0
    374c:	3f ef       	ldi	r19, 0xFF	; 255
    374e:	4f e7       	ldi	r20, 0x7F	; 127
    3750:	57 e4       	ldi	r21, 0x47	; 71
    3752:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3756:	18 16       	cp	r1, r24
    3758:	64 f5       	brge	.+88     	; 0x37b2 <MODE_5+0x56a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    375a:	fe 01       	movw	r30, r28
    375c:	ed 5b       	subi	r30, 0xBD	; 189
    375e:	ff 4f       	sbci	r31, 0xFF	; 255
    3760:	60 81       	ld	r22, Z
    3762:	71 81       	ldd	r23, Z+1	; 0x01
    3764:	82 81       	ldd	r24, Z+2	; 0x02
    3766:	93 81       	ldd	r25, Z+3	; 0x03
    3768:	20 e0       	ldi	r18, 0x00	; 0
    376a:	30 e0       	ldi	r19, 0x00	; 0
    376c:	40 e2       	ldi	r20, 0x20	; 32
    376e:	51 e4       	ldi	r21, 0x41	; 65
    3770:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3774:	dc 01       	movw	r26, r24
    3776:	cb 01       	movw	r24, r22
    3778:	bc 01       	movw	r22, r24
    377a:	cd 01       	movw	r24, r26
    377c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3780:	dc 01       	movw	r26, r24
    3782:	cb 01       	movw	r24, r22
    3784:	9e af       	std	Y+62, r25	; 0x3e
    3786:	8d af       	std	Y+61, r24	; 0x3d
    3788:	0f c0       	rjmp	.+30     	; 0x37a8 <MODE_5+0x560>
    378a:	88 ec       	ldi	r24, 0xC8	; 200
    378c:	90 e0       	ldi	r25, 0x00	; 0
    378e:	9c af       	std	Y+60, r25	; 0x3c
    3790:	8b af       	std	Y+59, r24	; 0x3b
    3792:	8b ad       	ldd	r24, Y+59	; 0x3b
    3794:	9c ad       	ldd	r25, Y+60	; 0x3c
    3796:	01 97       	sbiw	r24, 0x01	; 1
    3798:	f1 f7       	brne	.-4      	; 0x3796 <MODE_5+0x54e>
    379a:	9c af       	std	Y+60, r25	; 0x3c
    379c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    379e:	8d ad       	ldd	r24, Y+61	; 0x3d
    37a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    37a2:	01 97       	sbiw	r24, 0x01	; 1
    37a4:	9e af       	std	Y+62, r25	; 0x3e
    37a6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37a8:	8d ad       	ldd	r24, Y+61	; 0x3d
    37aa:	9e ad       	ldd	r25, Y+62	; 0x3e
    37ac:	00 97       	sbiw	r24, 0x00	; 0
    37ae:	69 f7       	brne	.-38     	; 0x378a <MODE_5+0x542>
    37b0:	16 c0       	rjmp	.+44     	; 0x37de <MODE_5+0x596>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37b2:	fe 01       	movw	r30, r28
    37b4:	ff 96       	adiw	r30, 0x3f	; 63
    37b6:	60 81       	ld	r22, Z
    37b8:	71 81       	ldd	r23, Z+1	; 0x01
    37ba:	82 81       	ldd	r24, Z+2	; 0x02
    37bc:	93 81       	ldd	r25, Z+3	; 0x03
    37be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37c2:	dc 01       	movw	r26, r24
    37c4:	cb 01       	movw	r24, r22
    37c6:	9e af       	std	Y+62, r25	; 0x3e
    37c8:	8d af       	std	Y+61, r24	; 0x3d
    37ca:	8d ad       	ldd	r24, Y+61	; 0x3d
    37cc:	9e ad       	ldd	r25, Y+62	; 0x3e
    37ce:	9a af       	std	Y+58, r25	; 0x3a
    37d0:	89 af       	std	Y+57, r24	; 0x39
    37d2:	89 ad       	ldd	r24, Y+57	; 0x39
    37d4:	9a ad       	ldd	r25, Y+58	; 0x3a
    37d6:	01 97       	sbiw	r24, 0x01	; 1
    37d8:	f1 f7       	brne	.-4      	; 0x37d6 <MODE_5+0x58e>
    37da:	9a af       	std	Y+58, r25	; 0x3a
    37dc:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, ON);
    37de:	81 e0       	ldi	r24, 0x01	; 1
    37e0:	61 e0       	ldi	r22, 0x01	; 1
    37e2:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED7, ON);
    37e6:	86 e0       	ldi	r24, 0x06	; 6
    37e8:	61 e0       	ldi	r22, 0x01	; 1
    37ea:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    37ee:	80 e0       	ldi	r24, 0x00	; 0
    37f0:	90 e0       	ldi	r25, 0x00	; 0
    37f2:	a0 e2       	ldi	r26, 0x20	; 32
    37f4:	b1 e4       	ldi	r27, 0x41	; 65
    37f6:	8d ab       	std	Y+53, r24	; 0x35
    37f8:	9e ab       	std	Y+54, r25	; 0x36
    37fa:	af ab       	std	Y+55, r26	; 0x37
    37fc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37fe:	6d a9       	ldd	r22, Y+53	; 0x35
    3800:	7e a9       	ldd	r23, Y+54	; 0x36
    3802:	8f a9       	ldd	r24, Y+55	; 0x37
    3804:	98 ad       	ldd	r25, Y+56	; 0x38
    3806:	20 e0       	ldi	r18, 0x00	; 0
    3808:	30 e0       	ldi	r19, 0x00	; 0
    380a:	4a ef       	ldi	r20, 0xFA	; 250
    380c:	54 e4       	ldi	r21, 0x44	; 68
    380e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3812:	dc 01       	movw	r26, r24
    3814:	cb 01       	movw	r24, r22
    3816:	89 ab       	std	Y+49, r24	; 0x31
    3818:	9a ab       	std	Y+50, r25	; 0x32
    381a:	ab ab       	std	Y+51, r26	; 0x33
    381c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    381e:	69 a9       	ldd	r22, Y+49	; 0x31
    3820:	7a a9       	ldd	r23, Y+50	; 0x32
    3822:	8b a9       	ldd	r24, Y+51	; 0x33
    3824:	9c a9       	ldd	r25, Y+52	; 0x34
    3826:	20 e0       	ldi	r18, 0x00	; 0
    3828:	30 e0       	ldi	r19, 0x00	; 0
    382a:	40 e8       	ldi	r20, 0x80	; 128
    382c:	5f e3       	ldi	r21, 0x3F	; 63
    382e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3832:	88 23       	and	r24, r24
    3834:	2c f4       	brge	.+10     	; 0x3840 <MODE_5+0x5f8>
		__ticks = 1;
    3836:	81 e0       	ldi	r24, 0x01	; 1
    3838:	90 e0       	ldi	r25, 0x00	; 0
    383a:	98 ab       	std	Y+48, r25	; 0x30
    383c:	8f a7       	std	Y+47, r24	; 0x2f
    383e:	3f c0       	rjmp	.+126    	; 0x38be <MODE_5+0x676>
	else if (__tmp > 65535)
    3840:	69 a9       	ldd	r22, Y+49	; 0x31
    3842:	7a a9       	ldd	r23, Y+50	; 0x32
    3844:	8b a9       	ldd	r24, Y+51	; 0x33
    3846:	9c a9       	ldd	r25, Y+52	; 0x34
    3848:	20 e0       	ldi	r18, 0x00	; 0
    384a:	3f ef       	ldi	r19, 0xFF	; 255
    384c:	4f e7       	ldi	r20, 0x7F	; 127
    384e:	57 e4       	ldi	r21, 0x47	; 71
    3850:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3854:	18 16       	cp	r1, r24
    3856:	4c f5       	brge	.+82     	; 0x38aa <MODE_5+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3858:	6d a9       	ldd	r22, Y+53	; 0x35
    385a:	7e a9       	ldd	r23, Y+54	; 0x36
    385c:	8f a9       	ldd	r24, Y+55	; 0x37
    385e:	98 ad       	ldd	r25, Y+56	; 0x38
    3860:	20 e0       	ldi	r18, 0x00	; 0
    3862:	30 e0       	ldi	r19, 0x00	; 0
    3864:	40 e2       	ldi	r20, 0x20	; 32
    3866:	51 e4       	ldi	r21, 0x41	; 65
    3868:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    386c:	dc 01       	movw	r26, r24
    386e:	cb 01       	movw	r24, r22
    3870:	bc 01       	movw	r22, r24
    3872:	cd 01       	movw	r24, r26
    3874:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3878:	dc 01       	movw	r26, r24
    387a:	cb 01       	movw	r24, r22
    387c:	98 ab       	std	Y+48, r25	; 0x30
    387e:	8f a7       	std	Y+47, r24	; 0x2f
    3880:	0f c0       	rjmp	.+30     	; 0x38a0 <MODE_5+0x658>
    3882:	88 ec       	ldi	r24, 0xC8	; 200
    3884:	90 e0       	ldi	r25, 0x00	; 0
    3886:	9e a7       	std	Y+46, r25	; 0x2e
    3888:	8d a7       	std	Y+45, r24	; 0x2d
    388a:	8d a5       	ldd	r24, Y+45	; 0x2d
    388c:	9e a5       	ldd	r25, Y+46	; 0x2e
    388e:	01 97       	sbiw	r24, 0x01	; 1
    3890:	f1 f7       	brne	.-4      	; 0x388e <MODE_5+0x646>
    3892:	9e a7       	std	Y+46, r25	; 0x2e
    3894:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3896:	8f a5       	ldd	r24, Y+47	; 0x2f
    3898:	98 a9       	ldd	r25, Y+48	; 0x30
    389a:	01 97       	sbiw	r24, 0x01	; 1
    389c:	98 ab       	std	Y+48, r25	; 0x30
    389e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    38a2:	98 a9       	ldd	r25, Y+48	; 0x30
    38a4:	00 97       	sbiw	r24, 0x00	; 0
    38a6:	69 f7       	brne	.-38     	; 0x3882 <MODE_5+0x63a>
    38a8:	14 c0       	rjmp	.+40     	; 0x38d2 <MODE_5+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38aa:	69 a9       	ldd	r22, Y+49	; 0x31
    38ac:	7a a9       	ldd	r23, Y+50	; 0x32
    38ae:	8b a9       	ldd	r24, Y+51	; 0x33
    38b0:	9c a9       	ldd	r25, Y+52	; 0x34
    38b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38b6:	dc 01       	movw	r26, r24
    38b8:	cb 01       	movw	r24, r22
    38ba:	98 ab       	std	Y+48, r25	; 0x30
    38bc:	8f a7       	std	Y+47, r24	; 0x2f
    38be:	8f a5       	ldd	r24, Y+47	; 0x2f
    38c0:	98 a9       	ldd	r25, Y+48	; 0x30
    38c2:	9c a7       	std	Y+44, r25	; 0x2c
    38c4:	8b a7       	std	Y+43, r24	; 0x2b
    38c6:	8b a5       	ldd	r24, Y+43	; 0x2b
    38c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    38ca:	01 97       	sbiw	r24, 0x01	; 1
    38cc:	f1 f7       	brne	.-4      	; 0x38ca <MODE_5+0x682>
    38ce:	9c a7       	std	Y+44, r25	; 0x2c
    38d0:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, OFF);
    38d2:	81 e0       	ldi	r24, 0x01	; 1
    38d4:	60 e0       	ldi	r22, 0x00	; 0
    38d6:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED7, OFF);
    38da:	86 e0       	ldi	r24, 0x06	; 6
    38dc:	60 e0       	ldi	r22, 0x00	; 0
    38de:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    38e2:	80 e0       	ldi	r24, 0x00	; 0
    38e4:	90 e0       	ldi	r25, 0x00	; 0
    38e6:	a0 e2       	ldi	r26, 0x20	; 32
    38e8:	b1 e4       	ldi	r27, 0x41	; 65
    38ea:	8f a3       	std	Y+39, r24	; 0x27
    38ec:	98 a7       	std	Y+40, r25	; 0x28
    38ee:	a9 a7       	std	Y+41, r26	; 0x29
    38f0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38f2:	6f a1       	ldd	r22, Y+39	; 0x27
    38f4:	78 a5       	ldd	r23, Y+40	; 0x28
    38f6:	89 a5       	ldd	r24, Y+41	; 0x29
    38f8:	9a a5       	ldd	r25, Y+42	; 0x2a
    38fa:	20 e0       	ldi	r18, 0x00	; 0
    38fc:	30 e0       	ldi	r19, 0x00	; 0
    38fe:	4a ef       	ldi	r20, 0xFA	; 250
    3900:	54 e4       	ldi	r21, 0x44	; 68
    3902:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3906:	dc 01       	movw	r26, r24
    3908:	cb 01       	movw	r24, r22
    390a:	8b a3       	std	Y+35, r24	; 0x23
    390c:	9c a3       	std	Y+36, r25	; 0x24
    390e:	ad a3       	std	Y+37, r26	; 0x25
    3910:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3912:	6b a1       	ldd	r22, Y+35	; 0x23
    3914:	7c a1       	ldd	r23, Y+36	; 0x24
    3916:	8d a1       	ldd	r24, Y+37	; 0x25
    3918:	9e a1       	ldd	r25, Y+38	; 0x26
    391a:	20 e0       	ldi	r18, 0x00	; 0
    391c:	30 e0       	ldi	r19, 0x00	; 0
    391e:	40 e8       	ldi	r20, 0x80	; 128
    3920:	5f e3       	ldi	r21, 0x3F	; 63
    3922:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3926:	88 23       	and	r24, r24
    3928:	2c f4       	brge	.+10     	; 0x3934 <MODE_5+0x6ec>
		__ticks = 1;
    392a:	81 e0       	ldi	r24, 0x01	; 1
    392c:	90 e0       	ldi	r25, 0x00	; 0
    392e:	9a a3       	std	Y+34, r25	; 0x22
    3930:	89 a3       	std	Y+33, r24	; 0x21
    3932:	3f c0       	rjmp	.+126    	; 0x39b2 <MODE_5+0x76a>
	else if (__tmp > 65535)
    3934:	6b a1       	ldd	r22, Y+35	; 0x23
    3936:	7c a1       	ldd	r23, Y+36	; 0x24
    3938:	8d a1       	ldd	r24, Y+37	; 0x25
    393a:	9e a1       	ldd	r25, Y+38	; 0x26
    393c:	20 e0       	ldi	r18, 0x00	; 0
    393e:	3f ef       	ldi	r19, 0xFF	; 255
    3940:	4f e7       	ldi	r20, 0x7F	; 127
    3942:	57 e4       	ldi	r21, 0x47	; 71
    3944:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3948:	18 16       	cp	r1, r24
    394a:	4c f5       	brge	.+82     	; 0x399e <MODE_5+0x756>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    394c:	6f a1       	ldd	r22, Y+39	; 0x27
    394e:	78 a5       	ldd	r23, Y+40	; 0x28
    3950:	89 a5       	ldd	r24, Y+41	; 0x29
    3952:	9a a5       	ldd	r25, Y+42	; 0x2a
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	30 e0       	ldi	r19, 0x00	; 0
    3958:	40 e2       	ldi	r20, 0x20	; 32
    395a:	51 e4       	ldi	r21, 0x41	; 65
    395c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	bc 01       	movw	r22, r24
    3966:	cd 01       	movw	r24, r26
    3968:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    396c:	dc 01       	movw	r26, r24
    396e:	cb 01       	movw	r24, r22
    3970:	9a a3       	std	Y+34, r25	; 0x22
    3972:	89 a3       	std	Y+33, r24	; 0x21
    3974:	0f c0       	rjmp	.+30     	; 0x3994 <MODE_5+0x74c>
    3976:	88 ec       	ldi	r24, 0xC8	; 200
    3978:	90 e0       	ldi	r25, 0x00	; 0
    397a:	98 a3       	std	Y+32, r25	; 0x20
    397c:	8f 8f       	std	Y+31, r24	; 0x1f
    397e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3980:	98 a1       	ldd	r25, Y+32	; 0x20
    3982:	01 97       	sbiw	r24, 0x01	; 1
    3984:	f1 f7       	brne	.-4      	; 0x3982 <MODE_5+0x73a>
    3986:	98 a3       	std	Y+32, r25	; 0x20
    3988:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    398a:	89 a1       	ldd	r24, Y+33	; 0x21
    398c:	9a a1       	ldd	r25, Y+34	; 0x22
    398e:	01 97       	sbiw	r24, 0x01	; 1
    3990:	9a a3       	std	Y+34, r25	; 0x22
    3992:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3994:	89 a1       	ldd	r24, Y+33	; 0x21
    3996:	9a a1       	ldd	r25, Y+34	; 0x22
    3998:	00 97       	sbiw	r24, 0x00	; 0
    399a:	69 f7       	brne	.-38     	; 0x3976 <MODE_5+0x72e>
    399c:	14 c0       	rjmp	.+40     	; 0x39c6 <MODE_5+0x77e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    399e:	6b a1       	ldd	r22, Y+35	; 0x23
    39a0:	7c a1       	ldd	r23, Y+36	; 0x24
    39a2:	8d a1       	ldd	r24, Y+37	; 0x25
    39a4:	9e a1       	ldd	r25, Y+38	; 0x26
    39a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39aa:	dc 01       	movw	r26, r24
    39ac:	cb 01       	movw	r24, r22
    39ae:	9a a3       	std	Y+34, r25	; 0x22
    39b0:	89 a3       	std	Y+33, r24	; 0x21
    39b2:	89 a1       	ldd	r24, Y+33	; 0x21
    39b4:	9a a1       	ldd	r25, Y+34	; 0x22
    39b6:	9e 8f       	std	Y+30, r25	; 0x1e
    39b8:	8d 8f       	std	Y+29, r24	; 0x1d
    39ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
    39bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    39be:	01 97       	sbiw	r24, 0x01	; 1
    39c0:	f1 f7       	brne	.-4      	; 0x39be <MODE_5+0x776>
    39c2:	9e 8f       	std	Y+30, r25	; 0x1e
    39c4:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED1, ON);
    39c6:	80 e0       	ldi	r24, 0x00	; 0
    39c8:	61 e0       	ldi	r22, 0x01	; 1
    39ca:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED8, ON);
    39ce:	87 e0       	ldi	r24, 0x07	; 7
    39d0:	61 e0       	ldi	r22, 0x01	; 1
    39d2:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    39d6:	80 e0       	ldi	r24, 0x00	; 0
    39d8:	90 e0       	ldi	r25, 0x00	; 0
    39da:	a0 e2       	ldi	r26, 0x20	; 32
    39dc:	b1 e4       	ldi	r27, 0x41	; 65
    39de:	89 8f       	std	Y+25, r24	; 0x19
    39e0:	9a 8f       	std	Y+26, r25	; 0x1a
    39e2:	ab 8f       	std	Y+27, r26	; 0x1b
    39e4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39e6:	69 8d       	ldd	r22, Y+25	; 0x19
    39e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    39ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    39ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    39ee:	20 e0       	ldi	r18, 0x00	; 0
    39f0:	30 e0       	ldi	r19, 0x00	; 0
    39f2:	4a ef       	ldi	r20, 0xFA	; 250
    39f4:	54 e4       	ldi	r21, 0x44	; 68
    39f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39fa:	dc 01       	movw	r26, r24
    39fc:	cb 01       	movw	r24, r22
    39fe:	8d 8b       	std	Y+21, r24	; 0x15
    3a00:	9e 8b       	std	Y+22, r25	; 0x16
    3a02:	af 8b       	std	Y+23, r26	; 0x17
    3a04:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3a06:	6d 89       	ldd	r22, Y+21	; 0x15
    3a08:	7e 89       	ldd	r23, Y+22	; 0x16
    3a0a:	8f 89       	ldd	r24, Y+23	; 0x17
    3a0c:	98 8d       	ldd	r25, Y+24	; 0x18
    3a0e:	20 e0       	ldi	r18, 0x00	; 0
    3a10:	30 e0       	ldi	r19, 0x00	; 0
    3a12:	40 e8       	ldi	r20, 0x80	; 128
    3a14:	5f e3       	ldi	r21, 0x3F	; 63
    3a16:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a1a:	88 23       	and	r24, r24
    3a1c:	2c f4       	brge	.+10     	; 0x3a28 <MODE_5+0x7e0>
		__ticks = 1;
    3a1e:	81 e0       	ldi	r24, 0x01	; 1
    3a20:	90 e0       	ldi	r25, 0x00	; 0
    3a22:	9c 8b       	std	Y+20, r25	; 0x14
    3a24:	8b 8b       	std	Y+19, r24	; 0x13
    3a26:	3f c0       	rjmp	.+126    	; 0x3aa6 <MODE_5+0x85e>
	else if (__tmp > 65535)
    3a28:	6d 89       	ldd	r22, Y+21	; 0x15
    3a2a:	7e 89       	ldd	r23, Y+22	; 0x16
    3a2c:	8f 89       	ldd	r24, Y+23	; 0x17
    3a2e:	98 8d       	ldd	r25, Y+24	; 0x18
    3a30:	20 e0       	ldi	r18, 0x00	; 0
    3a32:	3f ef       	ldi	r19, 0xFF	; 255
    3a34:	4f e7       	ldi	r20, 0x7F	; 127
    3a36:	57 e4       	ldi	r21, 0x47	; 71
    3a38:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a3c:	18 16       	cp	r1, r24
    3a3e:	4c f5       	brge	.+82     	; 0x3a92 <MODE_5+0x84a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a40:	69 8d       	ldd	r22, Y+25	; 0x19
    3a42:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a44:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a46:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a48:	20 e0       	ldi	r18, 0x00	; 0
    3a4a:	30 e0       	ldi	r19, 0x00	; 0
    3a4c:	40 e2       	ldi	r20, 0x20	; 32
    3a4e:	51 e4       	ldi	r21, 0x41	; 65
    3a50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a54:	dc 01       	movw	r26, r24
    3a56:	cb 01       	movw	r24, r22
    3a58:	bc 01       	movw	r22, r24
    3a5a:	cd 01       	movw	r24, r26
    3a5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a60:	dc 01       	movw	r26, r24
    3a62:	cb 01       	movw	r24, r22
    3a64:	9c 8b       	std	Y+20, r25	; 0x14
    3a66:	8b 8b       	std	Y+19, r24	; 0x13
    3a68:	0f c0       	rjmp	.+30     	; 0x3a88 <MODE_5+0x840>
    3a6a:	88 ec       	ldi	r24, 0xC8	; 200
    3a6c:	90 e0       	ldi	r25, 0x00	; 0
    3a6e:	9a 8b       	std	Y+18, r25	; 0x12
    3a70:	89 8b       	std	Y+17, r24	; 0x11
    3a72:	89 89       	ldd	r24, Y+17	; 0x11
    3a74:	9a 89       	ldd	r25, Y+18	; 0x12
    3a76:	01 97       	sbiw	r24, 0x01	; 1
    3a78:	f1 f7       	brne	.-4      	; 0x3a76 <MODE_5+0x82e>
    3a7a:	9a 8b       	std	Y+18, r25	; 0x12
    3a7c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a7e:	8b 89       	ldd	r24, Y+19	; 0x13
    3a80:	9c 89       	ldd	r25, Y+20	; 0x14
    3a82:	01 97       	sbiw	r24, 0x01	; 1
    3a84:	9c 8b       	std	Y+20, r25	; 0x14
    3a86:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a88:	8b 89       	ldd	r24, Y+19	; 0x13
    3a8a:	9c 89       	ldd	r25, Y+20	; 0x14
    3a8c:	00 97       	sbiw	r24, 0x00	; 0
    3a8e:	69 f7       	brne	.-38     	; 0x3a6a <MODE_5+0x822>
    3a90:	14 c0       	rjmp	.+40     	; 0x3aba <MODE_5+0x872>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a92:	6d 89       	ldd	r22, Y+21	; 0x15
    3a94:	7e 89       	ldd	r23, Y+22	; 0x16
    3a96:	8f 89       	ldd	r24, Y+23	; 0x17
    3a98:	98 8d       	ldd	r25, Y+24	; 0x18
    3a9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a9e:	dc 01       	movw	r26, r24
    3aa0:	cb 01       	movw	r24, r22
    3aa2:	9c 8b       	std	Y+20, r25	; 0x14
    3aa4:	8b 8b       	std	Y+19, r24	; 0x13
    3aa6:	8b 89       	ldd	r24, Y+19	; 0x13
    3aa8:	9c 89       	ldd	r25, Y+20	; 0x14
    3aaa:	98 8b       	std	Y+16, r25	; 0x10
    3aac:	8f 87       	std	Y+15, r24	; 0x0f
    3aae:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ab0:	98 89       	ldd	r25, Y+16	; 0x10
    3ab2:	01 97       	sbiw	r24, 0x01	; 1
    3ab4:	f1 f7       	brne	.-4      	; 0x3ab2 <MODE_5+0x86a>
    3ab6:	98 8b       	std	Y+16, r25	; 0x10
    3ab8:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED1, OFF);
    3aba:	80 e0       	ldi	r24, 0x00	; 0
    3abc:	60 e0       	ldi	r22, 0x00	; 0
    3abe:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
	LED_CTRL(LED8, OFF);
    3ac2:	87 e0       	ldi	r24, 0x07	; 7
    3ac4:	60 e0       	ldi	r22, 0x00	; 0
    3ac6:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    3aca:	80 e0       	ldi	r24, 0x00	; 0
    3acc:	90 e0       	ldi	r25, 0x00	; 0
    3ace:	a6 e9       	ldi	r26, 0x96	; 150
    3ad0:	b3 e4       	ldi	r27, 0x43	; 67
    3ad2:	8b 87       	std	Y+11, r24	; 0x0b
    3ad4:	9c 87       	std	Y+12, r25	; 0x0c
    3ad6:	ad 87       	std	Y+13, r26	; 0x0d
    3ad8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ada:	6b 85       	ldd	r22, Y+11	; 0x0b
    3adc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ade:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ae0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ae2:	20 e0       	ldi	r18, 0x00	; 0
    3ae4:	30 e0       	ldi	r19, 0x00	; 0
    3ae6:	4a ef       	ldi	r20, 0xFA	; 250
    3ae8:	54 e4       	ldi	r21, 0x44	; 68
    3aea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3aee:	dc 01       	movw	r26, r24
    3af0:	cb 01       	movw	r24, r22
    3af2:	8f 83       	std	Y+7, r24	; 0x07
    3af4:	98 87       	std	Y+8, r25	; 0x08
    3af6:	a9 87       	std	Y+9, r26	; 0x09
    3af8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3afa:	6f 81       	ldd	r22, Y+7	; 0x07
    3afc:	78 85       	ldd	r23, Y+8	; 0x08
    3afe:	89 85       	ldd	r24, Y+9	; 0x09
    3b00:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b02:	20 e0       	ldi	r18, 0x00	; 0
    3b04:	30 e0       	ldi	r19, 0x00	; 0
    3b06:	40 e8       	ldi	r20, 0x80	; 128
    3b08:	5f e3       	ldi	r21, 0x3F	; 63
    3b0a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b0e:	88 23       	and	r24, r24
    3b10:	2c f4       	brge	.+10     	; 0x3b1c <MODE_5+0x8d4>
		__ticks = 1;
    3b12:	81 e0       	ldi	r24, 0x01	; 1
    3b14:	90 e0       	ldi	r25, 0x00	; 0
    3b16:	9e 83       	std	Y+6, r25	; 0x06
    3b18:	8d 83       	std	Y+5, r24	; 0x05
    3b1a:	3f c0       	rjmp	.+126    	; 0x3b9a <MODE_5+0x952>
	else if (__tmp > 65535)
    3b1c:	6f 81       	ldd	r22, Y+7	; 0x07
    3b1e:	78 85       	ldd	r23, Y+8	; 0x08
    3b20:	89 85       	ldd	r24, Y+9	; 0x09
    3b22:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b24:	20 e0       	ldi	r18, 0x00	; 0
    3b26:	3f ef       	ldi	r19, 0xFF	; 255
    3b28:	4f e7       	ldi	r20, 0x7F	; 127
    3b2a:	57 e4       	ldi	r21, 0x47	; 71
    3b2c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b30:	18 16       	cp	r1, r24
    3b32:	4c f5       	brge	.+82     	; 0x3b86 <MODE_5+0x93e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b34:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b36:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b38:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b3c:	20 e0       	ldi	r18, 0x00	; 0
    3b3e:	30 e0       	ldi	r19, 0x00	; 0
    3b40:	40 e2       	ldi	r20, 0x20	; 32
    3b42:	51 e4       	ldi	r21, 0x41	; 65
    3b44:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b48:	dc 01       	movw	r26, r24
    3b4a:	cb 01       	movw	r24, r22
    3b4c:	bc 01       	movw	r22, r24
    3b4e:	cd 01       	movw	r24, r26
    3b50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b54:	dc 01       	movw	r26, r24
    3b56:	cb 01       	movw	r24, r22
    3b58:	9e 83       	std	Y+6, r25	; 0x06
    3b5a:	8d 83       	std	Y+5, r24	; 0x05
    3b5c:	0f c0       	rjmp	.+30     	; 0x3b7c <MODE_5+0x934>
    3b5e:	88 ec       	ldi	r24, 0xC8	; 200
    3b60:	90 e0       	ldi	r25, 0x00	; 0
    3b62:	9c 83       	std	Y+4, r25	; 0x04
    3b64:	8b 83       	std	Y+3, r24	; 0x03
    3b66:	8b 81       	ldd	r24, Y+3	; 0x03
    3b68:	9c 81       	ldd	r25, Y+4	; 0x04
    3b6a:	01 97       	sbiw	r24, 0x01	; 1
    3b6c:	f1 f7       	brne	.-4      	; 0x3b6a <MODE_5+0x922>
    3b6e:	9c 83       	std	Y+4, r25	; 0x04
    3b70:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b72:	8d 81       	ldd	r24, Y+5	; 0x05
    3b74:	9e 81       	ldd	r25, Y+6	; 0x06
    3b76:	01 97       	sbiw	r24, 0x01	; 1
    3b78:	9e 83       	std	Y+6, r25	; 0x06
    3b7a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b7c:	8d 81       	ldd	r24, Y+5	; 0x05
    3b7e:	9e 81       	ldd	r25, Y+6	; 0x06
    3b80:	00 97       	sbiw	r24, 0x00	; 0
    3b82:	69 f7       	brne	.-38     	; 0x3b5e <MODE_5+0x916>
    3b84:	14 c0       	rjmp	.+40     	; 0x3bae <MODE_5+0x966>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b86:	6f 81       	ldd	r22, Y+7	; 0x07
    3b88:	78 85       	ldd	r23, Y+8	; 0x08
    3b8a:	89 85       	ldd	r24, Y+9	; 0x09
    3b8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b92:	dc 01       	movw	r26, r24
    3b94:	cb 01       	movw	r24, r22
    3b96:	9e 83       	std	Y+6, r25	; 0x06
    3b98:	8d 83       	std	Y+5, r24	; 0x05
    3b9a:	8d 81       	ldd	r24, Y+5	; 0x05
    3b9c:	9e 81       	ldd	r25, Y+6	; 0x06
    3b9e:	9a 83       	std	Y+2, r25	; 0x02
    3ba0:	89 83       	std	Y+1, r24	; 0x01
    3ba2:	89 81       	ldd	r24, Y+1	; 0x01
    3ba4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ba6:	01 97       	sbiw	r24, 0x01	; 1
    3ba8:	f1 f7       	brne	.-4      	; 0x3ba6 <MODE_5+0x95e>
    3baa:	9a 83       	std	Y+2, r25	; 0x02
    3bac:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_5 */
    3bae:	c0 59       	subi	r28, 0x90	; 144
    3bb0:	df 4f       	sbci	r29, 0xFF	; 255
    3bb2:	0f b6       	in	r0, 0x3f	; 63
    3bb4:	f8 94       	cli
    3bb6:	de bf       	out	0x3e, r29	; 62
    3bb8:	0f be       	out	0x3f, r0	; 63
    3bba:	cd bf       	out	0x3d, r28	; 61
    3bbc:	cf 91       	pop	r28
    3bbe:	df 91       	pop	r29
    3bc0:	1f 91       	pop	r17
    3bc2:	0f 91       	pop	r16
    3bc4:	08 95       	ret

00003bc6 <MODE_6>:
/**
 * @brief function to implement mode 6
 */
static void MODE_6(void)
{
    3bc6:	df 93       	push	r29
    3bc8:	cf 93       	push	r28
    3bca:	cd b7       	in	r28, 0x3d	; 61
    3bcc:	de b7       	in	r29, 0x3e	; 62
    3bce:	6c 97       	sbiw	r28, 0x1c	; 28
    3bd0:	0f b6       	in	r0, 0x3f	; 63
    3bd2:	f8 94       	cli
    3bd4:	de bf       	out	0x3e, r29	; 62
    3bd6:	0f be       	out	0x3f, r0	; 63
    3bd8:	cd bf       	out	0x3d, r28	; 61
	MODE_2();
    3bda:	0e 94 89 09 	call	0x1312	; 0x1312 <MODE_2>
    3bde:	80 e0       	ldi	r24, 0x00	; 0
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	a0 e2       	ldi	r26, 0x20	; 32
    3be4:	b1 e4       	ldi	r27, 0x41	; 65
    3be6:	89 8f       	std	Y+25, r24	; 0x19
    3be8:	9a 8f       	std	Y+26, r25	; 0x1a
    3bea:	ab 8f       	std	Y+27, r26	; 0x1b
    3bec:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bee:	69 8d       	ldd	r22, Y+25	; 0x19
    3bf0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3bf2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3bf4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3bf6:	20 e0       	ldi	r18, 0x00	; 0
    3bf8:	30 e0       	ldi	r19, 0x00	; 0
    3bfa:	4a ef       	ldi	r20, 0xFA	; 250
    3bfc:	54 e4       	ldi	r21, 0x44	; 68
    3bfe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c02:	dc 01       	movw	r26, r24
    3c04:	cb 01       	movw	r24, r22
    3c06:	8d 8b       	std	Y+21, r24	; 0x15
    3c08:	9e 8b       	std	Y+22, r25	; 0x16
    3c0a:	af 8b       	std	Y+23, r26	; 0x17
    3c0c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3c0e:	6d 89       	ldd	r22, Y+21	; 0x15
    3c10:	7e 89       	ldd	r23, Y+22	; 0x16
    3c12:	8f 89       	ldd	r24, Y+23	; 0x17
    3c14:	98 8d       	ldd	r25, Y+24	; 0x18
    3c16:	20 e0       	ldi	r18, 0x00	; 0
    3c18:	30 e0       	ldi	r19, 0x00	; 0
    3c1a:	40 e8       	ldi	r20, 0x80	; 128
    3c1c:	5f e3       	ldi	r21, 0x3F	; 63
    3c1e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c22:	88 23       	and	r24, r24
    3c24:	2c f4       	brge	.+10     	; 0x3c30 <MODE_6+0x6a>
		__ticks = 1;
    3c26:	81 e0       	ldi	r24, 0x01	; 1
    3c28:	90 e0       	ldi	r25, 0x00	; 0
    3c2a:	9c 8b       	std	Y+20, r25	; 0x14
    3c2c:	8b 8b       	std	Y+19, r24	; 0x13
    3c2e:	3f c0       	rjmp	.+126    	; 0x3cae <MODE_6+0xe8>
	else if (__tmp > 65535)
    3c30:	6d 89       	ldd	r22, Y+21	; 0x15
    3c32:	7e 89       	ldd	r23, Y+22	; 0x16
    3c34:	8f 89       	ldd	r24, Y+23	; 0x17
    3c36:	98 8d       	ldd	r25, Y+24	; 0x18
    3c38:	20 e0       	ldi	r18, 0x00	; 0
    3c3a:	3f ef       	ldi	r19, 0xFF	; 255
    3c3c:	4f e7       	ldi	r20, 0x7F	; 127
    3c3e:	57 e4       	ldi	r21, 0x47	; 71
    3c40:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c44:	18 16       	cp	r1, r24
    3c46:	4c f5       	brge	.+82     	; 0x3c9a <MODE_6+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c48:	69 8d       	ldd	r22, Y+25	; 0x19
    3c4a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c4c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c4e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c50:	20 e0       	ldi	r18, 0x00	; 0
    3c52:	30 e0       	ldi	r19, 0x00	; 0
    3c54:	40 e2       	ldi	r20, 0x20	; 32
    3c56:	51 e4       	ldi	r21, 0x41	; 65
    3c58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c5c:	dc 01       	movw	r26, r24
    3c5e:	cb 01       	movw	r24, r22
    3c60:	bc 01       	movw	r22, r24
    3c62:	cd 01       	movw	r24, r26
    3c64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c68:	dc 01       	movw	r26, r24
    3c6a:	cb 01       	movw	r24, r22
    3c6c:	9c 8b       	std	Y+20, r25	; 0x14
    3c6e:	8b 8b       	std	Y+19, r24	; 0x13
    3c70:	0f c0       	rjmp	.+30     	; 0x3c90 <MODE_6+0xca>
    3c72:	88 ec       	ldi	r24, 0xC8	; 200
    3c74:	90 e0       	ldi	r25, 0x00	; 0
    3c76:	9a 8b       	std	Y+18, r25	; 0x12
    3c78:	89 8b       	std	Y+17, r24	; 0x11
    3c7a:	89 89       	ldd	r24, Y+17	; 0x11
    3c7c:	9a 89       	ldd	r25, Y+18	; 0x12
    3c7e:	01 97       	sbiw	r24, 0x01	; 1
    3c80:	f1 f7       	brne	.-4      	; 0x3c7e <MODE_6+0xb8>
    3c82:	9a 8b       	std	Y+18, r25	; 0x12
    3c84:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c86:	8b 89       	ldd	r24, Y+19	; 0x13
    3c88:	9c 89       	ldd	r25, Y+20	; 0x14
    3c8a:	01 97       	sbiw	r24, 0x01	; 1
    3c8c:	9c 8b       	std	Y+20, r25	; 0x14
    3c8e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c90:	8b 89       	ldd	r24, Y+19	; 0x13
    3c92:	9c 89       	ldd	r25, Y+20	; 0x14
    3c94:	00 97       	sbiw	r24, 0x00	; 0
    3c96:	69 f7       	brne	.-38     	; 0x3c72 <MODE_6+0xac>
    3c98:	14 c0       	rjmp	.+40     	; 0x3cc2 <MODE_6+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c9a:	6d 89       	ldd	r22, Y+21	; 0x15
    3c9c:	7e 89       	ldd	r23, Y+22	; 0x16
    3c9e:	8f 89       	ldd	r24, Y+23	; 0x17
    3ca0:	98 8d       	ldd	r25, Y+24	; 0x18
    3ca2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ca6:	dc 01       	movw	r26, r24
    3ca8:	cb 01       	movw	r24, r22
    3caa:	9c 8b       	std	Y+20, r25	; 0x14
    3cac:	8b 8b       	std	Y+19, r24	; 0x13
    3cae:	8b 89       	ldd	r24, Y+19	; 0x13
    3cb0:	9c 89       	ldd	r25, Y+20	; 0x14
    3cb2:	98 8b       	std	Y+16, r25	; 0x10
    3cb4:	8f 87       	std	Y+15, r24	; 0x0f
    3cb6:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cb8:	98 89       	ldd	r25, Y+16	; 0x10
    3cba:	01 97       	sbiw	r24, 0x01	; 1
    3cbc:	f1 f7       	brne	.-4      	; 0x3cba <MODE_6+0xf4>
    3cbe:	98 8b       	std	Y+16, r25	; 0x10
    3cc0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);
	MODE_3();
    3cc2:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <MODE_3>
    3cc6:	80 e0       	ldi	r24, 0x00	; 0
    3cc8:	90 e0       	ldi	r25, 0x00	; 0
    3cca:	aa e7       	ldi	r26, 0x7A	; 122
    3ccc:	b3 e4       	ldi	r27, 0x43	; 67
    3cce:	8b 87       	std	Y+11, r24	; 0x0b
    3cd0:	9c 87       	std	Y+12, r25	; 0x0c
    3cd2:	ad 87       	std	Y+13, r26	; 0x0d
    3cd4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3cd6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3cd8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3cda:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cdc:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cde:	20 e0       	ldi	r18, 0x00	; 0
    3ce0:	30 e0       	ldi	r19, 0x00	; 0
    3ce2:	4a ef       	ldi	r20, 0xFA	; 250
    3ce4:	54 e4       	ldi	r21, 0x44	; 68
    3ce6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3cea:	dc 01       	movw	r26, r24
    3cec:	cb 01       	movw	r24, r22
    3cee:	8f 83       	std	Y+7, r24	; 0x07
    3cf0:	98 87       	std	Y+8, r25	; 0x08
    3cf2:	a9 87       	std	Y+9, r26	; 0x09
    3cf4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3cf6:	6f 81       	ldd	r22, Y+7	; 0x07
    3cf8:	78 85       	ldd	r23, Y+8	; 0x08
    3cfa:	89 85       	ldd	r24, Y+9	; 0x09
    3cfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cfe:	20 e0       	ldi	r18, 0x00	; 0
    3d00:	30 e0       	ldi	r19, 0x00	; 0
    3d02:	40 e8       	ldi	r20, 0x80	; 128
    3d04:	5f e3       	ldi	r21, 0x3F	; 63
    3d06:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d0a:	88 23       	and	r24, r24
    3d0c:	2c f4       	brge	.+10     	; 0x3d18 <MODE_6+0x152>
		__ticks = 1;
    3d0e:	81 e0       	ldi	r24, 0x01	; 1
    3d10:	90 e0       	ldi	r25, 0x00	; 0
    3d12:	9e 83       	std	Y+6, r25	; 0x06
    3d14:	8d 83       	std	Y+5, r24	; 0x05
    3d16:	3f c0       	rjmp	.+126    	; 0x3d96 <MODE_6+0x1d0>
	else if (__tmp > 65535)
    3d18:	6f 81       	ldd	r22, Y+7	; 0x07
    3d1a:	78 85       	ldd	r23, Y+8	; 0x08
    3d1c:	89 85       	ldd	r24, Y+9	; 0x09
    3d1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d20:	20 e0       	ldi	r18, 0x00	; 0
    3d22:	3f ef       	ldi	r19, 0xFF	; 255
    3d24:	4f e7       	ldi	r20, 0x7F	; 127
    3d26:	57 e4       	ldi	r21, 0x47	; 71
    3d28:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3d2c:	18 16       	cp	r1, r24
    3d2e:	4c f5       	brge	.+82     	; 0x3d82 <MODE_6+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d30:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d32:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d34:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d36:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d38:	20 e0       	ldi	r18, 0x00	; 0
    3d3a:	30 e0       	ldi	r19, 0x00	; 0
    3d3c:	40 e2       	ldi	r20, 0x20	; 32
    3d3e:	51 e4       	ldi	r21, 0x41	; 65
    3d40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d44:	dc 01       	movw	r26, r24
    3d46:	cb 01       	movw	r24, r22
    3d48:	bc 01       	movw	r22, r24
    3d4a:	cd 01       	movw	r24, r26
    3d4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d50:	dc 01       	movw	r26, r24
    3d52:	cb 01       	movw	r24, r22
    3d54:	9e 83       	std	Y+6, r25	; 0x06
    3d56:	8d 83       	std	Y+5, r24	; 0x05
    3d58:	0f c0       	rjmp	.+30     	; 0x3d78 <MODE_6+0x1b2>
    3d5a:	88 ec       	ldi	r24, 0xC8	; 200
    3d5c:	90 e0       	ldi	r25, 0x00	; 0
    3d5e:	9c 83       	std	Y+4, r25	; 0x04
    3d60:	8b 83       	std	Y+3, r24	; 0x03
    3d62:	8b 81       	ldd	r24, Y+3	; 0x03
    3d64:	9c 81       	ldd	r25, Y+4	; 0x04
    3d66:	01 97       	sbiw	r24, 0x01	; 1
    3d68:	f1 f7       	brne	.-4      	; 0x3d66 <MODE_6+0x1a0>
    3d6a:	9c 83       	std	Y+4, r25	; 0x04
    3d6c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d6e:	8d 81       	ldd	r24, Y+5	; 0x05
    3d70:	9e 81       	ldd	r25, Y+6	; 0x06
    3d72:	01 97       	sbiw	r24, 0x01	; 1
    3d74:	9e 83       	std	Y+6, r25	; 0x06
    3d76:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d78:	8d 81       	ldd	r24, Y+5	; 0x05
    3d7a:	9e 81       	ldd	r25, Y+6	; 0x06
    3d7c:	00 97       	sbiw	r24, 0x00	; 0
    3d7e:	69 f7       	brne	.-38     	; 0x3d5a <MODE_6+0x194>
    3d80:	14 c0       	rjmp	.+40     	; 0x3daa <MODE_6+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d82:	6f 81       	ldd	r22, Y+7	; 0x07
    3d84:	78 85       	ldd	r23, Y+8	; 0x08
    3d86:	89 85       	ldd	r24, Y+9	; 0x09
    3d88:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d8e:	dc 01       	movw	r26, r24
    3d90:	cb 01       	movw	r24, r22
    3d92:	9e 83       	std	Y+6, r25	; 0x06
    3d94:	8d 83       	std	Y+5, r24	; 0x05
    3d96:	8d 81       	ldd	r24, Y+5	; 0x05
    3d98:	9e 81       	ldd	r25, Y+6	; 0x06
    3d9a:	9a 83       	std	Y+2, r25	; 0x02
    3d9c:	89 83       	std	Y+1, r24	; 0x01
    3d9e:	89 81       	ldd	r24, Y+1	; 0x01
    3da0:	9a 81       	ldd	r25, Y+2	; 0x02
    3da2:	01 97       	sbiw	r24, 0x01	; 1
    3da4:	f1 f7       	brne	.-4      	; 0x3da2 <MODE_6+0x1dc>
    3da6:	9a 83       	std	Y+2, r25	; 0x02
    3da8:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(250);

}/** @end MODE_6 */
    3daa:	6c 96       	adiw	r28, 0x1c	; 28
    3dac:	0f b6       	in	r0, 0x3f	; 63
    3dae:	f8 94       	cli
    3db0:	de bf       	out	0x3e, r29	; 62
    3db2:	0f be       	out	0x3f, r0	; 63
    3db4:	cd bf       	out	0x3d, r28	; 61
    3db6:	cf 91       	pop	r28
    3db8:	df 91       	pop	r29
    3dba:	08 95       	ret

00003dbc <MODE_7>:
/**
 * @brief function to implement mode 7
 */
static void MODE_7(void)
{
    3dbc:	0f 93       	push	r16
    3dbe:	1f 93       	push	r17
    3dc0:	df 93       	push	r29
    3dc2:	cf 93       	push	r28
    3dc4:	cd b7       	in	r28, 0x3d	; 61
    3dc6:	de b7       	in	r29, 0x3e	; 62
    3dc8:	c1 57       	subi	r28, 0x71	; 113
    3dca:	d0 40       	sbci	r29, 0x00	; 0
    3dcc:	0f b6       	in	r0, 0x3f	; 63
    3dce:	f8 94       	cli
    3dd0:	de bf       	out	0x3e, r29	; 62
    3dd2:	0f be       	out	0x3f, r0	; 63
    3dd4:	cd bf       	out	0x3d, r28	; 61
	LED_CTRL(LED1, ON);
    3dd6:	80 e0       	ldi	r24, 0x00	; 0
    3dd8:	61 e0       	ldi	r22, 0x01	; 1
    3dda:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    3dde:	fe 01       	movw	r30, r28
    3de0:	e3 59       	subi	r30, 0x93	; 147
    3de2:	ff 4f       	sbci	r31, 0xFF	; 255
    3de4:	80 e0       	ldi	r24, 0x00	; 0
    3de6:	90 e0       	ldi	r25, 0x00	; 0
    3de8:	a0 e2       	ldi	r26, 0x20	; 32
    3dea:	b1 e4       	ldi	r27, 0x41	; 65
    3dec:	80 83       	st	Z, r24
    3dee:	91 83       	std	Z+1, r25	; 0x01
    3df0:	a2 83       	std	Z+2, r26	; 0x02
    3df2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3df4:	8e 01       	movw	r16, r28
    3df6:	07 59       	subi	r16, 0x97	; 151
    3df8:	1f 4f       	sbci	r17, 0xFF	; 255
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	e3 59       	subi	r30, 0x93	; 147
    3dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    3e00:	60 81       	ld	r22, Z
    3e02:	71 81       	ldd	r23, Z+1	; 0x01
    3e04:	82 81       	ldd	r24, Z+2	; 0x02
    3e06:	93 81       	ldd	r25, Z+3	; 0x03
    3e08:	20 e0       	ldi	r18, 0x00	; 0
    3e0a:	30 e0       	ldi	r19, 0x00	; 0
    3e0c:	4a ef       	ldi	r20, 0xFA	; 250
    3e0e:	54 e4       	ldi	r21, 0x44	; 68
    3e10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e14:	dc 01       	movw	r26, r24
    3e16:	cb 01       	movw	r24, r22
    3e18:	f8 01       	movw	r30, r16
    3e1a:	80 83       	st	Z, r24
    3e1c:	91 83       	std	Z+1, r25	; 0x01
    3e1e:	a2 83       	std	Z+2, r26	; 0x02
    3e20:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e22:	fe 01       	movw	r30, r28
    3e24:	e7 59       	subi	r30, 0x97	; 151
    3e26:	ff 4f       	sbci	r31, 0xFF	; 255
    3e28:	60 81       	ld	r22, Z
    3e2a:	71 81       	ldd	r23, Z+1	; 0x01
    3e2c:	82 81       	ldd	r24, Z+2	; 0x02
    3e2e:	93 81       	ldd	r25, Z+3	; 0x03
    3e30:	20 e0       	ldi	r18, 0x00	; 0
    3e32:	30 e0       	ldi	r19, 0x00	; 0
    3e34:	40 e8       	ldi	r20, 0x80	; 128
    3e36:	5f e3       	ldi	r21, 0x3F	; 63
    3e38:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3e3c:	88 23       	and	r24, r24
    3e3e:	44 f4       	brge	.+16     	; 0x3e50 <MODE_7+0x94>
		__ticks = 1;
    3e40:	fe 01       	movw	r30, r28
    3e42:	e9 59       	subi	r30, 0x99	; 153
    3e44:	ff 4f       	sbci	r31, 0xFF	; 255
    3e46:	81 e0       	ldi	r24, 0x01	; 1
    3e48:	90 e0       	ldi	r25, 0x00	; 0
    3e4a:	91 83       	std	Z+1, r25	; 0x01
    3e4c:	80 83       	st	Z, r24
    3e4e:	64 c0       	rjmp	.+200    	; 0x3f18 <MODE_7+0x15c>
	else if (__tmp > 65535)
    3e50:	fe 01       	movw	r30, r28
    3e52:	e7 59       	subi	r30, 0x97	; 151
    3e54:	ff 4f       	sbci	r31, 0xFF	; 255
    3e56:	60 81       	ld	r22, Z
    3e58:	71 81       	ldd	r23, Z+1	; 0x01
    3e5a:	82 81       	ldd	r24, Z+2	; 0x02
    3e5c:	93 81       	ldd	r25, Z+3	; 0x03
    3e5e:	20 e0       	ldi	r18, 0x00	; 0
    3e60:	3f ef       	ldi	r19, 0xFF	; 255
    3e62:	4f e7       	ldi	r20, 0x7F	; 127
    3e64:	57 e4       	ldi	r21, 0x47	; 71
    3e66:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3e6a:	18 16       	cp	r1, r24
    3e6c:	0c f0       	brlt	.+2      	; 0x3e70 <MODE_7+0xb4>
    3e6e:	43 c0       	rjmp	.+134    	; 0x3ef6 <MODE_7+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e70:	fe 01       	movw	r30, r28
    3e72:	e3 59       	subi	r30, 0x93	; 147
    3e74:	ff 4f       	sbci	r31, 0xFF	; 255
    3e76:	60 81       	ld	r22, Z
    3e78:	71 81       	ldd	r23, Z+1	; 0x01
    3e7a:	82 81       	ldd	r24, Z+2	; 0x02
    3e7c:	93 81       	ldd	r25, Z+3	; 0x03
    3e7e:	20 e0       	ldi	r18, 0x00	; 0
    3e80:	30 e0       	ldi	r19, 0x00	; 0
    3e82:	40 e2       	ldi	r20, 0x20	; 32
    3e84:	51 e4       	ldi	r21, 0x41	; 65
    3e86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e8a:	dc 01       	movw	r26, r24
    3e8c:	cb 01       	movw	r24, r22
    3e8e:	8e 01       	movw	r16, r28
    3e90:	09 59       	subi	r16, 0x99	; 153
    3e92:	1f 4f       	sbci	r17, 0xFF	; 255
    3e94:	bc 01       	movw	r22, r24
    3e96:	cd 01       	movw	r24, r26
    3e98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e9c:	dc 01       	movw	r26, r24
    3e9e:	cb 01       	movw	r24, r22
    3ea0:	f8 01       	movw	r30, r16
    3ea2:	91 83       	std	Z+1, r25	; 0x01
    3ea4:	80 83       	st	Z, r24
    3ea6:	1f c0       	rjmp	.+62     	; 0x3ee6 <MODE_7+0x12a>
    3ea8:	fe 01       	movw	r30, r28
    3eaa:	eb 59       	subi	r30, 0x9B	; 155
    3eac:	ff 4f       	sbci	r31, 0xFF	; 255
    3eae:	88 ec       	ldi	r24, 0xC8	; 200
    3eb0:	90 e0       	ldi	r25, 0x00	; 0
    3eb2:	91 83       	std	Z+1, r25	; 0x01
    3eb4:	80 83       	st	Z, r24
    3eb6:	fe 01       	movw	r30, r28
    3eb8:	eb 59       	subi	r30, 0x9B	; 155
    3eba:	ff 4f       	sbci	r31, 0xFF	; 255
    3ebc:	80 81       	ld	r24, Z
    3ebe:	91 81       	ldd	r25, Z+1	; 0x01
    3ec0:	01 97       	sbiw	r24, 0x01	; 1
    3ec2:	f1 f7       	brne	.-4      	; 0x3ec0 <MODE_7+0x104>
    3ec4:	fe 01       	movw	r30, r28
    3ec6:	eb 59       	subi	r30, 0x9B	; 155
    3ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eca:	91 83       	std	Z+1, r25	; 0x01
    3ecc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ece:	de 01       	movw	r26, r28
    3ed0:	a9 59       	subi	r26, 0x99	; 153
    3ed2:	bf 4f       	sbci	r27, 0xFF	; 255
    3ed4:	fe 01       	movw	r30, r28
    3ed6:	e9 59       	subi	r30, 0x99	; 153
    3ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eda:	80 81       	ld	r24, Z
    3edc:	91 81       	ldd	r25, Z+1	; 0x01
    3ede:	01 97       	sbiw	r24, 0x01	; 1
    3ee0:	11 96       	adiw	r26, 0x01	; 1
    3ee2:	9c 93       	st	X, r25
    3ee4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ee6:	fe 01       	movw	r30, r28
    3ee8:	e9 59       	subi	r30, 0x99	; 153
    3eea:	ff 4f       	sbci	r31, 0xFF	; 255
    3eec:	80 81       	ld	r24, Z
    3eee:	91 81       	ldd	r25, Z+1	; 0x01
    3ef0:	00 97       	sbiw	r24, 0x00	; 0
    3ef2:	d1 f6       	brne	.-76     	; 0x3ea8 <MODE_7+0xec>
    3ef4:	27 c0       	rjmp	.+78     	; 0x3f44 <MODE_7+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ef6:	8e 01       	movw	r16, r28
    3ef8:	09 59       	subi	r16, 0x99	; 153
    3efa:	1f 4f       	sbci	r17, 0xFF	; 255
    3efc:	fe 01       	movw	r30, r28
    3efe:	e7 59       	subi	r30, 0x97	; 151
    3f00:	ff 4f       	sbci	r31, 0xFF	; 255
    3f02:	60 81       	ld	r22, Z
    3f04:	71 81       	ldd	r23, Z+1	; 0x01
    3f06:	82 81       	ldd	r24, Z+2	; 0x02
    3f08:	93 81       	ldd	r25, Z+3	; 0x03
    3f0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f0e:	dc 01       	movw	r26, r24
    3f10:	cb 01       	movw	r24, r22
    3f12:	f8 01       	movw	r30, r16
    3f14:	91 83       	std	Z+1, r25	; 0x01
    3f16:	80 83       	st	Z, r24
    3f18:	de 01       	movw	r26, r28
    3f1a:	ad 59       	subi	r26, 0x9D	; 157
    3f1c:	bf 4f       	sbci	r27, 0xFF	; 255
    3f1e:	fe 01       	movw	r30, r28
    3f20:	e9 59       	subi	r30, 0x99	; 153
    3f22:	ff 4f       	sbci	r31, 0xFF	; 255
    3f24:	80 81       	ld	r24, Z
    3f26:	91 81       	ldd	r25, Z+1	; 0x01
    3f28:	8d 93       	st	X+, r24
    3f2a:	9c 93       	st	X, r25
    3f2c:	fe 01       	movw	r30, r28
    3f2e:	ed 59       	subi	r30, 0x9D	; 157
    3f30:	ff 4f       	sbci	r31, 0xFF	; 255
    3f32:	80 81       	ld	r24, Z
    3f34:	91 81       	ldd	r25, Z+1	; 0x01
    3f36:	01 97       	sbiw	r24, 0x01	; 1
    3f38:	f1 f7       	brne	.-4      	; 0x3f36 <MODE_7+0x17a>
    3f3a:	fe 01       	movw	r30, r28
    3f3c:	ed 59       	subi	r30, 0x9D	; 157
    3f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f40:	91 83       	std	Z+1, r25	; 0x01
    3f42:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED2, ON);
    3f44:	81 e0       	ldi	r24, 0x01	; 1
    3f46:	61 e0       	ldi	r22, 0x01	; 1
    3f48:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    3f4c:	fe 01       	movw	r30, r28
    3f4e:	e1 5a       	subi	r30, 0xA1	; 161
    3f50:	ff 4f       	sbci	r31, 0xFF	; 255
    3f52:	80 e0       	ldi	r24, 0x00	; 0
    3f54:	90 e0       	ldi	r25, 0x00	; 0
    3f56:	a0 e2       	ldi	r26, 0x20	; 32
    3f58:	b1 e4       	ldi	r27, 0x41	; 65
    3f5a:	80 83       	st	Z, r24
    3f5c:	91 83       	std	Z+1, r25	; 0x01
    3f5e:	a2 83       	std	Z+2, r26	; 0x02
    3f60:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f62:	8e 01       	movw	r16, r28
    3f64:	05 5a       	subi	r16, 0xA5	; 165
    3f66:	1f 4f       	sbci	r17, 0xFF	; 255
    3f68:	fe 01       	movw	r30, r28
    3f6a:	e1 5a       	subi	r30, 0xA1	; 161
    3f6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f6e:	60 81       	ld	r22, Z
    3f70:	71 81       	ldd	r23, Z+1	; 0x01
    3f72:	82 81       	ldd	r24, Z+2	; 0x02
    3f74:	93 81       	ldd	r25, Z+3	; 0x03
    3f76:	20 e0       	ldi	r18, 0x00	; 0
    3f78:	30 e0       	ldi	r19, 0x00	; 0
    3f7a:	4a ef       	ldi	r20, 0xFA	; 250
    3f7c:	54 e4       	ldi	r21, 0x44	; 68
    3f7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f82:	dc 01       	movw	r26, r24
    3f84:	cb 01       	movw	r24, r22
    3f86:	f8 01       	movw	r30, r16
    3f88:	80 83       	st	Z, r24
    3f8a:	91 83       	std	Z+1, r25	; 0x01
    3f8c:	a2 83       	std	Z+2, r26	; 0x02
    3f8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f90:	fe 01       	movw	r30, r28
    3f92:	e5 5a       	subi	r30, 0xA5	; 165
    3f94:	ff 4f       	sbci	r31, 0xFF	; 255
    3f96:	60 81       	ld	r22, Z
    3f98:	71 81       	ldd	r23, Z+1	; 0x01
    3f9a:	82 81       	ldd	r24, Z+2	; 0x02
    3f9c:	93 81       	ldd	r25, Z+3	; 0x03
    3f9e:	20 e0       	ldi	r18, 0x00	; 0
    3fa0:	30 e0       	ldi	r19, 0x00	; 0
    3fa2:	40 e8       	ldi	r20, 0x80	; 128
    3fa4:	5f e3       	ldi	r21, 0x3F	; 63
    3fa6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3faa:	88 23       	and	r24, r24
    3fac:	44 f4       	brge	.+16     	; 0x3fbe <MODE_7+0x202>
		__ticks = 1;
    3fae:	fe 01       	movw	r30, r28
    3fb0:	e7 5a       	subi	r30, 0xA7	; 167
    3fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb4:	81 e0       	ldi	r24, 0x01	; 1
    3fb6:	90 e0       	ldi	r25, 0x00	; 0
    3fb8:	91 83       	std	Z+1, r25	; 0x01
    3fba:	80 83       	st	Z, r24
    3fbc:	64 c0       	rjmp	.+200    	; 0x4086 <MODE_7+0x2ca>
	else if (__tmp > 65535)
    3fbe:	fe 01       	movw	r30, r28
    3fc0:	e5 5a       	subi	r30, 0xA5	; 165
    3fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc4:	60 81       	ld	r22, Z
    3fc6:	71 81       	ldd	r23, Z+1	; 0x01
    3fc8:	82 81       	ldd	r24, Z+2	; 0x02
    3fca:	93 81       	ldd	r25, Z+3	; 0x03
    3fcc:	20 e0       	ldi	r18, 0x00	; 0
    3fce:	3f ef       	ldi	r19, 0xFF	; 255
    3fd0:	4f e7       	ldi	r20, 0x7F	; 127
    3fd2:	57 e4       	ldi	r21, 0x47	; 71
    3fd4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3fd8:	18 16       	cp	r1, r24
    3fda:	0c f0       	brlt	.+2      	; 0x3fde <MODE_7+0x222>
    3fdc:	43 c0       	rjmp	.+134    	; 0x4064 <MODE_7+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fde:	fe 01       	movw	r30, r28
    3fe0:	e1 5a       	subi	r30, 0xA1	; 161
    3fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe4:	60 81       	ld	r22, Z
    3fe6:	71 81       	ldd	r23, Z+1	; 0x01
    3fe8:	82 81       	ldd	r24, Z+2	; 0x02
    3fea:	93 81       	ldd	r25, Z+3	; 0x03
    3fec:	20 e0       	ldi	r18, 0x00	; 0
    3fee:	30 e0       	ldi	r19, 0x00	; 0
    3ff0:	40 e2       	ldi	r20, 0x20	; 32
    3ff2:	51 e4       	ldi	r21, 0x41	; 65
    3ff4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ff8:	dc 01       	movw	r26, r24
    3ffa:	cb 01       	movw	r24, r22
    3ffc:	8e 01       	movw	r16, r28
    3ffe:	07 5a       	subi	r16, 0xA7	; 167
    4000:	1f 4f       	sbci	r17, 0xFF	; 255
    4002:	bc 01       	movw	r22, r24
    4004:	cd 01       	movw	r24, r26
    4006:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    400a:	dc 01       	movw	r26, r24
    400c:	cb 01       	movw	r24, r22
    400e:	f8 01       	movw	r30, r16
    4010:	91 83       	std	Z+1, r25	; 0x01
    4012:	80 83       	st	Z, r24
    4014:	1f c0       	rjmp	.+62     	; 0x4054 <MODE_7+0x298>
    4016:	fe 01       	movw	r30, r28
    4018:	e9 5a       	subi	r30, 0xA9	; 169
    401a:	ff 4f       	sbci	r31, 0xFF	; 255
    401c:	88 ec       	ldi	r24, 0xC8	; 200
    401e:	90 e0       	ldi	r25, 0x00	; 0
    4020:	91 83       	std	Z+1, r25	; 0x01
    4022:	80 83       	st	Z, r24
    4024:	fe 01       	movw	r30, r28
    4026:	e9 5a       	subi	r30, 0xA9	; 169
    4028:	ff 4f       	sbci	r31, 0xFF	; 255
    402a:	80 81       	ld	r24, Z
    402c:	91 81       	ldd	r25, Z+1	; 0x01
    402e:	01 97       	sbiw	r24, 0x01	; 1
    4030:	f1 f7       	brne	.-4      	; 0x402e <MODE_7+0x272>
    4032:	fe 01       	movw	r30, r28
    4034:	e9 5a       	subi	r30, 0xA9	; 169
    4036:	ff 4f       	sbci	r31, 0xFF	; 255
    4038:	91 83       	std	Z+1, r25	; 0x01
    403a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    403c:	de 01       	movw	r26, r28
    403e:	a7 5a       	subi	r26, 0xA7	; 167
    4040:	bf 4f       	sbci	r27, 0xFF	; 255
    4042:	fe 01       	movw	r30, r28
    4044:	e7 5a       	subi	r30, 0xA7	; 167
    4046:	ff 4f       	sbci	r31, 0xFF	; 255
    4048:	80 81       	ld	r24, Z
    404a:	91 81       	ldd	r25, Z+1	; 0x01
    404c:	01 97       	sbiw	r24, 0x01	; 1
    404e:	11 96       	adiw	r26, 0x01	; 1
    4050:	9c 93       	st	X, r25
    4052:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4054:	fe 01       	movw	r30, r28
    4056:	e7 5a       	subi	r30, 0xA7	; 167
    4058:	ff 4f       	sbci	r31, 0xFF	; 255
    405a:	80 81       	ld	r24, Z
    405c:	91 81       	ldd	r25, Z+1	; 0x01
    405e:	00 97       	sbiw	r24, 0x00	; 0
    4060:	d1 f6       	brne	.-76     	; 0x4016 <MODE_7+0x25a>
    4062:	27 c0       	rjmp	.+78     	; 0x40b2 <MODE_7+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4064:	8e 01       	movw	r16, r28
    4066:	07 5a       	subi	r16, 0xA7	; 167
    4068:	1f 4f       	sbci	r17, 0xFF	; 255
    406a:	fe 01       	movw	r30, r28
    406c:	e5 5a       	subi	r30, 0xA5	; 165
    406e:	ff 4f       	sbci	r31, 0xFF	; 255
    4070:	60 81       	ld	r22, Z
    4072:	71 81       	ldd	r23, Z+1	; 0x01
    4074:	82 81       	ldd	r24, Z+2	; 0x02
    4076:	93 81       	ldd	r25, Z+3	; 0x03
    4078:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    407c:	dc 01       	movw	r26, r24
    407e:	cb 01       	movw	r24, r22
    4080:	f8 01       	movw	r30, r16
    4082:	91 83       	std	Z+1, r25	; 0x01
    4084:	80 83       	st	Z, r24
    4086:	de 01       	movw	r26, r28
    4088:	ab 5a       	subi	r26, 0xAB	; 171
    408a:	bf 4f       	sbci	r27, 0xFF	; 255
    408c:	fe 01       	movw	r30, r28
    408e:	e7 5a       	subi	r30, 0xA7	; 167
    4090:	ff 4f       	sbci	r31, 0xFF	; 255
    4092:	80 81       	ld	r24, Z
    4094:	91 81       	ldd	r25, Z+1	; 0x01
    4096:	8d 93       	st	X+, r24
    4098:	9c 93       	st	X, r25
    409a:	fe 01       	movw	r30, r28
    409c:	eb 5a       	subi	r30, 0xAB	; 171
    409e:	ff 4f       	sbci	r31, 0xFF	; 255
    40a0:	80 81       	ld	r24, Z
    40a2:	91 81       	ldd	r25, Z+1	; 0x01
    40a4:	01 97       	sbiw	r24, 0x01	; 1
    40a6:	f1 f7       	brne	.-4      	; 0x40a4 <MODE_7+0x2e8>
    40a8:	fe 01       	movw	r30, r28
    40aa:	eb 5a       	subi	r30, 0xAB	; 171
    40ac:	ff 4f       	sbci	r31, 0xFF	; 255
    40ae:	91 83       	std	Z+1, r25	; 0x01
    40b0:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED3, ON);
    40b2:	82 e0       	ldi	r24, 0x02	; 2
    40b4:	61 e0       	ldi	r22, 0x01	; 1
    40b6:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    40ba:	fe 01       	movw	r30, r28
    40bc:	ef 5a       	subi	r30, 0xAF	; 175
    40be:	ff 4f       	sbci	r31, 0xFF	; 255
    40c0:	80 e0       	ldi	r24, 0x00	; 0
    40c2:	90 e0       	ldi	r25, 0x00	; 0
    40c4:	a0 e2       	ldi	r26, 0x20	; 32
    40c6:	b1 e4       	ldi	r27, 0x41	; 65
    40c8:	80 83       	st	Z, r24
    40ca:	91 83       	std	Z+1, r25	; 0x01
    40cc:	a2 83       	std	Z+2, r26	; 0x02
    40ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40d0:	8e 01       	movw	r16, r28
    40d2:	03 5b       	subi	r16, 0xB3	; 179
    40d4:	1f 4f       	sbci	r17, 0xFF	; 255
    40d6:	fe 01       	movw	r30, r28
    40d8:	ef 5a       	subi	r30, 0xAF	; 175
    40da:	ff 4f       	sbci	r31, 0xFF	; 255
    40dc:	60 81       	ld	r22, Z
    40de:	71 81       	ldd	r23, Z+1	; 0x01
    40e0:	82 81       	ldd	r24, Z+2	; 0x02
    40e2:	93 81       	ldd	r25, Z+3	; 0x03
    40e4:	20 e0       	ldi	r18, 0x00	; 0
    40e6:	30 e0       	ldi	r19, 0x00	; 0
    40e8:	4a ef       	ldi	r20, 0xFA	; 250
    40ea:	54 e4       	ldi	r21, 0x44	; 68
    40ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40f0:	dc 01       	movw	r26, r24
    40f2:	cb 01       	movw	r24, r22
    40f4:	f8 01       	movw	r30, r16
    40f6:	80 83       	st	Z, r24
    40f8:	91 83       	std	Z+1, r25	; 0x01
    40fa:	a2 83       	std	Z+2, r26	; 0x02
    40fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40fe:	fe 01       	movw	r30, r28
    4100:	e3 5b       	subi	r30, 0xB3	; 179
    4102:	ff 4f       	sbci	r31, 0xFF	; 255
    4104:	60 81       	ld	r22, Z
    4106:	71 81       	ldd	r23, Z+1	; 0x01
    4108:	82 81       	ldd	r24, Z+2	; 0x02
    410a:	93 81       	ldd	r25, Z+3	; 0x03
    410c:	20 e0       	ldi	r18, 0x00	; 0
    410e:	30 e0       	ldi	r19, 0x00	; 0
    4110:	40 e8       	ldi	r20, 0x80	; 128
    4112:	5f e3       	ldi	r21, 0x3F	; 63
    4114:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4118:	88 23       	and	r24, r24
    411a:	44 f4       	brge	.+16     	; 0x412c <MODE_7+0x370>
		__ticks = 1;
    411c:	fe 01       	movw	r30, r28
    411e:	e5 5b       	subi	r30, 0xB5	; 181
    4120:	ff 4f       	sbci	r31, 0xFF	; 255
    4122:	81 e0       	ldi	r24, 0x01	; 1
    4124:	90 e0       	ldi	r25, 0x00	; 0
    4126:	91 83       	std	Z+1, r25	; 0x01
    4128:	80 83       	st	Z, r24
    412a:	64 c0       	rjmp	.+200    	; 0x41f4 <MODE_7+0x438>
	else if (__tmp > 65535)
    412c:	fe 01       	movw	r30, r28
    412e:	e3 5b       	subi	r30, 0xB3	; 179
    4130:	ff 4f       	sbci	r31, 0xFF	; 255
    4132:	60 81       	ld	r22, Z
    4134:	71 81       	ldd	r23, Z+1	; 0x01
    4136:	82 81       	ldd	r24, Z+2	; 0x02
    4138:	93 81       	ldd	r25, Z+3	; 0x03
    413a:	20 e0       	ldi	r18, 0x00	; 0
    413c:	3f ef       	ldi	r19, 0xFF	; 255
    413e:	4f e7       	ldi	r20, 0x7F	; 127
    4140:	57 e4       	ldi	r21, 0x47	; 71
    4142:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4146:	18 16       	cp	r1, r24
    4148:	0c f0       	brlt	.+2      	; 0x414c <MODE_7+0x390>
    414a:	43 c0       	rjmp	.+134    	; 0x41d2 <MODE_7+0x416>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    414c:	fe 01       	movw	r30, r28
    414e:	ef 5a       	subi	r30, 0xAF	; 175
    4150:	ff 4f       	sbci	r31, 0xFF	; 255
    4152:	60 81       	ld	r22, Z
    4154:	71 81       	ldd	r23, Z+1	; 0x01
    4156:	82 81       	ldd	r24, Z+2	; 0x02
    4158:	93 81       	ldd	r25, Z+3	; 0x03
    415a:	20 e0       	ldi	r18, 0x00	; 0
    415c:	30 e0       	ldi	r19, 0x00	; 0
    415e:	40 e2       	ldi	r20, 0x20	; 32
    4160:	51 e4       	ldi	r21, 0x41	; 65
    4162:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4166:	dc 01       	movw	r26, r24
    4168:	cb 01       	movw	r24, r22
    416a:	8e 01       	movw	r16, r28
    416c:	05 5b       	subi	r16, 0xB5	; 181
    416e:	1f 4f       	sbci	r17, 0xFF	; 255
    4170:	bc 01       	movw	r22, r24
    4172:	cd 01       	movw	r24, r26
    4174:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4178:	dc 01       	movw	r26, r24
    417a:	cb 01       	movw	r24, r22
    417c:	f8 01       	movw	r30, r16
    417e:	91 83       	std	Z+1, r25	; 0x01
    4180:	80 83       	st	Z, r24
    4182:	1f c0       	rjmp	.+62     	; 0x41c2 <MODE_7+0x406>
    4184:	fe 01       	movw	r30, r28
    4186:	e7 5b       	subi	r30, 0xB7	; 183
    4188:	ff 4f       	sbci	r31, 0xFF	; 255
    418a:	88 ec       	ldi	r24, 0xC8	; 200
    418c:	90 e0       	ldi	r25, 0x00	; 0
    418e:	91 83       	std	Z+1, r25	; 0x01
    4190:	80 83       	st	Z, r24
    4192:	fe 01       	movw	r30, r28
    4194:	e7 5b       	subi	r30, 0xB7	; 183
    4196:	ff 4f       	sbci	r31, 0xFF	; 255
    4198:	80 81       	ld	r24, Z
    419a:	91 81       	ldd	r25, Z+1	; 0x01
    419c:	01 97       	sbiw	r24, 0x01	; 1
    419e:	f1 f7       	brne	.-4      	; 0x419c <MODE_7+0x3e0>
    41a0:	fe 01       	movw	r30, r28
    41a2:	e7 5b       	subi	r30, 0xB7	; 183
    41a4:	ff 4f       	sbci	r31, 0xFF	; 255
    41a6:	91 83       	std	Z+1, r25	; 0x01
    41a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41aa:	de 01       	movw	r26, r28
    41ac:	a5 5b       	subi	r26, 0xB5	; 181
    41ae:	bf 4f       	sbci	r27, 0xFF	; 255
    41b0:	fe 01       	movw	r30, r28
    41b2:	e5 5b       	subi	r30, 0xB5	; 181
    41b4:	ff 4f       	sbci	r31, 0xFF	; 255
    41b6:	80 81       	ld	r24, Z
    41b8:	91 81       	ldd	r25, Z+1	; 0x01
    41ba:	01 97       	sbiw	r24, 0x01	; 1
    41bc:	11 96       	adiw	r26, 0x01	; 1
    41be:	9c 93       	st	X, r25
    41c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41c2:	fe 01       	movw	r30, r28
    41c4:	e5 5b       	subi	r30, 0xB5	; 181
    41c6:	ff 4f       	sbci	r31, 0xFF	; 255
    41c8:	80 81       	ld	r24, Z
    41ca:	91 81       	ldd	r25, Z+1	; 0x01
    41cc:	00 97       	sbiw	r24, 0x00	; 0
    41ce:	d1 f6       	brne	.-76     	; 0x4184 <MODE_7+0x3c8>
    41d0:	27 c0       	rjmp	.+78     	; 0x4220 <MODE_7+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41d2:	8e 01       	movw	r16, r28
    41d4:	05 5b       	subi	r16, 0xB5	; 181
    41d6:	1f 4f       	sbci	r17, 0xFF	; 255
    41d8:	fe 01       	movw	r30, r28
    41da:	e3 5b       	subi	r30, 0xB3	; 179
    41dc:	ff 4f       	sbci	r31, 0xFF	; 255
    41de:	60 81       	ld	r22, Z
    41e0:	71 81       	ldd	r23, Z+1	; 0x01
    41e2:	82 81       	ldd	r24, Z+2	; 0x02
    41e4:	93 81       	ldd	r25, Z+3	; 0x03
    41e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41ea:	dc 01       	movw	r26, r24
    41ec:	cb 01       	movw	r24, r22
    41ee:	f8 01       	movw	r30, r16
    41f0:	91 83       	std	Z+1, r25	; 0x01
    41f2:	80 83       	st	Z, r24
    41f4:	de 01       	movw	r26, r28
    41f6:	a9 5b       	subi	r26, 0xB9	; 185
    41f8:	bf 4f       	sbci	r27, 0xFF	; 255
    41fa:	fe 01       	movw	r30, r28
    41fc:	e5 5b       	subi	r30, 0xB5	; 181
    41fe:	ff 4f       	sbci	r31, 0xFF	; 255
    4200:	80 81       	ld	r24, Z
    4202:	91 81       	ldd	r25, Z+1	; 0x01
    4204:	8d 93       	st	X+, r24
    4206:	9c 93       	st	X, r25
    4208:	fe 01       	movw	r30, r28
    420a:	e9 5b       	subi	r30, 0xB9	; 185
    420c:	ff 4f       	sbci	r31, 0xFF	; 255
    420e:	80 81       	ld	r24, Z
    4210:	91 81       	ldd	r25, Z+1	; 0x01
    4212:	01 97       	sbiw	r24, 0x01	; 1
    4214:	f1 f7       	brne	.-4      	; 0x4212 <MODE_7+0x456>
    4216:	fe 01       	movw	r30, r28
    4218:	e9 5b       	subi	r30, 0xB9	; 185
    421a:	ff 4f       	sbci	r31, 0xFF	; 255
    421c:	91 83       	std	Z+1, r25	; 0x01
    421e:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED4, ON);
    4220:	83 e0       	ldi	r24, 0x03	; 3
    4222:	61 e0       	ldi	r22, 0x01	; 1
    4224:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    4228:	fe 01       	movw	r30, r28
    422a:	ed 5b       	subi	r30, 0xBD	; 189
    422c:	ff 4f       	sbci	r31, 0xFF	; 255
    422e:	80 e0       	ldi	r24, 0x00	; 0
    4230:	90 e0       	ldi	r25, 0x00	; 0
    4232:	a0 e2       	ldi	r26, 0x20	; 32
    4234:	b1 e4       	ldi	r27, 0x41	; 65
    4236:	80 83       	st	Z, r24
    4238:	91 83       	std	Z+1, r25	; 0x01
    423a:	a2 83       	std	Z+2, r26	; 0x02
    423c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    423e:	8e 01       	movw	r16, r28
    4240:	01 5c       	subi	r16, 0xC1	; 193
    4242:	1f 4f       	sbci	r17, 0xFF	; 255
    4244:	fe 01       	movw	r30, r28
    4246:	ed 5b       	subi	r30, 0xBD	; 189
    4248:	ff 4f       	sbci	r31, 0xFF	; 255
    424a:	60 81       	ld	r22, Z
    424c:	71 81       	ldd	r23, Z+1	; 0x01
    424e:	82 81       	ldd	r24, Z+2	; 0x02
    4250:	93 81       	ldd	r25, Z+3	; 0x03
    4252:	20 e0       	ldi	r18, 0x00	; 0
    4254:	30 e0       	ldi	r19, 0x00	; 0
    4256:	4a ef       	ldi	r20, 0xFA	; 250
    4258:	54 e4       	ldi	r21, 0x44	; 68
    425a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    425e:	dc 01       	movw	r26, r24
    4260:	cb 01       	movw	r24, r22
    4262:	f8 01       	movw	r30, r16
    4264:	80 83       	st	Z, r24
    4266:	91 83       	std	Z+1, r25	; 0x01
    4268:	a2 83       	std	Z+2, r26	; 0x02
    426a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    426c:	fe 01       	movw	r30, r28
    426e:	ff 96       	adiw	r30, 0x3f	; 63
    4270:	60 81       	ld	r22, Z
    4272:	71 81       	ldd	r23, Z+1	; 0x01
    4274:	82 81       	ldd	r24, Z+2	; 0x02
    4276:	93 81       	ldd	r25, Z+3	; 0x03
    4278:	20 e0       	ldi	r18, 0x00	; 0
    427a:	30 e0       	ldi	r19, 0x00	; 0
    427c:	40 e8       	ldi	r20, 0x80	; 128
    427e:	5f e3       	ldi	r21, 0x3F	; 63
    4280:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4284:	88 23       	and	r24, r24
    4286:	2c f4       	brge	.+10     	; 0x4292 <MODE_7+0x4d6>
		__ticks = 1;
    4288:	81 e0       	ldi	r24, 0x01	; 1
    428a:	90 e0       	ldi	r25, 0x00	; 0
    428c:	9e af       	std	Y+62, r25	; 0x3e
    428e:	8d af       	std	Y+61, r24	; 0x3d
    4290:	46 c0       	rjmp	.+140    	; 0x431e <MODE_7+0x562>
	else if (__tmp > 65535)
    4292:	fe 01       	movw	r30, r28
    4294:	ff 96       	adiw	r30, 0x3f	; 63
    4296:	60 81       	ld	r22, Z
    4298:	71 81       	ldd	r23, Z+1	; 0x01
    429a:	82 81       	ldd	r24, Z+2	; 0x02
    429c:	93 81       	ldd	r25, Z+3	; 0x03
    429e:	20 e0       	ldi	r18, 0x00	; 0
    42a0:	3f ef       	ldi	r19, 0xFF	; 255
    42a2:	4f e7       	ldi	r20, 0x7F	; 127
    42a4:	57 e4       	ldi	r21, 0x47	; 71
    42a6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    42aa:	18 16       	cp	r1, r24
    42ac:	64 f5       	brge	.+88     	; 0x4306 <MODE_7+0x54a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42ae:	fe 01       	movw	r30, r28
    42b0:	ed 5b       	subi	r30, 0xBD	; 189
    42b2:	ff 4f       	sbci	r31, 0xFF	; 255
    42b4:	60 81       	ld	r22, Z
    42b6:	71 81       	ldd	r23, Z+1	; 0x01
    42b8:	82 81       	ldd	r24, Z+2	; 0x02
    42ba:	93 81       	ldd	r25, Z+3	; 0x03
    42bc:	20 e0       	ldi	r18, 0x00	; 0
    42be:	30 e0       	ldi	r19, 0x00	; 0
    42c0:	40 e2       	ldi	r20, 0x20	; 32
    42c2:	51 e4       	ldi	r21, 0x41	; 65
    42c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42c8:	dc 01       	movw	r26, r24
    42ca:	cb 01       	movw	r24, r22
    42cc:	bc 01       	movw	r22, r24
    42ce:	cd 01       	movw	r24, r26
    42d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42d4:	dc 01       	movw	r26, r24
    42d6:	cb 01       	movw	r24, r22
    42d8:	9e af       	std	Y+62, r25	; 0x3e
    42da:	8d af       	std	Y+61, r24	; 0x3d
    42dc:	0f c0       	rjmp	.+30     	; 0x42fc <MODE_7+0x540>
    42de:	88 ec       	ldi	r24, 0xC8	; 200
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	9c af       	std	Y+60, r25	; 0x3c
    42e4:	8b af       	std	Y+59, r24	; 0x3b
    42e6:	8b ad       	ldd	r24, Y+59	; 0x3b
    42e8:	9c ad       	ldd	r25, Y+60	; 0x3c
    42ea:	01 97       	sbiw	r24, 0x01	; 1
    42ec:	f1 f7       	brne	.-4      	; 0x42ea <MODE_7+0x52e>
    42ee:	9c af       	std	Y+60, r25	; 0x3c
    42f0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42f2:	8d ad       	ldd	r24, Y+61	; 0x3d
    42f4:	9e ad       	ldd	r25, Y+62	; 0x3e
    42f6:	01 97       	sbiw	r24, 0x01	; 1
    42f8:	9e af       	std	Y+62, r25	; 0x3e
    42fa:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42fc:	8d ad       	ldd	r24, Y+61	; 0x3d
    42fe:	9e ad       	ldd	r25, Y+62	; 0x3e
    4300:	00 97       	sbiw	r24, 0x00	; 0
    4302:	69 f7       	brne	.-38     	; 0x42de <MODE_7+0x522>
    4304:	16 c0       	rjmp	.+44     	; 0x4332 <MODE_7+0x576>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4306:	fe 01       	movw	r30, r28
    4308:	ff 96       	adiw	r30, 0x3f	; 63
    430a:	60 81       	ld	r22, Z
    430c:	71 81       	ldd	r23, Z+1	; 0x01
    430e:	82 81       	ldd	r24, Z+2	; 0x02
    4310:	93 81       	ldd	r25, Z+3	; 0x03
    4312:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4316:	dc 01       	movw	r26, r24
    4318:	cb 01       	movw	r24, r22
    431a:	9e af       	std	Y+62, r25	; 0x3e
    431c:	8d af       	std	Y+61, r24	; 0x3d
    431e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4320:	9e ad       	ldd	r25, Y+62	; 0x3e
    4322:	9a af       	std	Y+58, r25	; 0x3a
    4324:	89 af       	std	Y+57, r24	; 0x39
    4326:	89 ad       	ldd	r24, Y+57	; 0x39
    4328:	9a ad       	ldd	r25, Y+58	; 0x3a
    432a:	01 97       	sbiw	r24, 0x01	; 1
    432c:	f1 f7       	brne	.-4      	; 0x432a <MODE_7+0x56e>
    432e:	9a af       	std	Y+58, r25	; 0x3a
    4330:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED5, ON);
    4332:	84 e0       	ldi	r24, 0x04	; 4
    4334:	61 e0       	ldi	r22, 0x01	; 1
    4336:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    433a:	80 e0       	ldi	r24, 0x00	; 0
    433c:	90 e0       	ldi	r25, 0x00	; 0
    433e:	a0 e2       	ldi	r26, 0x20	; 32
    4340:	b1 e4       	ldi	r27, 0x41	; 65
    4342:	8d ab       	std	Y+53, r24	; 0x35
    4344:	9e ab       	std	Y+54, r25	; 0x36
    4346:	af ab       	std	Y+55, r26	; 0x37
    4348:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    434a:	6d a9       	ldd	r22, Y+53	; 0x35
    434c:	7e a9       	ldd	r23, Y+54	; 0x36
    434e:	8f a9       	ldd	r24, Y+55	; 0x37
    4350:	98 ad       	ldd	r25, Y+56	; 0x38
    4352:	20 e0       	ldi	r18, 0x00	; 0
    4354:	30 e0       	ldi	r19, 0x00	; 0
    4356:	4a ef       	ldi	r20, 0xFA	; 250
    4358:	54 e4       	ldi	r21, 0x44	; 68
    435a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    435e:	dc 01       	movw	r26, r24
    4360:	cb 01       	movw	r24, r22
    4362:	89 ab       	std	Y+49, r24	; 0x31
    4364:	9a ab       	std	Y+50, r25	; 0x32
    4366:	ab ab       	std	Y+51, r26	; 0x33
    4368:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    436a:	69 a9       	ldd	r22, Y+49	; 0x31
    436c:	7a a9       	ldd	r23, Y+50	; 0x32
    436e:	8b a9       	ldd	r24, Y+51	; 0x33
    4370:	9c a9       	ldd	r25, Y+52	; 0x34
    4372:	20 e0       	ldi	r18, 0x00	; 0
    4374:	30 e0       	ldi	r19, 0x00	; 0
    4376:	40 e8       	ldi	r20, 0x80	; 128
    4378:	5f e3       	ldi	r21, 0x3F	; 63
    437a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    437e:	88 23       	and	r24, r24
    4380:	2c f4       	brge	.+10     	; 0x438c <MODE_7+0x5d0>
		__ticks = 1;
    4382:	81 e0       	ldi	r24, 0x01	; 1
    4384:	90 e0       	ldi	r25, 0x00	; 0
    4386:	98 ab       	std	Y+48, r25	; 0x30
    4388:	8f a7       	std	Y+47, r24	; 0x2f
    438a:	3f c0       	rjmp	.+126    	; 0x440a <MODE_7+0x64e>
	else if (__tmp > 65535)
    438c:	69 a9       	ldd	r22, Y+49	; 0x31
    438e:	7a a9       	ldd	r23, Y+50	; 0x32
    4390:	8b a9       	ldd	r24, Y+51	; 0x33
    4392:	9c a9       	ldd	r25, Y+52	; 0x34
    4394:	20 e0       	ldi	r18, 0x00	; 0
    4396:	3f ef       	ldi	r19, 0xFF	; 255
    4398:	4f e7       	ldi	r20, 0x7F	; 127
    439a:	57 e4       	ldi	r21, 0x47	; 71
    439c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    43a0:	18 16       	cp	r1, r24
    43a2:	4c f5       	brge	.+82     	; 0x43f6 <MODE_7+0x63a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43a4:	6d a9       	ldd	r22, Y+53	; 0x35
    43a6:	7e a9       	ldd	r23, Y+54	; 0x36
    43a8:	8f a9       	ldd	r24, Y+55	; 0x37
    43aa:	98 ad       	ldd	r25, Y+56	; 0x38
    43ac:	20 e0       	ldi	r18, 0x00	; 0
    43ae:	30 e0       	ldi	r19, 0x00	; 0
    43b0:	40 e2       	ldi	r20, 0x20	; 32
    43b2:	51 e4       	ldi	r21, 0x41	; 65
    43b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43b8:	dc 01       	movw	r26, r24
    43ba:	cb 01       	movw	r24, r22
    43bc:	bc 01       	movw	r22, r24
    43be:	cd 01       	movw	r24, r26
    43c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43c4:	dc 01       	movw	r26, r24
    43c6:	cb 01       	movw	r24, r22
    43c8:	98 ab       	std	Y+48, r25	; 0x30
    43ca:	8f a7       	std	Y+47, r24	; 0x2f
    43cc:	0f c0       	rjmp	.+30     	; 0x43ec <MODE_7+0x630>
    43ce:	88 ec       	ldi	r24, 0xC8	; 200
    43d0:	90 e0       	ldi	r25, 0x00	; 0
    43d2:	9e a7       	std	Y+46, r25	; 0x2e
    43d4:	8d a7       	std	Y+45, r24	; 0x2d
    43d6:	8d a5       	ldd	r24, Y+45	; 0x2d
    43d8:	9e a5       	ldd	r25, Y+46	; 0x2e
    43da:	01 97       	sbiw	r24, 0x01	; 1
    43dc:	f1 f7       	brne	.-4      	; 0x43da <MODE_7+0x61e>
    43de:	9e a7       	std	Y+46, r25	; 0x2e
    43e0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43e2:	8f a5       	ldd	r24, Y+47	; 0x2f
    43e4:	98 a9       	ldd	r25, Y+48	; 0x30
    43e6:	01 97       	sbiw	r24, 0x01	; 1
    43e8:	98 ab       	std	Y+48, r25	; 0x30
    43ea:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43ec:	8f a5       	ldd	r24, Y+47	; 0x2f
    43ee:	98 a9       	ldd	r25, Y+48	; 0x30
    43f0:	00 97       	sbiw	r24, 0x00	; 0
    43f2:	69 f7       	brne	.-38     	; 0x43ce <MODE_7+0x612>
    43f4:	14 c0       	rjmp	.+40     	; 0x441e <MODE_7+0x662>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43f6:	69 a9       	ldd	r22, Y+49	; 0x31
    43f8:	7a a9       	ldd	r23, Y+50	; 0x32
    43fa:	8b a9       	ldd	r24, Y+51	; 0x33
    43fc:	9c a9       	ldd	r25, Y+52	; 0x34
    43fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4402:	dc 01       	movw	r26, r24
    4404:	cb 01       	movw	r24, r22
    4406:	98 ab       	std	Y+48, r25	; 0x30
    4408:	8f a7       	std	Y+47, r24	; 0x2f
    440a:	8f a5       	ldd	r24, Y+47	; 0x2f
    440c:	98 a9       	ldd	r25, Y+48	; 0x30
    440e:	9c a7       	std	Y+44, r25	; 0x2c
    4410:	8b a7       	std	Y+43, r24	; 0x2b
    4412:	8b a5       	ldd	r24, Y+43	; 0x2b
    4414:	9c a5       	ldd	r25, Y+44	; 0x2c
    4416:	01 97       	sbiw	r24, 0x01	; 1
    4418:	f1 f7       	brne	.-4      	; 0x4416 <MODE_7+0x65a>
    441a:	9c a7       	std	Y+44, r25	; 0x2c
    441c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED6, ON);
    441e:	85 e0       	ldi	r24, 0x05	; 5
    4420:	61 e0       	ldi	r22, 0x01	; 1
    4422:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    4426:	80 e0       	ldi	r24, 0x00	; 0
    4428:	90 e0       	ldi	r25, 0x00	; 0
    442a:	a0 e2       	ldi	r26, 0x20	; 32
    442c:	b1 e4       	ldi	r27, 0x41	; 65
    442e:	8f a3       	std	Y+39, r24	; 0x27
    4430:	98 a7       	std	Y+40, r25	; 0x28
    4432:	a9 a7       	std	Y+41, r26	; 0x29
    4434:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4436:	6f a1       	ldd	r22, Y+39	; 0x27
    4438:	78 a5       	ldd	r23, Y+40	; 0x28
    443a:	89 a5       	ldd	r24, Y+41	; 0x29
    443c:	9a a5       	ldd	r25, Y+42	; 0x2a
    443e:	20 e0       	ldi	r18, 0x00	; 0
    4440:	30 e0       	ldi	r19, 0x00	; 0
    4442:	4a ef       	ldi	r20, 0xFA	; 250
    4444:	54 e4       	ldi	r21, 0x44	; 68
    4446:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    444a:	dc 01       	movw	r26, r24
    444c:	cb 01       	movw	r24, r22
    444e:	8b a3       	std	Y+35, r24	; 0x23
    4450:	9c a3       	std	Y+36, r25	; 0x24
    4452:	ad a3       	std	Y+37, r26	; 0x25
    4454:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4456:	6b a1       	ldd	r22, Y+35	; 0x23
    4458:	7c a1       	ldd	r23, Y+36	; 0x24
    445a:	8d a1       	ldd	r24, Y+37	; 0x25
    445c:	9e a1       	ldd	r25, Y+38	; 0x26
    445e:	20 e0       	ldi	r18, 0x00	; 0
    4460:	30 e0       	ldi	r19, 0x00	; 0
    4462:	40 e8       	ldi	r20, 0x80	; 128
    4464:	5f e3       	ldi	r21, 0x3F	; 63
    4466:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    446a:	88 23       	and	r24, r24
    446c:	2c f4       	brge	.+10     	; 0x4478 <MODE_7+0x6bc>
		__ticks = 1;
    446e:	81 e0       	ldi	r24, 0x01	; 1
    4470:	90 e0       	ldi	r25, 0x00	; 0
    4472:	9a a3       	std	Y+34, r25	; 0x22
    4474:	89 a3       	std	Y+33, r24	; 0x21
    4476:	3f c0       	rjmp	.+126    	; 0x44f6 <MODE_7+0x73a>
	else if (__tmp > 65535)
    4478:	6b a1       	ldd	r22, Y+35	; 0x23
    447a:	7c a1       	ldd	r23, Y+36	; 0x24
    447c:	8d a1       	ldd	r24, Y+37	; 0x25
    447e:	9e a1       	ldd	r25, Y+38	; 0x26
    4480:	20 e0       	ldi	r18, 0x00	; 0
    4482:	3f ef       	ldi	r19, 0xFF	; 255
    4484:	4f e7       	ldi	r20, 0x7F	; 127
    4486:	57 e4       	ldi	r21, 0x47	; 71
    4488:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    448c:	18 16       	cp	r1, r24
    448e:	4c f5       	brge	.+82     	; 0x44e2 <MODE_7+0x726>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4490:	6f a1       	ldd	r22, Y+39	; 0x27
    4492:	78 a5       	ldd	r23, Y+40	; 0x28
    4494:	89 a5       	ldd	r24, Y+41	; 0x29
    4496:	9a a5       	ldd	r25, Y+42	; 0x2a
    4498:	20 e0       	ldi	r18, 0x00	; 0
    449a:	30 e0       	ldi	r19, 0x00	; 0
    449c:	40 e2       	ldi	r20, 0x20	; 32
    449e:	51 e4       	ldi	r21, 0x41	; 65
    44a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44a4:	dc 01       	movw	r26, r24
    44a6:	cb 01       	movw	r24, r22
    44a8:	bc 01       	movw	r22, r24
    44aa:	cd 01       	movw	r24, r26
    44ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44b0:	dc 01       	movw	r26, r24
    44b2:	cb 01       	movw	r24, r22
    44b4:	9a a3       	std	Y+34, r25	; 0x22
    44b6:	89 a3       	std	Y+33, r24	; 0x21
    44b8:	0f c0       	rjmp	.+30     	; 0x44d8 <MODE_7+0x71c>
    44ba:	88 ec       	ldi	r24, 0xC8	; 200
    44bc:	90 e0       	ldi	r25, 0x00	; 0
    44be:	98 a3       	std	Y+32, r25	; 0x20
    44c0:	8f 8f       	std	Y+31, r24	; 0x1f
    44c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    44c4:	98 a1       	ldd	r25, Y+32	; 0x20
    44c6:	01 97       	sbiw	r24, 0x01	; 1
    44c8:	f1 f7       	brne	.-4      	; 0x44c6 <MODE_7+0x70a>
    44ca:	98 a3       	std	Y+32, r25	; 0x20
    44cc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44ce:	89 a1       	ldd	r24, Y+33	; 0x21
    44d0:	9a a1       	ldd	r25, Y+34	; 0x22
    44d2:	01 97       	sbiw	r24, 0x01	; 1
    44d4:	9a a3       	std	Y+34, r25	; 0x22
    44d6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44d8:	89 a1       	ldd	r24, Y+33	; 0x21
    44da:	9a a1       	ldd	r25, Y+34	; 0x22
    44dc:	00 97       	sbiw	r24, 0x00	; 0
    44de:	69 f7       	brne	.-38     	; 0x44ba <MODE_7+0x6fe>
    44e0:	14 c0       	rjmp	.+40     	; 0x450a <MODE_7+0x74e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44e2:	6b a1       	ldd	r22, Y+35	; 0x23
    44e4:	7c a1       	ldd	r23, Y+36	; 0x24
    44e6:	8d a1       	ldd	r24, Y+37	; 0x25
    44e8:	9e a1       	ldd	r25, Y+38	; 0x26
    44ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44ee:	dc 01       	movw	r26, r24
    44f0:	cb 01       	movw	r24, r22
    44f2:	9a a3       	std	Y+34, r25	; 0x22
    44f4:	89 a3       	std	Y+33, r24	; 0x21
    44f6:	89 a1       	ldd	r24, Y+33	; 0x21
    44f8:	9a a1       	ldd	r25, Y+34	; 0x22
    44fa:	9e 8f       	std	Y+30, r25	; 0x1e
    44fc:	8d 8f       	std	Y+29, r24	; 0x1d
    44fe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4500:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4502:	01 97       	sbiw	r24, 0x01	; 1
    4504:	f1 f7       	brne	.-4      	; 0x4502 <MODE_7+0x746>
    4506:	9e 8f       	std	Y+30, r25	; 0x1e
    4508:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED7, ON);
    450a:	86 e0       	ldi	r24, 0x06	; 6
    450c:	61 e0       	ldi	r22, 0x01	; 1
    450e:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>
    4512:	80 e0       	ldi	r24, 0x00	; 0
    4514:	90 e0       	ldi	r25, 0x00	; 0
    4516:	a0 e2       	ldi	r26, 0x20	; 32
    4518:	b1 e4       	ldi	r27, 0x41	; 65
    451a:	89 8f       	std	Y+25, r24	; 0x19
    451c:	9a 8f       	std	Y+26, r25	; 0x1a
    451e:	ab 8f       	std	Y+27, r26	; 0x1b
    4520:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4522:	69 8d       	ldd	r22, Y+25	; 0x19
    4524:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4526:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4528:	9c 8d       	ldd	r25, Y+28	; 0x1c
    452a:	20 e0       	ldi	r18, 0x00	; 0
    452c:	30 e0       	ldi	r19, 0x00	; 0
    452e:	4a ef       	ldi	r20, 0xFA	; 250
    4530:	54 e4       	ldi	r21, 0x44	; 68
    4532:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4536:	dc 01       	movw	r26, r24
    4538:	cb 01       	movw	r24, r22
    453a:	8d 8b       	std	Y+21, r24	; 0x15
    453c:	9e 8b       	std	Y+22, r25	; 0x16
    453e:	af 8b       	std	Y+23, r26	; 0x17
    4540:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4542:	6d 89       	ldd	r22, Y+21	; 0x15
    4544:	7e 89       	ldd	r23, Y+22	; 0x16
    4546:	8f 89       	ldd	r24, Y+23	; 0x17
    4548:	98 8d       	ldd	r25, Y+24	; 0x18
    454a:	20 e0       	ldi	r18, 0x00	; 0
    454c:	30 e0       	ldi	r19, 0x00	; 0
    454e:	40 e8       	ldi	r20, 0x80	; 128
    4550:	5f e3       	ldi	r21, 0x3F	; 63
    4552:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4556:	88 23       	and	r24, r24
    4558:	2c f4       	brge	.+10     	; 0x4564 <MODE_7+0x7a8>
		__ticks = 1;
    455a:	81 e0       	ldi	r24, 0x01	; 1
    455c:	90 e0       	ldi	r25, 0x00	; 0
    455e:	9c 8b       	std	Y+20, r25	; 0x14
    4560:	8b 8b       	std	Y+19, r24	; 0x13
    4562:	3f c0       	rjmp	.+126    	; 0x45e2 <MODE_7+0x826>
	else if (__tmp > 65535)
    4564:	6d 89       	ldd	r22, Y+21	; 0x15
    4566:	7e 89       	ldd	r23, Y+22	; 0x16
    4568:	8f 89       	ldd	r24, Y+23	; 0x17
    456a:	98 8d       	ldd	r25, Y+24	; 0x18
    456c:	20 e0       	ldi	r18, 0x00	; 0
    456e:	3f ef       	ldi	r19, 0xFF	; 255
    4570:	4f e7       	ldi	r20, 0x7F	; 127
    4572:	57 e4       	ldi	r21, 0x47	; 71
    4574:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4578:	18 16       	cp	r1, r24
    457a:	4c f5       	brge	.+82     	; 0x45ce <MODE_7+0x812>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    457c:	69 8d       	ldd	r22, Y+25	; 0x19
    457e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4580:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4582:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4584:	20 e0       	ldi	r18, 0x00	; 0
    4586:	30 e0       	ldi	r19, 0x00	; 0
    4588:	40 e2       	ldi	r20, 0x20	; 32
    458a:	51 e4       	ldi	r21, 0x41	; 65
    458c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4590:	dc 01       	movw	r26, r24
    4592:	cb 01       	movw	r24, r22
    4594:	bc 01       	movw	r22, r24
    4596:	cd 01       	movw	r24, r26
    4598:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    459c:	dc 01       	movw	r26, r24
    459e:	cb 01       	movw	r24, r22
    45a0:	9c 8b       	std	Y+20, r25	; 0x14
    45a2:	8b 8b       	std	Y+19, r24	; 0x13
    45a4:	0f c0       	rjmp	.+30     	; 0x45c4 <MODE_7+0x808>
    45a6:	88 ec       	ldi	r24, 0xC8	; 200
    45a8:	90 e0       	ldi	r25, 0x00	; 0
    45aa:	9a 8b       	std	Y+18, r25	; 0x12
    45ac:	89 8b       	std	Y+17, r24	; 0x11
    45ae:	89 89       	ldd	r24, Y+17	; 0x11
    45b0:	9a 89       	ldd	r25, Y+18	; 0x12
    45b2:	01 97       	sbiw	r24, 0x01	; 1
    45b4:	f1 f7       	brne	.-4      	; 0x45b2 <MODE_7+0x7f6>
    45b6:	9a 8b       	std	Y+18, r25	; 0x12
    45b8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45ba:	8b 89       	ldd	r24, Y+19	; 0x13
    45bc:	9c 89       	ldd	r25, Y+20	; 0x14
    45be:	01 97       	sbiw	r24, 0x01	; 1
    45c0:	9c 8b       	std	Y+20, r25	; 0x14
    45c2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45c4:	8b 89       	ldd	r24, Y+19	; 0x13
    45c6:	9c 89       	ldd	r25, Y+20	; 0x14
    45c8:	00 97       	sbiw	r24, 0x00	; 0
    45ca:	69 f7       	brne	.-38     	; 0x45a6 <MODE_7+0x7ea>
    45cc:	14 c0       	rjmp	.+40     	; 0x45f6 <MODE_7+0x83a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45ce:	6d 89       	ldd	r22, Y+21	; 0x15
    45d0:	7e 89       	ldd	r23, Y+22	; 0x16
    45d2:	8f 89       	ldd	r24, Y+23	; 0x17
    45d4:	98 8d       	ldd	r25, Y+24	; 0x18
    45d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45da:	dc 01       	movw	r26, r24
    45dc:	cb 01       	movw	r24, r22
    45de:	9c 8b       	std	Y+20, r25	; 0x14
    45e0:	8b 8b       	std	Y+19, r24	; 0x13
    45e2:	8b 89       	ldd	r24, Y+19	; 0x13
    45e4:	9c 89       	ldd	r25, Y+20	; 0x14
    45e6:	98 8b       	std	Y+16, r25	; 0x10
    45e8:	8f 87       	std	Y+15, r24	; 0x0f
    45ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    45ec:	98 89       	ldd	r25, Y+16	; 0x10
    45ee:	01 97       	sbiw	r24, 0x01	; 1
    45f0:	f1 f7       	brne	.-4      	; 0x45ee <MODE_7+0x832>
    45f2:	98 8b       	std	Y+16, r25	; 0x10
    45f4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED8, ON);
    45f6:	87 e0       	ldi	r24, 0x07	; 7
    45f8:	61 e0       	ldi	r22, 0x01	; 1
    45fa:	0e 94 c2 05 	call	0xb84	; 0xb84 <LED_CTRL>

	REG_CLR(PORTA);
    45fe:	eb e3       	ldi	r30, 0x3B	; 59
    4600:	f0 e0       	ldi	r31, 0x00	; 0
    4602:	80 81       	ld	r24, Z
    4604:	eb e3       	ldi	r30, 0x3B	; 59
    4606:	f0 e0       	ldi	r31, 0x00	; 0
    4608:	10 82       	st	Z, r1
    460a:	80 e0       	ldi	r24, 0x00	; 0
    460c:	90 e0       	ldi	r25, 0x00	; 0
    460e:	a6 e9       	ldi	r26, 0x96	; 150
    4610:	b3 e4       	ldi	r27, 0x43	; 67
    4612:	8b 87       	std	Y+11, r24	; 0x0b
    4614:	9c 87       	std	Y+12, r25	; 0x0c
    4616:	ad 87       	std	Y+13, r26	; 0x0d
    4618:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    461a:	6b 85       	ldd	r22, Y+11	; 0x0b
    461c:	7c 85       	ldd	r23, Y+12	; 0x0c
    461e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4620:	9e 85       	ldd	r25, Y+14	; 0x0e
    4622:	20 e0       	ldi	r18, 0x00	; 0
    4624:	30 e0       	ldi	r19, 0x00	; 0
    4626:	4a ef       	ldi	r20, 0xFA	; 250
    4628:	54 e4       	ldi	r21, 0x44	; 68
    462a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    462e:	dc 01       	movw	r26, r24
    4630:	cb 01       	movw	r24, r22
    4632:	8f 83       	std	Y+7, r24	; 0x07
    4634:	98 87       	std	Y+8, r25	; 0x08
    4636:	a9 87       	std	Y+9, r26	; 0x09
    4638:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    463a:	6f 81       	ldd	r22, Y+7	; 0x07
    463c:	78 85       	ldd	r23, Y+8	; 0x08
    463e:	89 85       	ldd	r24, Y+9	; 0x09
    4640:	9a 85       	ldd	r25, Y+10	; 0x0a
    4642:	20 e0       	ldi	r18, 0x00	; 0
    4644:	30 e0       	ldi	r19, 0x00	; 0
    4646:	40 e8       	ldi	r20, 0x80	; 128
    4648:	5f e3       	ldi	r21, 0x3F	; 63
    464a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    464e:	88 23       	and	r24, r24
    4650:	2c f4       	brge	.+10     	; 0x465c <MODE_7+0x8a0>
		__ticks = 1;
    4652:	81 e0       	ldi	r24, 0x01	; 1
    4654:	90 e0       	ldi	r25, 0x00	; 0
    4656:	9e 83       	std	Y+6, r25	; 0x06
    4658:	8d 83       	std	Y+5, r24	; 0x05
    465a:	3f c0       	rjmp	.+126    	; 0x46da <MODE_7+0x91e>
	else if (__tmp > 65535)
    465c:	6f 81       	ldd	r22, Y+7	; 0x07
    465e:	78 85       	ldd	r23, Y+8	; 0x08
    4660:	89 85       	ldd	r24, Y+9	; 0x09
    4662:	9a 85       	ldd	r25, Y+10	; 0x0a
    4664:	20 e0       	ldi	r18, 0x00	; 0
    4666:	3f ef       	ldi	r19, 0xFF	; 255
    4668:	4f e7       	ldi	r20, 0x7F	; 127
    466a:	57 e4       	ldi	r21, 0x47	; 71
    466c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4670:	18 16       	cp	r1, r24
    4672:	4c f5       	brge	.+82     	; 0x46c6 <MODE_7+0x90a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4674:	6b 85       	ldd	r22, Y+11	; 0x0b
    4676:	7c 85       	ldd	r23, Y+12	; 0x0c
    4678:	8d 85       	ldd	r24, Y+13	; 0x0d
    467a:	9e 85       	ldd	r25, Y+14	; 0x0e
    467c:	20 e0       	ldi	r18, 0x00	; 0
    467e:	30 e0       	ldi	r19, 0x00	; 0
    4680:	40 e2       	ldi	r20, 0x20	; 32
    4682:	51 e4       	ldi	r21, 0x41	; 65
    4684:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4688:	dc 01       	movw	r26, r24
    468a:	cb 01       	movw	r24, r22
    468c:	bc 01       	movw	r22, r24
    468e:	cd 01       	movw	r24, r26
    4690:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4694:	dc 01       	movw	r26, r24
    4696:	cb 01       	movw	r24, r22
    4698:	9e 83       	std	Y+6, r25	; 0x06
    469a:	8d 83       	std	Y+5, r24	; 0x05
    469c:	0f c0       	rjmp	.+30     	; 0x46bc <MODE_7+0x900>
    469e:	88 ec       	ldi	r24, 0xC8	; 200
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	9c 83       	std	Y+4, r25	; 0x04
    46a4:	8b 83       	std	Y+3, r24	; 0x03
    46a6:	8b 81       	ldd	r24, Y+3	; 0x03
    46a8:	9c 81       	ldd	r25, Y+4	; 0x04
    46aa:	01 97       	sbiw	r24, 0x01	; 1
    46ac:	f1 f7       	brne	.-4      	; 0x46aa <MODE_7+0x8ee>
    46ae:	9c 83       	std	Y+4, r25	; 0x04
    46b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46b2:	8d 81       	ldd	r24, Y+5	; 0x05
    46b4:	9e 81       	ldd	r25, Y+6	; 0x06
    46b6:	01 97       	sbiw	r24, 0x01	; 1
    46b8:	9e 83       	std	Y+6, r25	; 0x06
    46ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46bc:	8d 81       	ldd	r24, Y+5	; 0x05
    46be:	9e 81       	ldd	r25, Y+6	; 0x06
    46c0:	00 97       	sbiw	r24, 0x00	; 0
    46c2:	69 f7       	brne	.-38     	; 0x469e <MODE_7+0x8e2>
    46c4:	14 c0       	rjmp	.+40     	; 0x46ee <MODE_7+0x932>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46c6:	6f 81       	ldd	r22, Y+7	; 0x07
    46c8:	78 85       	ldd	r23, Y+8	; 0x08
    46ca:	89 85       	ldd	r24, Y+9	; 0x09
    46cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    46ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    46d2:	dc 01       	movw	r26, r24
    46d4:	cb 01       	movw	r24, r22
    46d6:	9e 83       	std	Y+6, r25	; 0x06
    46d8:	8d 83       	std	Y+5, r24	; 0x05
    46da:	8d 81       	ldd	r24, Y+5	; 0x05
    46dc:	9e 81       	ldd	r25, Y+6	; 0x06
    46de:	9a 83       	std	Y+2, r25	; 0x02
    46e0:	89 83       	std	Y+1, r24	; 0x01
    46e2:	89 81       	ldd	r24, Y+1	; 0x01
    46e4:	9a 81       	ldd	r25, Y+2	; 0x02
    46e6:	01 97       	sbiw	r24, 0x01	; 1
    46e8:	f1 f7       	brne	.-4      	; 0x46e6 <MODE_7+0x92a>
    46ea:	9a 83       	std	Y+2, r25	; 0x02
    46ec:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_7 */
    46ee:	cf 58       	subi	r28, 0x8F	; 143
    46f0:	df 4f       	sbci	r29, 0xFF	; 255
    46f2:	0f b6       	in	r0, 0x3f	; 63
    46f4:	f8 94       	cli
    46f6:	de bf       	out	0x3e, r29	; 62
    46f8:	0f be       	out	0x3f, r0	; 63
    46fa:	cd bf       	out	0x3d, r28	; 61
    46fc:	cf 91       	pop	r28
    46fe:	df 91       	pop	r29
    4700:	1f 91       	pop	r17
    4702:	0f 91       	pop	r16
    4704:	08 95       	ret

00004706 <MODE_8>:
/**
 * @brief function to implement mode 8
 */
static void MODE_8(void)
{
    4706:	df 93       	push	r29
    4708:	cf 93       	push	r28
    470a:	cd b7       	in	r28, 0x3d	; 61
    470c:	de b7       	in	r29, 0x3e	; 62
    470e:	6c 97       	sbiw	r28, 0x1c	; 28
    4710:	0f b6       	in	r0, 0x3f	; 63
    4712:	f8 94       	cli
    4714:	de bf       	out	0x3e, r29	; 62
    4716:	0f be       	out	0x3f, r0	; 63
    4718:	cd bf       	out	0x3d, r28	; 61
	MODE_4();
    471a:	0e 94 65 14 	call	0x28ca	; 0x28ca <MODE_4>
    471e:	80 e0       	ldi	r24, 0x00	; 0
    4720:	90 e0       	ldi	r25, 0x00	; 0
    4722:	a0 e2       	ldi	r26, 0x20	; 32
    4724:	b1 e4       	ldi	r27, 0x41	; 65
    4726:	89 8f       	std	Y+25, r24	; 0x19
    4728:	9a 8f       	std	Y+26, r25	; 0x1a
    472a:	ab 8f       	std	Y+27, r26	; 0x1b
    472c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    472e:	69 8d       	ldd	r22, Y+25	; 0x19
    4730:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4732:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4734:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4736:	20 e0       	ldi	r18, 0x00	; 0
    4738:	30 e0       	ldi	r19, 0x00	; 0
    473a:	4a ef       	ldi	r20, 0xFA	; 250
    473c:	54 e4       	ldi	r21, 0x44	; 68
    473e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4742:	dc 01       	movw	r26, r24
    4744:	cb 01       	movw	r24, r22
    4746:	8d 8b       	std	Y+21, r24	; 0x15
    4748:	9e 8b       	std	Y+22, r25	; 0x16
    474a:	af 8b       	std	Y+23, r26	; 0x17
    474c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    474e:	6d 89       	ldd	r22, Y+21	; 0x15
    4750:	7e 89       	ldd	r23, Y+22	; 0x16
    4752:	8f 89       	ldd	r24, Y+23	; 0x17
    4754:	98 8d       	ldd	r25, Y+24	; 0x18
    4756:	20 e0       	ldi	r18, 0x00	; 0
    4758:	30 e0       	ldi	r19, 0x00	; 0
    475a:	40 e8       	ldi	r20, 0x80	; 128
    475c:	5f e3       	ldi	r21, 0x3F	; 63
    475e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4762:	88 23       	and	r24, r24
    4764:	2c f4       	brge	.+10     	; 0x4770 <MODE_8+0x6a>
		__ticks = 1;
    4766:	81 e0       	ldi	r24, 0x01	; 1
    4768:	90 e0       	ldi	r25, 0x00	; 0
    476a:	9c 8b       	std	Y+20, r25	; 0x14
    476c:	8b 8b       	std	Y+19, r24	; 0x13
    476e:	3f c0       	rjmp	.+126    	; 0x47ee <MODE_8+0xe8>
	else if (__tmp > 65535)
    4770:	6d 89       	ldd	r22, Y+21	; 0x15
    4772:	7e 89       	ldd	r23, Y+22	; 0x16
    4774:	8f 89       	ldd	r24, Y+23	; 0x17
    4776:	98 8d       	ldd	r25, Y+24	; 0x18
    4778:	20 e0       	ldi	r18, 0x00	; 0
    477a:	3f ef       	ldi	r19, 0xFF	; 255
    477c:	4f e7       	ldi	r20, 0x7F	; 127
    477e:	57 e4       	ldi	r21, 0x47	; 71
    4780:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4784:	18 16       	cp	r1, r24
    4786:	4c f5       	brge	.+82     	; 0x47da <MODE_8+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4788:	69 8d       	ldd	r22, Y+25	; 0x19
    478a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    478c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    478e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4790:	20 e0       	ldi	r18, 0x00	; 0
    4792:	30 e0       	ldi	r19, 0x00	; 0
    4794:	40 e2       	ldi	r20, 0x20	; 32
    4796:	51 e4       	ldi	r21, 0x41	; 65
    4798:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    479c:	dc 01       	movw	r26, r24
    479e:	cb 01       	movw	r24, r22
    47a0:	bc 01       	movw	r22, r24
    47a2:	cd 01       	movw	r24, r26
    47a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47a8:	dc 01       	movw	r26, r24
    47aa:	cb 01       	movw	r24, r22
    47ac:	9c 8b       	std	Y+20, r25	; 0x14
    47ae:	8b 8b       	std	Y+19, r24	; 0x13
    47b0:	0f c0       	rjmp	.+30     	; 0x47d0 <MODE_8+0xca>
    47b2:	88 ec       	ldi	r24, 0xC8	; 200
    47b4:	90 e0       	ldi	r25, 0x00	; 0
    47b6:	9a 8b       	std	Y+18, r25	; 0x12
    47b8:	89 8b       	std	Y+17, r24	; 0x11
    47ba:	89 89       	ldd	r24, Y+17	; 0x11
    47bc:	9a 89       	ldd	r25, Y+18	; 0x12
    47be:	01 97       	sbiw	r24, 0x01	; 1
    47c0:	f1 f7       	brne	.-4      	; 0x47be <MODE_8+0xb8>
    47c2:	9a 8b       	std	Y+18, r25	; 0x12
    47c4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47c6:	8b 89       	ldd	r24, Y+19	; 0x13
    47c8:	9c 89       	ldd	r25, Y+20	; 0x14
    47ca:	01 97       	sbiw	r24, 0x01	; 1
    47cc:	9c 8b       	std	Y+20, r25	; 0x14
    47ce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47d0:	8b 89       	ldd	r24, Y+19	; 0x13
    47d2:	9c 89       	ldd	r25, Y+20	; 0x14
    47d4:	00 97       	sbiw	r24, 0x00	; 0
    47d6:	69 f7       	brne	.-38     	; 0x47b2 <MODE_8+0xac>
    47d8:	14 c0       	rjmp	.+40     	; 0x4802 <MODE_8+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47da:	6d 89       	ldd	r22, Y+21	; 0x15
    47dc:	7e 89       	ldd	r23, Y+22	; 0x16
    47de:	8f 89       	ldd	r24, Y+23	; 0x17
    47e0:	98 8d       	ldd	r25, Y+24	; 0x18
    47e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47e6:	dc 01       	movw	r26, r24
    47e8:	cb 01       	movw	r24, r22
    47ea:	9c 8b       	std	Y+20, r25	; 0x14
    47ec:	8b 8b       	std	Y+19, r24	; 0x13
    47ee:	8b 89       	ldd	r24, Y+19	; 0x13
    47f0:	9c 89       	ldd	r25, Y+20	; 0x14
    47f2:	98 8b       	std	Y+16, r25	; 0x10
    47f4:	8f 87       	std	Y+15, r24	; 0x0f
    47f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    47f8:	98 89       	ldd	r25, Y+16	; 0x10
    47fa:	01 97       	sbiw	r24, 0x01	; 1
    47fc:	f1 f7       	brne	.-4      	; 0x47fa <MODE_8+0xf4>
    47fe:	98 8b       	std	Y+16, r25	; 0x10
    4800:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);
	MODE_5();
    4802:	0e 94 24 19 	call	0x3248	; 0x3248 <MODE_5>
    4806:	80 e0       	ldi	r24, 0x00	; 0
    4808:	90 e0       	ldi	r25, 0x00	; 0
    480a:	a6 e9       	ldi	r26, 0x96	; 150
    480c:	b3 e4       	ldi	r27, 0x43	; 67
    480e:	8b 87       	std	Y+11, r24	; 0x0b
    4810:	9c 87       	std	Y+12, r25	; 0x0c
    4812:	ad 87       	std	Y+13, r26	; 0x0d
    4814:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4816:	6b 85       	ldd	r22, Y+11	; 0x0b
    4818:	7c 85       	ldd	r23, Y+12	; 0x0c
    481a:	8d 85       	ldd	r24, Y+13	; 0x0d
    481c:	9e 85       	ldd	r25, Y+14	; 0x0e
    481e:	20 e0       	ldi	r18, 0x00	; 0
    4820:	30 e0       	ldi	r19, 0x00	; 0
    4822:	4a ef       	ldi	r20, 0xFA	; 250
    4824:	54 e4       	ldi	r21, 0x44	; 68
    4826:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    482a:	dc 01       	movw	r26, r24
    482c:	cb 01       	movw	r24, r22
    482e:	8f 83       	std	Y+7, r24	; 0x07
    4830:	98 87       	std	Y+8, r25	; 0x08
    4832:	a9 87       	std	Y+9, r26	; 0x09
    4834:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4836:	6f 81       	ldd	r22, Y+7	; 0x07
    4838:	78 85       	ldd	r23, Y+8	; 0x08
    483a:	89 85       	ldd	r24, Y+9	; 0x09
    483c:	9a 85       	ldd	r25, Y+10	; 0x0a
    483e:	20 e0       	ldi	r18, 0x00	; 0
    4840:	30 e0       	ldi	r19, 0x00	; 0
    4842:	40 e8       	ldi	r20, 0x80	; 128
    4844:	5f e3       	ldi	r21, 0x3F	; 63
    4846:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    484a:	88 23       	and	r24, r24
    484c:	2c f4       	brge	.+10     	; 0x4858 <MODE_8+0x152>
		__ticks = 1;
    484e:	81 e0       	ldi	r24, 0x01	; 1
    4850:	90 e0       	ldi	r25, 0x00	; 0
    4852:	9e 83       	std	Y+6, r25	; 0x06
    4854:	8d 83       	std	Y+5, r24	; 0x05
    4856:	3f c0       	rjmp	.+126    	; 0x48d6 <MODE_8+0x1d0>
	else if (__tmp > 65535)
    4858:	6f 81       	ldd	r22, Y+7	; 0x07
    485a:	78 85       	ldd	r23, Y+8	; 0x08
    485c:	89 85       	ldd	r24, Y+9	; 0x09
    485e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4860:	20 e0       	ldi	r18, 0x00	; 0
    4862:	3f ef       	ldi	r19, 0xFF	; 255
    4864:	4f e7       	ldi	r20, 0x7F	; 127
    4866:	57 e4       	ldi	r21, 0x47	; 71
    4868:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    486c:	18 16       	cp	r1, r24
    486e:	4c f5       	brge	.+82     	; 0x48c2 <MODE_8+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4870:	6b 85       	ldd	r22, Y+11	; 0x0b
    4872:	7c 85       	ldd	r23, Y+12	; 0x0c
    4874:	8d 85       	ldd	r24, Y+13	; 0x0d
    4876:	9e 85       	ldd	r25, Y+14	; 0x0e
    4878:	20 e0       	ldi	r18, 0x00	; 0
    487a:	30 e0       	ldi	r19, 0x00	; 0
    487c:	40 e2       	ldi	r20, 0x20	; 32
    487e:	51 e4       	ldi	r21, 0x41	; 65
    4880:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4884:	dc 01       	movw	r26, r24
    4886:	cb 01       	movw	r24, r22
    4888:	bc 01       	movw	r22, r24
    488a:	cd 01       	movw	r24, r26
    488c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4890:	dc 01       	movw	r26, r24
    4892:	cb 01       	movw	r24, r22
    4894:	9e 83       	std	Y+6, r25	; 0x06
    4896:	8d 83       	std	Y+5, r24	; 0x05
    4898:	0f c0       	rjmp	.+30     	; 0x48b8 <MODE_8+0x1b2>
    489a:	88 ec       	ldi	r24, 0xC8	; 200
    489c:	90 e0       	ldi	r25, 0x00	; 0
    489e:	9c 83       	std	Y+4, r25	; 0x04
    48a0:	8b 83       	std	Y+3, r24	; 0x03
    48a2:	8b 81       	ldd	r24, Y+3	; 0x03
    48a4:	9c 81       	ldd	r25, Y+4	; 0x04
    48a6:	01 97       	sbiw	r24, 0x01	; 1
    48a8:	f1 f7       	brne	.-4      	; 0x48a6 <MODE_8+0x1a0>
    48aa:	9c 83       	std	Y+4, r25	; 0x04
    48ac:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48ae:	8d 81       	ldd	r24, Y+5	; 0x05
    48b0:	9e 81       	ldd	r25, Y+6	; 0x06
    48b2:	01 97       	sbiw	r24, 0x01	; 1
    48b4:	9e 83       	std	Y+6, r25	; 0x06
    48b6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48b8:	8d 81       	ldd	r24, Y+5	; 0x05
    48ba:	9e 81       	ldd	r25, Y+6	; 0x06
    48bc:	00 97       	sbiw	r24, 0x00	; 0
    48be:	69 f7       	brne	.-38     	; 0x489a <MODE_8+0x194>
    48c0:	14 c0       	rjmp	.+40     	; 0x48ea <MODE_8+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48c2:	6f 81       	ldd	r22, Y+7	; 0x07
    48c4:	78 85       	ldd	r23, Y+8	; 0x08
    48c6:	89 85       	ldd	r24, Y+9	; 0x09
    48c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    48ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ce:	dc 01       	movw	r26, r24
    48d0:	cb 01       	movw	r24, r22
    48d2:	9e 83       	std	Y+6, r25	; 0x06
    48d4:	8d 83       	std	Y+5, r24	; 0x05
    48d6:	8d 81       	ldd	r24, Y+5	; 0x05
    48d8:	9e 81       	ldd	r25, Y+6	; 0x06
    48da:	9a 83       	std	Y+2, r25	; 0x02
    48dc:	89 83       	std	Y+1, r24	; 0x01
    48de:	89 81       	ldd	r24, Y+1	; 0x01
    48e0:	9a 81       	ldd	r25, Y+2	; 0x02
    48e2:	01 97       	sbiw	r24, 0x01	; 1
    48e4:	f1 f7       	brne	.-4      	; 0x48e2 <MODE_8+0x1dc>
    48e6:	9a 83       	std	Y+2, r25	; 0x02
    48e8:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_8 */
    48ea:	6c 96       	adiw	r28, 0x1c	; 28
    48ec:	0f b6       	in	r0, 0x3f	; 63
    48ee:	f8 94       	cli
    48f0:	de bf       	out	0x3e, r29	; 62
    48f2:	0f be       	out	0x3f, r0	; 63
    48f4:	cd bf       	out	0x3d, r28	; 61
    48f6:	cf 91       	pop	r28
    48f8:	df 91       	pop	r29
    48fa:	08 95       	ret

000048fc <MODE>:

/**
 * @brief functino to select between modes
 */
static void MODE(cu8 MODE_SELECT)
{
    48fc:	df 93       	push	r29
    48fe:	cf 93       	push	r28
    4900:	00 d0       	rcall	.+0      	; 0x4902 <MODE+0x6>
    4902:	0f 92       	push	r0
    4904:	cd b7       	in	r28, 0x3d	; 61
    4906:	de b7       	in	r29, 0x3e	; 62
    4908:	89 83       	std	Y+1, r24	; 0x01
	switch(MODE_SELECT)
    490a:	89 81       	ldd	r24, Y+1	; 0x01
    490c:	28 2f       	mov	r18, r24
    490e:	30 e0       	ldi	r19, 0x00	; 0
    4910:	3b 83       	std	Y+3, r19	; 0x03
    4912:	2a 83       	std	Y+2, r18	; 0x02
    4914:	8a 81       	ldd	r24, Y+2	; 0x02
    4916:	9b 81       	ldd	r25, Y+3	; 0x03
    4918:	83 30       	cpi	r24, 0x03	; 3
    491a:	91 05       	cpc	r25, r1
    491c:	91 f1       	breq	.+100    	; 0x4982 <MODE+0x86>
    491e:	2a 81       	ldd	r18, Y+2	; 0x02
    4920:	3b 81       	ldd	r19, Y+3	; 0x03
    4922:	24 30       	cpi	r18, 0x04	; 4
    4924:	31 05       	cpc	r19, r1
    4926:	7c f4       	brge	.+30     	; 0x4946 <MODE+0x4a>
    4928:	8a 81       	ldd	r24, Y+2	; 0x02
    492a:	9b 81       	ldd	r25, Y+3	; 0x03
    492c:	81 30       	cpi	r24, 0x01	; 1
    492e:	91 05       	cpc	r25, r1
    4930:	11 f1       	breq	.+68     	; 0x4976 <MODE+0x7a>
    4932:	2a 81       	ldd	r18, Y+2	; 0x02
    4934:	3b 81       	ldd	r19, Y+3	; 0x03
    4936:	22 30       	cpi	r18, 0x02	; 2
    4938:	31 05       	cpc	r19, r1
    493a:	04 f5       	brge	.+64     	; 0x497c <MODE+0x80>
    493c:	8a 81       	ldd	r24, Y+2	; 0x02
    493e:	9b 81       	ldd	r25, Y+3	; 0x03
    4940:	00 97       	sbiw	r24, 0x00	; 0
    4942:	b1 f0       	breq	.+44     	; 0x4970 <MODE+0x74>
    4944:	2c c0       	rjmp	.+88     	; 0x499e <MODE+0xa2>
    4946:	2a 81       	ldd	r18, Y+2	; 0x02
    4948:	3b 81       	ldd	r19, Y+3	; 0x03
    494a:	25 30       	cpi	r18, 0x05	; 5
    494c:	31 05       	cpc	r19, r1
    494e:	f9 f0       	breq	.+62     	; 0x498e <MODE+0x92>
    4950:	8a 81       	ldd	r24, Y+2	; 0x02
    4952:	9b 81       	ldd	r25, Y+3	; 0x03
    4954:	85 30       	cpi	r24, 0x05	; 5
    4956:	91 05       	cpc	r25, r1
    4958:	bc f0       	brlt	.+46     	; 0x4988 <MODE+0x8c>
    495a:	2a 81       	ldd	r18, Y+2	; 0x02
    495c:	3b 81       	ldd	r19, Y+3	; 0x03
    495e:	26 30       	cpi	r18, 0x06	; 6
    4960:	31 05       	cpc	r19, r1
    4962:	c1 f0       	breq	.+48     	; 0x4994 <MODE+0x98>
    4964:	8a 81       	ldd	r24, Y+2	; 0x02
    4966:	9b 81       	ldd	r25, Y+3	; 0x03
    4968:	87 30       	cpi	r24, 0x07	; 7
    496a:	91 05       	cpc	r25, r1
    496c:	b1 f0       	breq	.+44     	; 0x499a <MODE+0x9e>
    496e:	17 c0       	rjmp	.+46     	; 0x499e <MODE+0xa2>
	{
		case MODE1: MODE_1();
    4970:	0e 94 85 08 	call	0x110a	; 0x110a <MODE_1>
    4974:	14 c0       	rjmp	.+40     	; 0x499e <MODE+0xa2>
			break;
		case MODE2: MODE_2();
    4976:	0e 94 89 09 	call	0x1312	; 0x1312 <MODE_2>
    497a:	11 c0       	rjmp	.+34     	; 0x499e <MODE+0xa2>
			break;
		case MODE3: MODE_3();
    497c:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <MODE_3>
    4980:	0e c0       	rjmp	.+28     	; 0x499e <MODE+0xa2>
			break;
		case MODE4: MODE_4();
    4982:	0e 94 65 14 	call	0x28ca	; 0x28ca <MODE_4>
    4986:	0b c0       	rjmp	.+22     	; 0x499e <MODE+0xa2>
			break;
		case MODE5: MODE_5();
    4988:	0e 94 24 19 	call	0x3248	; 0x3248 <MODE_5>
    498c:	08 c0       	rjmp	.+16     	; 0x499e <MODE+0xa2>
			break;
		case MODE6: MODE_6();
    498e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <MODE_6>
    4992:	05 c0       	rjmp	.+10     	; 0x499e <MODE+0xa2>
			break;
		case MODE7: MODE_7();
    4994:	0e 94 de 1e 	call	0x3dbc	; 0x3dbc <MODE_7>
    4998:	02 c0       	rjmp	.+4      	; 0x499e <MODE+0xa2>
			break;
		case MODE8: MODE_8();
    499a:	0e 94 83 23 	call	0x4706	; 0x4706 <MODE_8>
			break;
		default: return;
	}
}/** @end MODE */
    499e:	0f 90       	pop	r0
    49a0:	0f 90       	pop	r0
    49a2:	0f 90       	pop	r0
    49a4:	cf 91       	pop	r28
    49a6:	df 91       	pop	r29
    49a8:	08 95       	ret

000049aa <main>:
/**
 * @brief main entry point.
 * @return int.
 */
int main(void)
{
    49aa:	df 93       	push	r29
    49ac:	cf 93       	push	r28
    49ae:	cd b7       	in	r28, 0x3d	; 61
    49b0:	de b7       	in	r29, 0x3e	; 62
	SYS_INIT();
    49b2:	0e 94 9b 05 	call	0xb36	; 0xb36 <SYS_INIT>
    49b6:	ff cf       	rjmp	.-2      	; 0x49b6 <main+0xc>

000049b8 <__prologue_saves__>:
    49b8:	2f 92       	push	r2
    49ba:	3f 92       	push	r3
    49bc:	4f 92       	push	r4
    49be:	5f 92       	push	r5
    49c0:	6f 92       	push	r6
    49c2:	7f 92       	push	r7
    49c4:	8f 92       	push	r8
    49c6:	9f 92       	push	r9
    49c8:	af 92       	push	r10
    49ca:	bf 92       	push	r11
    49cc:	cf 92       	push	r12
    49ce:	df 92       	push	r13
    49d0:	ef 92       	push	r14
    49d2:	ff 92       	push	r15
    49d4:	0f 93       	push	r16
    49d6:	1f 93       	push	r17
    49d8:	cf 93       	push	r28
    49da:	df 93       	push	r29
    49dc:	cd b7       	in	r28, 0x3d	; 61
    49de:	de b7       	in	r29, 0x3e	; 62
    49e0:	ca 1b       	sub	r28, r26
    49e2:	db 0b       	sbc	r29, r27
    49e4:	0f b6       	in	r0, 0x3f	; 63
    49e6:	f8 94       	cli
    49e8:	de bf       	out	0x3e, r29	; 62
    49ea:	0f be       	out	0x3f, r0	; 63
    49ec:	cd bf       	out	0x3d, r28	; 61
    49ee:	09 94       	ijmp

000049f0 <__epilogue_restores__>:
    49f0:	2a 88       	ldd	r2, Y+18	; 0x12
    49f2:	39 88       	ldd	r3, Y+17	; 0x11
    49f4:	48 88       	ldd	r4, Y+16	; 0x10
    49f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    49f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    49fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    49fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    49fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    4a00:	aa 84       	ldd	r10, Y+10	; 0x0a
    4a02:	b9 84       	ldd	r11, Y+9	; 0x09
    4a04:	c8 84       	ldd	r12, Y+8	; 0x08
    4a06:	df 80       	ldd	r13, Y+7	; 0x07
    4a08:	ee 80       	ldd	r14, Y+6	; 0x06
    4a0a:	fd 80       	ldd	r15, Y+5	; 0x05
    4a0c:	0c 81       	ldd	r16, Y+4	; 0x04
    4a0e:	1b 81       	ldd	r17, Y+3	; 0x03
    4a10:	aa 81       	ldd	r26, Y+2	; 0x02
    4a12:	b9 81       	ldd	r27, Y+1	; 0x01
    4a14:	ce 0f       	add	r28, r30
    4a16:	d1 1d       	adc	r29, r1
    4a18:	0f b6       	in	r0, 0x3f	; 63
    4a1a:	f8 94       	cli
    4a1c:	de bf       	out	0x3e, r29	; 62
    4a1e:	0f be       	out	0x3f, r0	; 63
    4a20:	cd bf       	out	0x3d, r28	; 61
    4a22:	ed 01       	movw	r28, r26
    4a24:	08 95       	ret

00004a26 <_exit>:
    4a26:	f8 94       	cli

00004a28 <__stop_program>:
    4a28:	ff cf       	rjmp	.-2      	; 0x4a28 <__stop_program>
