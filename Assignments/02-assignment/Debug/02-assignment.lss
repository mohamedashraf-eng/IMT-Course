
02-assignment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004c3a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00004c3a  00004cae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003378  00000000  00000000  00004cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000de8  00000000  00000000  00008030  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00008e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00008f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000090c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000ad11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000bbfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000c9ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000cb0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000cd99  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000d567  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e3       	ldi	r30, 0x3A	; 58
      68:	fc e4       	ldi	r31, 0x4C	; 76
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 aa 25 	call	0x4b54	; 0x4b54 <main>
      7a:	0c 94 1b 26 	jmp	0x4c36	; 0x4c36 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 e4 25 	jmp	0x4bc8	; 0x4bc8 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 00 26 	jmp	0x4c00	; 0x4c00 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 f0 25 	jmp	0x4be0	; 0x4be0 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 0c 26 	jmp	0x4c18	; 0x4c18 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 f0 25 	jmp	0x4be0	; 0x4be0 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 0c 26 	jmp	0x4c18	; 0x4c18 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 e4 25 	jmp	0x4bc8	; 0x4bc8 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 00 26 	jmp	0x4c00	; 0x4c00 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 f0 25 	jmp	0x4be0	; 0x4be0 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 0c 26 	jmp	0x4c18	; 0x4c18 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 f0 25 	jmp	0x4be0	; 0x4be0 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 0c 26 	jmp	0x4c18	; 0x4c18 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 f0 25 	jmp	0x4be0	; 0x4be0 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 0c 26 	jmp	0x4c18	; 0x4c18 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 f4 25 	jmp	0x4be8	; 0x4be8 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 10 26 	jmp	0x4c20	; 0x4c20 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <SYS_INIT>:
/**
 * @brief function to initialize the system.
 *
 */
void SYS_INIT(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <SYS_INIT+0x6>
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
	/* Setting the mode for used ports */
	REG_SET(DDRA);
     b40:	ea e3       	ldi	r30, 0x3A	; 58
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	80 81       	ld	r24, Z
     b46:	ea e3       	ldi	r30, 0x3A	; 58
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	8f ef       	ldi	r24, 0xFF	; 255
     b4c:	80 83       	st	Z, r24
	REG_CLR(PORTA);  /* Init as low */
     b4e:	eb e3       	ldi	r30, 0x3B	; 59
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	80 81       	ld	r24, Z
     b54:	eb e3       	ldi	r30, 0x3B	; 59
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	10 82       	st	Z, r1

	BIT_CLR(DDRB, PB0);
     b5a:	a7 e3       	ldi	r26, 0x37	; 55
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	e7 e3       	ldi	r30, 0x37	; 55
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	80 81       	ld	r24, Z
     b64:	8e 7f       	andi	r24, 0xFE	; 254
     b66:	8c 93       	st	X, r24
	BIT_CLR(DDRB, PB1);
     b68:	a7 e3       	ldi	r26, 0x37	; 55
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	e7 e3       	ldi	r30, 0x37	; 55
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	8d 7f       	andi	r24, 0xFD	; 253
     b74:	8c 93       	st	X, r24
	BIT_CLR(DDRB, PB2);
     b76:	a7 e3       	ldi	r26, 0x37	; 55
     b78:	b0 e0       	ldi	r27, 0x00	; 0
     b7a:	e7 e3       	ldi	r30, 0x37	; 55
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	80 81       	ld	r24, Z
     b80:	8b 7f       	andi	r24, 0xFB	; 251
     b82:	8c 93       	st	X, r24
	BIT_SET(PORTB, PB0);
     b84:	a8 e3       	ldi	r26, 0x38	; 56
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	e8 e3       	ldi	r30, 0x38	; 56
     b8a:	f0 e0       	ldi	r31, 0x00	; 0
     b8c:	80 81       	ld	r24, Z
     b8e:	81 60       	ori	r24, 0x01	; 1
     b90:	8c 93       	st	X, r24
	BIT_SET(PORTB, PB1);
     b92:	a8 e3       	ldi	r26, 0x38	; 56
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	e8 e3       	ldi	r30, 0x38	; 56
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	80 81       	ld	r24, Z
     b9c:	82 60       	ori	r24, 0x02	; 2
     b9e:	8c 93       	st	X, r24
	BIT_SET(PORTB, PB2);
     ba0:	a8 e3       	ldi	r26, 0x38	; 56
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e8 e3       	ldi	r30, 0x38	; 56
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	84 60       	ori	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24

}/** @end SYS_INIT*/
     bae:	0f 90       	pop	r0
     bb0:	0f 90       	pop	r0
     bb2:	cf 91       	pop	r28
     bb4:	df 91       	pop	r29
     bb6:	08 95       	ret

00000bb8 <LED_CTRL>:
/**
 * @brief functino to control leds.
 *
 */
void LED_CTRL(cu8 LED, cu8 LED_STATE)
{
     bb8:	df 93       	push	r29
     bba:	cf 93       	push	r28
     bbc:	00 d0       	rcall	.+0      	; 0xbbe <LED_CTRL+0x6>
     bbe:	00 d0       	rcall	.+0      	; 0xbc0 <LED_CTRL+0x8>
     bc0:	cd b7       	in	r28, 0x3d	; 61
     bc2:	de b7       	in	r29, 0x3e	; 62
     bc4:	89 83       	std	Y+1, r24	; 0x01
     bc6:	6a 83       	std	Y+2, r22	; 0x02
	switch(LED)
     bc8:	89 81       	ldd	r24, Y+1	; 0x01
     bca:	28 2f       	mov	r18, r24
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	3c 83       	std	Y+4, r19	; 0x04
     bd0:	2b 83       	std	Y+3, r18	; 0x03
     bd2:	8b 81       	ldd	r24, Y+3	; 0x03
     bd4:	9c 81       	ldd	r25, Y+4	; 0x04
     bd6:	83 30       	cpi	r24, 0x03	; 3
     bd8:	91 05       	cpc	r25, r1
     bda:	a9 f1       	breq	.+106    	; 0xc46 <LED_CTRL+0x8e>
     bdc:	2b 81       	ldd	r18, Y+3	; 0x03
     bde:	3c 81       	ldd	r19, Y+4	; 0x04
     be0:	24 30       	cpi	r18, 0x04	; 4
     be2:	31 05       	cpc	r19, r1
     be4:	7c f4       	brge	.+30     	; 0xc04 <LED_CTRL+0x4c>
     be6:	8b 81       	ldd	r24, Y+3	; 0x03
     be8:	9c 81       	ldd	r25, Y+4	; 0x04
     bea:	81 30       	cpi	r24, 0x01	; 1
     bec:	91 05       	cpc	r25, r1
     bee:	19 f1       	breq	.+70     	; 0xc36 <LED_CTRL+0x7e>
     bf0:	2b 81       	ldd	r18, Y+3	; 0x03
     bf2:	3c 81       	ldd	r19, Y+4	; 0x04
     bf4:	22 30       	cpi	r18, 0x02	; 2
     bf6:	31 05       	cpc	r19, r1
     bf8:	14 f5       	brge	.+68     	; 0xc3e <LED_CTRL+0x86>
     bfa:	8b 81       	ldd	r24, Y+3	; 0x03
     bfc:	9c 81       	ldd	r25, Y+4	; 0x04
     bfe:	00 97       	sbiw	r24, 0x00	; 0
     c00:	b1 f0       	breq	.+44     	; 0xc2e <LED_CTRL+0x76>
     c02:	34 c0       	rjmp	.+104    	; 0xc6c <LED_CTRL+0xb4>
     c04:	2b 81       	ldd	r18, Y+3	; 0x03
     c06:	3c 81       	ldd	r19, Y+4	; 0x04
     c08:	25 30       	cpi	r18, 0x05	; 5
     c0a:	31 05       	cpc	r19, r1
     c0c:	21 f1       	breq	.+72     	; 0xc56 <LED_CTRL+0x9e>
     c0e:	8b 81       	ldd	r24, Y+3	; 0x03
     c10:	9c 81       	ldd	r25, Y+4	; 0x04
     c12:	85 30       	cpi	r24, 0x05	; 5
     c14:	91 05       	cpc	r25, r1
     c16:	dc f0       	brlt	.+54     	; 0xc4e <LED_CTRL+0x96>
     c18:	2b 81       	ldd	r18, Y+3	; 0x03
     c1a:	3c 81       	ldd	r19, Y+4	; 0x04
     c1c:	26 30       	cpi	r18, 0x06	; 6
     c1e:	31 05       	cpc	r19, r1
     c20:	f1 f0       	breq	.+60     	; 0xc5e <LED_CTRL+0xa6>
     c22:	8b 81       	ldd	r24, Y+3	; 0x03
     c24:	9c 81       	ldd	r25, Y+4	; 0x04
     c26:	87 30       	cpi	r24, 0x07	; 7
     c28:	91 05       	cpc	r25, r1
     c2a:	e9 f0       	breq	.+58     	; 0xc66 <LED_CTRL+0xae>
     c2c:	1f c0       	rjmp	.+62     	; 0xc6c <LED_CTRL+0xb4>
	{
		case LED1: LED_1(LED_STATE);
     c2e:	8a 81       	ldd	r24, Y+2	; 0x02
     c30:	0e 94 4f 07 	call	0xe9e	; 0xe9e <LED_1>
     c34:	1b c0       	rjmp	.+54     	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED2: LED_2(LED_STATE);
     c36:	8a 81       	ldd	r24, Y+2	; 0x02
     c38:	0e 94 79 07 	call	0xef2	; 0xef2 <LED_2>
     c3c:	17 c0       	rjmp	.+46     	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED3: LED_3(LED_STATE);
     c3e:	8a 81       	ldd	r24, Y+2	; 0x02
     c40:	0e 94 a3 07 	call	0xf46	; 0xf46 <LED_3>
     c44:	13 c0       	rjmp	.+38     	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED4: LED_4(LED_STATE);
     c46:	8a 81       	ldd	r24, Y+2	; 0x02
     c48:	0e 94 cd 07 	call	0xf9a	; 0xf9a <LED_4>
     c4c:	0f c0       	rjmp	.+30     	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED5: LED_5(LED_STATE);
     c4e:	8a 81       	ldd	r24, Y+2	; 0x02
     c50:	0e 94 f7 07 	call	0xfee	; 0xfee <LED_5>
     c54:	0b c0       	rjmp	.+22     	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED6: LED_6(LED_STATE);
     c56:	8a 81       	ldd	r24, Y+2	; 0x02
     c58:	0e 94 21 08 	call	0x1042	; 0x1042 <LED_6>
     c5c:	07 c0       	rjmp	.+14     	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED7: LED_7(LED_STATE);
     c5e:	8a 81       	ldd	r24, Y+2	; 0x02
     c60:	0e 94 4b 08 	call	0x1096	; 0x1096 <LED_7>
     c64:	03 c0       	rjmp	.+6      	; 0xc6c <LED_CTRL+0xb4>
			break;

		case LED8: LED_8(LED_STATE);
     c66:	8a 81       	ldd	r24, Y+2	; 0x02
     c68:	0e 94 75 08 	call	0x10ea	; 0x10ea <LED_8>
			break;

		default: return;
	}//end switch.
}/** @end LED_CTRL */
     c6c:	0f 90       	pop	r0
     c6e:	0f 90       	pop	r0
     c70:	0f 90       	pop	r0
     c72:	0f 90       	pop	r0
     c74:	cf 91       	pop	r28
     c76:	df 91       	pop	r29
     c78:	08 95       	ret

00000c7a <MODE_CTRL>:

/**
 * @brief function to switch between modes
 */
void MODE_CTRL(void)
{
     c7a:	df 93       	push	r29
     c7c:	cf 93       	push	r28
     c7e:	cd b7       	in	r28, 0x3d	; 61
     c80:	de b7       	in	r29, 0x3e	; 62
	if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == OPENED) )
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     c88:	81 30       	cpi	r24, 0x01	; 1
     c8a:	71 f4       	brne	.+28     	; 0xca8 <MODE_CTRL+0x2e>
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     c92:	81 30       	cpi	r24, 0x01	; 1
     c94:	49 f4       	brne	.+18     	; 0xca8 <MODE_CTRL+0x2e>
     c96:	82 e0       	ldi	r24, 0x02	; 2
     c98:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     c9c:	81 30       	cpi	r24, 0x01	; 1
     c9e:	21 f4       	brne	.+8      	; 0xca8 <MODE_CTRL+0x2e>
	{
		/* Flashing every 500ms */
		MODE(MODE1);
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     ca6:	84 c0       	rjmp	.+264    	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == CLOSED) )
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     cae:	81 30       	cpi	r24, 0x01	; 1
     cb0:	71 f4       	brne	.+28     	; 0xcce <MODE_CTRL+0x54>
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     cb8:	81 30       	cpi	r24, 0x01	; 1
     cba:	49 f4       	brne	.+18     	; 0xcce <MODE_CTRL+0x54>
     cbc:	82 e0       	ldi	r24, 0x02	; 2
     cbe:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     cc2:	88 23       	and	r24, r24
     cc4:	21 f4       	brne	.+8      	; 0xcce <MODE_CTRL+0x54>
	{
		/* Shifting left every 250ms */
		MODE(MODE2);
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     ccc:	71 c0       	rjmp	.+226    	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == OPENED) )
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     cd4:	81 30       	cpi	r24, 0x01	; 1
     cd6:	71 f4       	brne	.+28     	; 0xcf4 <MODE_CTRL+0x7a>
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     cde:	88 23       	and	r24, r24
     ce0:	49 f4       	brne	.+18     	; 0xcf4 <MODE_CTRL+0x7a>
     ce2:	82 e0       	ldi	r24, 0x02	; 2
     ce4:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     ce8:	81 30       	cpi	r24, 0x01	; 1
     cea:	21 f4       	brne	.+8      	; 0xcf4 <MODE_CTRL+0x7a>
	{
		/* Shifting right every 250ms */
		MODE(MODE3);
     cec:	82 e0       	ldi	r24, 0x02	; 2
     cee:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     cf2:	5e c0       	rjmp	.+188    	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == OPENED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == CLOSED) )
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     cfa:	81 30       	cpi	r24, 0x01	; 1
     cfc:	71 f4       	brne	.+28     	; 0xd1a <MODE_CTRL+0xa0>
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d04:	88 23       	and	r24, r24
     d06:	49 f4       	brne	.+18     	; 0xd1a <MODE_CTRL+0xa0>
     d08:	82 e0       	ldi	r24, 0x02	; 2
     d0a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d0e:	88 23       	and	r24, r24
     d10:	21 f4       	brne	.+8      	; 0xd1a <MODE_CTRL+0xa0>
	{
		/* 2-Leds Converging every 300ms */
		MODE(MODE4);
     d12:	83 e0       	ldi	r24, 0x03	; 3
     d14:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     d18:	4b c0       	rjmp	.+150    	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == OPENED) )
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d20:	88 23       	and	r24, r24
     d22:	71 f4       	brne	.+28     	; 0xd40 <MODE_CTRL+0xc6>
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d2a:	81 30       	cpi	r24, 0x01	; 1
     d2c:	49 f4       	brne	.+18     	; 0xd40 <MODE_CTRL+0xc6>
     d2e:	82 e0       	ldi	r24, 0x02	; 2
     d30:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d34:	81 30       	cpi	r24, 0x01	; 1
     d36:	21 f4       	brne	.+8      	; 0xd40 <MODE_CTRL+0xc6>
	{
		/* 2-Leds Diverging every 300ms */
		MODE(MODE5);
     d38:	84 e0       	ldi	r24, 0x04	; 4
     d3a:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     d3e:	38 c0       	rjmp	.+112    	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == OPENED) && (SW_READ(SW3) == CLOSED) )
     d40:	80 e0       	ldi	r24, 0x00	; 0
     d42:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d46:	88 23       	and	r24, r24
     d48:	71 f4       	brne	.+28     	; 0xd66 <MODE_CTRL+0xec>
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d50:	81 30       	cpi	r24, 0x01	; 1
     d52:	49 f4       	brne	.+18     	; 0xd66 <MODE_CTRL+0xec>
     d54:	82 e0       	ldi	r24, 0x02	; 2
     d56:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d5a:	88 23       	and	r24, r24
     d5c:	21 f4       	brne	.+8      	; 0xd66 <MODE_CTRL+0xec>
	{
		/* Ping Pong effect every 250ms */
		MODE(MODE6);
     d5e:	85 e0       	ldi	r24, 0x05	; 5
     d60:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     d64:	25 c0       	rjmp	.+74     	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == OPENED) )
     d66:	80 e0       	ldi	r24, 0x00	; 0
     d68:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d6c:	88 23       	and	r24, r24
     d6e:	71 f4       	brne	.+28     	; 0xd8c <MODE_CTRL+0x112>
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d76:	88 23       	and	r24, r24
     d78:	49 f4       	brne	.+18     	; 0xd8c <MODE_CTRL+0x112>
     d7a:	82 e0       	ldi	r24, 0x02	; 2
     d7c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d80:	81 30       	cpi	r24, 0x01	; 1
     d82:	21 f4       	brne	.+8      	; 0xd8c <MODE_CTRL+0x112>
	{
		/* Snake effect every 300ms */
		MODE(MODE7);
     d84:	86 e0       	ldi	r24, 0x06	; 6
     d86:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
     d8a:	12 c0       	rjmp	.+36     	; 0xdb0 <MODE_CTRL+0x136>
	}
	else if( (SW_READ(SW1) == CLOSED) && (SW_READ(SW2) == CLOSED) && (SW_READ(SW3) == CLOSED) )
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d92:	88 23       	and	r24, r24
     d94:	69 f4       	brne	.+26     	; 0xdb0 <MODE_CTRL+0x136>
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     d9c:	88 23       	and	r24, r24
     d9e:	41 f4       	brne	.+16     	; 0xdb0 <MODE_CTRL+0x136>
     da0:	82 e0       	ldi	r24, 0x02	; 2
     da2:	0e 94 db 06 	call	0xdb6	; 0xdb6 <SW_READ>
     da6:	88 23       	and	r24, r24
     da8:	19 f4       	brne	.+6      	; 0xdb0 <MODE_CTRL+0x136>
	{
		/* 2-Leds Converging/Diverging every 300ms */
		MODE(MODE8);
     daa:	87 e0       	ldi	r24, 0x07	; 7
     dac:	0e 94 53 25 	call	0x4aa6	; 0x4aa6 <MODE>
	}
	else;
}/** @end MODE_CTRL */
     db0:	cf 91       	pop	r28
     db2:	df 91       	pop	r29
     db4:	08 95       	ret

00000db6 <SW_READ>:
/**
 * @brief function to read switches
 *
 */
cu8 SW_READ(cu8 SW)
{
     db6:	df 93       	push	r29
     db8:	cf 93       	push	r28
     dba:	cd b7       	in	r28, 0x3d	; 61
     dbc:	de b7       	in	r29, 0x3e	; 62
     dbe:	2b 97       	sbiw	r28, 0x0b	; 11
     dc0:	0f b6       	in	r0, 0x3f	; 63
     dc2:	f8 94       	cli
     dc4:	de bf       	out	0x3e, r29	; 62
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	cd bf       	out	0x3d, r28	; 61
     dca:	89 83       	std	Y+1, r24	; 0x01
	switch(SW)
     dcc:	89 81       	ldd	r24, Y+1	; 0x01
     dce:	28 2f       	mov	r18, r24
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	3b 87       	std	Y+11, r19	; 0x0b
     dd4:	2a 87       	std	Y+10, r18	; 0x0a
     dd6:	8a 85       	ldd	r24, Y+10	; 0x0a
     dd8:	9b 85       	ldd	r25, Y+11	; 0x0b
     dda:	83 30       	cpi	r24, 0x03	; 3
     ddc:	91 05       	cpc	r25, r1
     dde:	d1 f1       	breq	.+116    	; 0xe54 <SW_READ+0x9e>
     de0:	2a 85       	ldd	r18, Y+10	; 0x0a
     de2:	3b 85       	ldd	r19, Y+11	; 0x0b
     de4:	24 30       	cpi	r18, 0x04	; 4
     de6:	31 05       	cpc	r19, r1
     de8:	7c f4       	brge	.+30     	; 0xe08 <SW_READ+0x52>
     dea:	8a 85       	ldd	r24, Y+10	; 0x0a
     dec:	9b 85       	ldd	r25, Y+11	; 0x0b
     dee:	81 30       	cpi	r24, 0x01	; 1
     df0:	91 05       	cpc	r25, r1
     df2:	31 f1       	breq	.+76     	; 0xe40 <SW_READ+0x8a>
     df4:	2a 85       	ldd	r18, Y+10	; 0x0a
     df6:	3b 85       	ldd	r19, Y+11	; 0x0b
     df8:	22 30       	cpi	r18, 0x02	; 2
     dfa:	31 05       	cpc	r19, r1
     dfc:	34 f5       	brge	.+76     	; 0xe4a <SW_READ+0x94>
     dfe:	8a 85       	ldd	r24, Y+10	; 0x0a
     e00:	9b 85       	ldd	r25, Y+11	; 0x0b
     e02:	00 97       	sbiw	r24, 0x00	; 0
     e04:	b1 f0       	breq	.+44     	; 0xe32 <SW_READ+0x7c>
     e06:	3f c0       	rjmp	.+126    	; 0xe86 <SW_READ+0xd0>
     e08:	2a 85       	ldd	r18, Y+10	; 0x0a
     e0a:	3b 85       	ldd	r19, Y+11	; 0x0b
     e0c:	25 30       	cpi	r18, 0x05	; 5
     e0e:	31 05       	cpc	r19, r1
     e10:	59 f1       	breq	.+86     	; 0xe68 <SW_READ+0xb2>
     e12:	8a 85       	ldd	r24, Y+10	; 0x0a
     e14:	9b 85       	ldd	r25, Y+11	; 0x0b
     e16:	85 30       	cpi	r24, 0x05	; 5
     e18:	91 05       	cpc	r25, r1
     e1a:	0c f1       	brlt	.+66     	; 0xe5e <SW_READ+0xa8>
     e1c:	2a 85       	ldd	r18, Y+10	; 0x0a
     e1e:	3b 85       	ldd	r19, Y+11	; 0x0b
     e20:	26 30       	cpi	r18, 0x06	; 6
     e22:	31 05       	cpc	r19, r1
     e24:	31 f1       	breq	.+76     	; 0xe72 <SW_READ+0xbc>
     e26:	8a 85       	ldd	r24, Y+10	; 0x0a
     e28:	9b 85       	ldd	r25, Y+11	; 0x0b
     e2a:	87 30       	cpi	r24, 0x07	; 7
     e2c:	91 05       	cpc	r25, r1
     e2e:	31 f1       	breq	.+76     	; 0xe7c <SW_READ+0xc6>
     e30:	2a c0       	rjmp	.+84     	; 0xe86 <SW_READ+0xd0>
	{
		case SW1: 	return BIT_GET(PINB, PB0);
     e32:	e6 e3       	ldi	r30, 0x36	; 54
     e34:	f0 e0       	ldi	r31, 0x00	; 0
     e36:	80 81       	ld	r24, Z
     e38:	98 2f       	mov	r25, r24
     e3a:	91 70       	andi	r25, 0x01	; 1
     e3c:	99 87       	std	Y+9, r25	; 0x09
     e3e:	25 c0       	rjmp	.+74     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW2: 	return BIT_GET(PINB, PB1);
     e40:	e6 e3       	ldi	r30, 0x36	; 54
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	20 81       	ld	r18, Z
     e46:	19 86       	std	Y+9, r1	; 0x09
     e48:	20 c0       	rjmp	.+64     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW3: 	return BIT_GET(PINB, PB2);
     e4a:	e6 e3       	ldi	r30, 0x36	; 54
     e4c:	f0 e0       	ldi	r31, 0x00	; 0
     e4e:	30 81       	ld	r19, Z
     e50:	19 86       	std	Y+9, r1	; 0x09
     e52:	1b c0       	rjmp	.+54     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW4:	return BIT_GET(PINB, PB3);
     e54:	e6 e3       	ldi	r30, 0x36	; 54
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	80 81       	ld	r24, Z
     e5a:	19 86       	std	Y+9, r1	; 0x09
     e5c:	16 c0       	rjmp	.+44     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW5: 	return BIT_GET(PINB, PB4);
     e5e:	e6 e3       	ldi	r30, 0x36	; 54
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	90 81       	ld	r25, Z
     e64:	19 86       	std	Y+9, r1	; 0x09
     e66:	11 c0       	rjmp	.+34     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW6: 	return BIT_GET(PINB, PB5);
     e68:	e6 e3       	ldi	r30, 0x36	; 54
     e6a:	f0 e0       	ldi	r31, 0x00	; 0
     e6c:	20 81       	ld	r18, Z
     e6e:	19 86       	std	Y+9, r1	; 0x09
     e70:	0c c0       	rjmp	.+24     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW7: 	return BIT_GET(PINB, PB6);
     e72:	e6 e3       	ldi	r30, 0x36	; 54
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	30 81       	ld	r19, Z
     e78:	19 86       	std	Y+9, r1	; 0x09
     e7a:	07 c0       	rjmp	.+14     	; 0xe8a <SW_READ+0xd4>
			break;
		case SW8: 	return BIT_GET(PINB, PB7);
     e7c:	e6 e3       	ldi	r30, 0x36	; 54
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	19 86       	std	Y+9, r1	; 0x09
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <SW_READ+0xd4>
			break;

		default: 	return -1;
     e86:	9f ef       	ldi	r25, 0xFF	; 255
     e88:	99 87       	std	Y+9, r25	; 0x09
     e8a:	89 85       	ldd	r24, Y+9	; 0x09
	}//end switch.

	return -1;
}/** @end LED_CTRL */
     e8c:	2b 96       	adiw	r28, 0x0b	; 11
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	f8 94       	cli
     e92:	de bf       	out	0x3e, r29	; 62
     e94:	0f be       	out	0x3f, r0	; 63
     e96:	cd bf       	out	0x3d, r28	; 61
     e98:	cf 91       	pop	r28
     e9a:	df 91       	pop	r29
     e9c:	08 95       	ret

00000e9e <LED_1>:
/** @defgroup sub functions */
/**
 * @brief function to control led 1
 */
static void LED_1(cu8 STATE)
{
     e9e:	df 93       	push	r29
     ea0:	cf 93       	push	r28
     ea2:	00 d0       	rcall	.+0      	; 0xea4 <LED_1+0x6>
     ea4:	0f 92       	push	r0
     ea6:	cd b7       	in	r28, 0x3d	; 61
     ea8:	de b7       	in	r29, 0x3e	; 62
     eaa:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     eac:	89 81       	ldd	r24, Y+1	; 0x01
     eae:	28 2f       	mov	r18, r24
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	3b 83       	std	Y+3, r19	; 0x03
     eb4:	2a 83       	std	Y+2, r18	; 0x02
     eb6:	8a 81       	ldd	r24, Y+2	; 0x02
     eb8:	9b 81       	ldd	r25, Y+3	; 0x03
     eba:	00 97       	sbiw	r24, 0x00	; 0
     ebc:	69 f0       	breq	.+26     	; 0xed8 <LED_1+0x3a>
     ebe:	2a 81       	ldd	r18, Y+2	; 0x02
     ec0:	3b 81       	ldd	r19, Y+3	; 0x03
     ec2:	21 30       	cpi	r18, 0x01	; 1
     ec4:	31 05       	cpc	r19, r1
     ec6:	79 f4       	brne	.+30     	; 0xee6 <LED_1+0x48>
	{
		case ON: BIT_SET(PORTA, PA0);
     ec8:	ab e3       	ldi	r26, 0x3B	; 59
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	eb e3       	ldi	r30, 0x3B	; 59
     ece:	f0 e0       	ldi	r31, 0x00	; 0
     ed0:	80 81       	ld	r24, Z
     ed2:	81 60       	ori	r24, 0x01	; 1
     ed4:	8c 93       	st	X, r24
     ed6:	07 c0       	rjmp	.+14     	; 0xee6 <LED_1+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA0);
     ed8:	ab e3       	ldi	r26, 0x3B	; 59
     eda:	b0 e0       	ldi	r27, 0x00	; 0
     edc:	eb e3       	ldi	r30, 0x3B	; 59
     ede:	f0 e0       	ldi	r31, 0x00	; 0
     ee0:	80 81       	ld	r24, Z
     ee2:	8e 7f       	andi	r24, 0xFE	; 254
     ee4:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED1 */
     ee6:	0f 90       	pop	r0
     ee8:	0f 90       	pop	r0
     eea:	0f 90       	pop	r0
     eec:	cf 91       	pop	r28
     eee:	df 91       	pop	r29
     ef0:	08 95       	ret

00000ef2 <LED_2>:

/**
 * @brief function to control led 2
 */
static void LED_2(cu8 STATE)
{
     ef2:	df 93       	push	r29
     ef4:	cf 93       	push	r28
     ef6:	00 d0       	rcall	.+0      	; 0xef8 <LED_2+0x6>
     ef8:	0f 92       	push	r0
     efa:	cd b7       	in	r28, 0x3d	; 61
     efc:	de b7       	in	r29, 0x3e	; 62
     efe:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     f00:	89 81       	ldd	r24, Y+1	; 0x01
     f02:	28 2f       	mov	r18, r24
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	3b 83       	std	Y+3, r19	; 0x03
     f08:	2a 83       	std	Y+2, r18	; 0x02
     f0a:	8a 81       	ldd	r24, Y+2	; 0x02
     f0c:	9b 81       	ldd	r25, Y+3	; 0x03
     f0e:	00 97       	sbiw	r24, 0x00	; 0
     f10:	69 f0       	breq	.+26     	; 0xf2c <LED_2+0x3a>
     f12:	2a 81       	ldd	r18, Y+2	; 0x02
     f14:	3b 81       	ldd	r19, Y+3	; 0x03
     f16:	21 30       	cpi	r18, 0x01	; 1
     f18:	31 05       	cpc	r19, r1
     f1a:	79 f4       	brne	.+30     	; 0xf3a <LED_2+0x48>
	{
		case ON: BIT_SET(PORTA, PA1);
     f1c:	ab e3       	ldi	r26, 0x3B	; 59
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	eb e3       	ldi	r30, 0x3B	; 59
     f22:	f0 e0       	ldi	r31, 0x00	; 0
     f24:	80 81       	ld	r24, Z
     f26:	82 60       	ori	r24, 0x02	; 2
     f28:	8c 93       	st	X, r24
     f2a:	07 c0       	rjmp	.+14     	; 0xf3a <LED_2+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA1);
     f2c:	ab e3       	ldi	r26, 0x3B	; 59
     f2e:	b0 e0       	ldi	r27, 0x00	; 0
     f30:	eb e3       	ldi	r30, 0x3B	; 59
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	80 81       	ld	r24, Z
     f36:	8d 7f       	andi	r24, 0xFD	; 253
     f38:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED2 */
     f3a:	0f 90       	pop	r0
     f3c:	0f 90       	pop	r0
     f3e:	0f 90       	pop	r0
     f40:	cf 91       	pop	r28
     f42:	df 91       	pop	r29
     f44:	08 95       	ret

00000f46 <LED_3>:

/**
 * @brief function to control led 3
 */
static void LED_3(cu8 STATE)
{
     f46:	df 93       	push	r29
     f48:	cf 93       	push	r28
     f4a:	00 d0       	rcall	.+0      	; 0xf4c <LED_3+0x6>
     f4c:	0f 92       	push	r0
     f4e:	cd b7       	in	r28, 0x3d	; 61
     f50:	de b7       	in	r29, 0x3e	; 62
     f52:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     f54:	89 81       	ldd	r24, Y+1	; 0x01
     f56:	28 2f       	mov	r18, r24
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	3b 83       	std	Y+3, r19	; 0x03
     f5c:	2a 83       	std	Y+2, r18	; 0x02
     f5e:	8a 81       	ldd	r24, Y+2	; 0x02
     f60:	9b 81       	ldd	r25, Y+3	; 0x03
     f62:	00 97       	sbiw	r24, 0x00	; 0
     f64:	69 f0       	breq	.+26     	; 0xf80 <LED_3+0x3a>
     f66:	2a 81       	ldd	r18, Y+2	; 0x02
     f68:	3b 81       	ldd	r19, Y+3	; 0x03
     f6a:	21 30       	cpi	r18, 0x01	; 1
     f6c:	31 05       	cpc	r19, r1
     f6e:	79 f4       	brne	.+30     	; 0xf8e <LED_3+0x48>
	{
		case ON: BIT_SET(PORTA, PA2);
     f70:	ab e3       	ldi	r26, 0x3B	; 59
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	eb e3       	ldi	r30, 0x3B	; 59
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	84 60       	ori	r24, 0x04	; 4
     f7c:	8c 93       	st	X, r24
     f7e:	07 c0       	rjmp	.+14     	; 0xf8e <LED_3+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA2);
     f80:	ab e3       	ldi	r26, 0x3B	; 59
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	eb e3       	ldi	r30, 0x3B	; 59
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	80 81       	ld	r24, Z
     f8a:	8b 7f       	andi	r24, 0xFB	; 251
     f8c:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED3 */
     f8e:	0f 90       	pop	r0
     f90:	0f 90       	pop	r0
     f92:	0f 90       	pop	r0
     f94:	cf 91       	pop	r28
     f96:	df 91       	pop	r29
     f98:	08 95       	ret

00000f9a <LED_4>:

/**
 * @brief function to control led 4
 */
static void LED_4(cu8 STATE)
{
     f9a:	df 93       	push	r29
     f9c:	cf 93       	push	r28
     f9e:	00 d0       	rcall	.+0      	; 0xfa0 <LED_4+0x6>
     fa0:	0f 92       	push	r0
     fa2:	cd b7       	in	r28, 0x3d	; 61
     fa4:	de b7       	in	r29, 0x3e	; 62
     fa6:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	28 2f       	mov	r18, r24
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	3b 83       	std	Y+3, r19	; 0x03
     fb0:	2a 83       	std	Y+2, r18	; 0x02
     fb2:	8a 81       	ldd	r24, Y+2	; 0x02
     fb4:	9b 81       	ldd	r25, Y+3	; 0x03
     fb6:	00 97       	sbiw	r24, 0x00	; 0
     fb8:	69 f0       	breq	.+26     	; 0xfd4 <LED_4+0x3a>
     fba:	2a 81       	ldd	r18, Y+2	; 0x02
     fbc:	3b 81       	ldd	r19, Y+3	; 0x03
     fbe:	21 30       	cpi	r18, 0x01	; 1
     fc0:	31 05       	cpc	r19, r1
     fc2:	79 f4       	brne	.+30     	; 0xfe2 <LED_4+0x48>
	{
		case ON: BIT_SET(PORTA, PA3);
     fc4:	ab e3       	ldi	r26, 0x3B	; 59
     fc6:	b0 e0       	ldi	r27, 0x00	; 0
     fc8:	eb e3       	ldi	r30, 0x3B	; 59
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	80 81       	ld	r24, Z
     fce:	88 60       	ori	r24, 0x08	; 8
     fd0:	8c 93       	st	X, r24
     fd2:	07 c0       	rjmp	.+14     	; 0xfe2 <LED_4+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA3);
     fd4:	ab e3       	ldi	r26, 0x3B	; 59
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	eb e3       	ldi	r30, 0x3B	; 59
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	80 81       	ld	r24, Z
     fde:	87 7f       	andi	r24, 0xF7	; 247
     fe0:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED4 */
     fe2:	0f 90       	pop	r0
     fe4:	0f 90       	pop	r0
     fe6:	0f 90       	pop	r0
     fe8:	cf 91       	pop	r28
     fea:	df 91       	pop	r29
     fec:	08 95       	ret

00000fee <LED_5>:
/**
 * @brief function to control led 5
 */
static void LED_5(cu8 STATE)
{
     fee:	df 93       	push	r29
     ff0:	cf 93       	push	r28
     ff2:	00 d0       	rcall	.+0      	; 0xff4 <LED_5+0x6>
     ff4:	0f 92       	push	r0
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
     ffa:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	28 2f       	mov	r18, r24
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	3b 83       	std	Y+3, r19	; 0x03
    1004:	2a 83       	std	Y+2, r18	; 0x02
    1006:	8a 81       	ldd	r24, Y+2	; 0x02
    1008:	9b 81       	ldd	r25, Y+3	; 0x03
    100a:	00 97       	sbiw	r24, 0x00	; 0
    100c:	69 f0       	breq	.+26     	; 0x1028 <LED_5+0x3a>
    100e:	2a 81       	ldd	r18, Y+2	; 0x02
    1010:	3b 81       	ldd	r19, Y+3	; 0x03
    1012:	21 30       	cpi	r18, 0x01	; 1
    1014:	31 05       	cpc	r19, r1
    1016:	79 f4       	brne	.+30     	; 0x1036 <LED_5+0x48>
	{
		case ON: BIT_SET(PORTA, PA4);
    1018:	ab e3       	ldi	r26, 0x3B	; 59
    101a:	b0 e0       	ldi	r27, 0x00	; 0
    101c:	eb e3       	ldi	r30, 0x3B	; 59
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	80 81       	ld	r24, Z
    1022:	80 61       	ori	r24, 0x10	; 16
    1024:	8c 93       	st	X, r24
    1026:	07 c0       	rjmp	.+14     	; 0x1036 <LED_5+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA4);
    1028:	ab e3       	ldi	r26, 0x3B	; 59
    102a:	b0 e0       	ldi	r27, 0x00	; 0
    102c:	eb e3       	ldi	r30, 0x3B	; 59
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	80 81       	ld	r24, Z
    1032:	8f 7e       	andi	r24, 0xEF	; 239
    1034:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED5 */
    1036:	0f 90       	pop	r0
    1038:	0f 90       	pop	r0
    103a:	0f 90       	pop	r0
    103c:	cf 91       	pop	r28
    103e:	df 91       	pop	r29
    1040:	08 95       	ret

00001042 <LED_6>:
/**
 * @brief function to control led 6
 */
static void LED_6(cu8 STATE)
{
    1042:	df 93       	push	r29
    1044:	cf 93       	push	r28
    1046:	00 d0       	rcall	.+0      	; 0x1048 <LED_6+0x6>
    1048:	0f 92       	push	r0
    104a:	cd b7       	in	r28, 0x3d	; 61
    104c:	de b7       	in	r29, 0x3e	; 62
    104e:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
    1050:	89 81       	ldd	r24, Y+1	; 0x01
    1052:	28 2f       	mov	r18, r24
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	3b 83       	std	Y+3, r19	; 0x03
    1058:	2a 83       	std	Y+2, r18	; 0x02
    105a:	8a 81       	ldd	r24, Y+2	; 0x02
    105c:	9b 81       	ldd	r25, Y+3	; 0x03
    105e:	00 97       	sbiw	r24, 0x00	; 0
    1060:	69 f0       	breq	.+26     	; 0x107c <LED_6+0x3a>
    1062:	2a 81       	ldd	r18, Y+2	; 0x02
    1064:	3b 81       	ldd	r19, Y+3	; 0x03
    1066:	21 30       	cpi	r18, 0x01	; 1
    1068:	31 05       	cpc	r19, r1
    106a:	79 f4       	brne	.+30     	; 0x108a <LED_6+0x48>
	{
		case ON: BIT_SET(PORTA, PA5);
    106c:	ab e3       	ldi	r26, 0x3B	; 59
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	eb e3       	ldi	r30, 0x3B	; 59
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	80 81       	ld	r24, Z
    1076:	80 62       	ori	r24, 0x20	; 32
    1078:	8c 93       	st	X, r24
    107a:	07 c0       	rjmp	.+14     	; 0x108a <LED_6+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA5);
    107c:	ab e3       	ldi	r26, 0x3B	; 59
    107e:	b0 e0       	ldi	r27, 0x00	; 0
    1080:	eb e3       	ldi	r30, 0x3B	; 59
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	80 81       	ld	r24, Z
    1086:	8f 7d       	andi	r24, 0xDF	; 223
    1088:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED6 */
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	cf 91       	pop	r28
    1092:	df 91       	pop	r29
    1094:	08 95       	ret

00001096 <LED_7>:
/**
 * @brief function to control led 7
 */
static void LED_7(cu8 STATE)
{
    1096:	df 93       	push	r29
    1098:	cf 93       	push	r28
    109a:	00 d0       	rcall	.+0      	; 0x109c <LED_7+0x6>
    109c:	0f 92       	push	r0
    109e:	cd b7       	in	r28, 0x3d	; 61
    10a0:	de b7       	in	r29, 0x3e	; 62
    10a2:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
    10a4:	89 81       	ldd	r24, Y+1	; 0x01
    10a6:	28 2f       	mov	r18, r24
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	3b 83       	std	Y+3, r19	; 0x03
    10ac:	2a 83       	std	Y+2, r18	; 0x02
    10ae:	8a 81       	ldd	r24, Y+2	; 0x02
    10b0:	9b 81       	ldd	r25, Y+3	; 0x03
    10b2:	00 97       	sbiw	r24, 0x00	; 0
    10b4:	69 f0       	breq	.+26     	; 0x10d0 <LED_7+0x3a>
    10b6:	2a 81       	ldd	r18, Y+2	; 0x02
    10b8:	3b 81       	ldd	r19, Y+3	; 0x03
    10ba:	21 30       	cpi	r18, 0x01	; 1
    10bc:	31 05       	cpc	r19, r1
    10be:	79 f4       	brne	.+30     	; 0x10de <LED_7+0x48>
	{
		case ON: BIT_SET(PORTA, PA6);
    10c0:	ab e3       	ldi	r26, 0x3B	; 59
    10c2:	b0 e0       	ldi	r27, 0x00	; 0
    10c4:	eb e3       	ldi	r30, 0x3B	; 59
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	80 81       	ld	r24, Z
    10ca:	80 64       	ori	r24, 0x40	; 64
    10cc:	8c 93       	st	X, r24
    10ce:	07 c0       	rjmp	.+14     	; 0x10de <LED_7+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA6);
    10d0:	ab e3       	ldi	r26, 0x3B	; 59
    10d2:	b0 e0       	ldi	r27, 0x00	; 0
    10d4:	eb e3       	ldi	r30, 0x3B	; 59
    10d6:	f0 e0       	ldi	r31, 0x00	; 0
    10d8:	80 81       	ld	r24, Z
    10da:	8f 7b       	andi	r24, 0xBF	; 191
    10dc:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED7 */
    10de:	0f 90       	pop	r0
    10e0:	0f 90       	pop	r0
    10e2:	0f 90       	pop	r0
    10e4:	cf 91       	pop	r28
    10e6:	df 91       	pop	r29
    10e8:	08 95       	ret

000010ea <LED_8>:
/**
 * @brief function to control led 8
 */
static void LED_8(cu8 STATE)
{
    10ea:	df 93       	push	r29
    10ec:	cf 93       	push	r28
    10ee:	00 d0       	rcall	.+0      	; 0x10f0 <LED_8+0x6>
    10f0:	0f 92       	push	r0
    10f2:	cd b7       	in	r28, 0x3d	; 61
    10f4:	de b7       	in	r29, 0x3e	; 62
    10f6:	89 83       	std	Y+1, r24	; 0x01
	switch(STATE)
    10f8:	89 81       	ldd	r24, Y+1	; 0x01
    10fa:	28 2f       	mov	r18, r24
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	3b 83       	std	Y+3, r19	; 0x03
    1100:	2a 83       	std	Y+2, r18	; 0x02
    1102:	8a 81       	ldd	r24, Y+2	; 0x02
    1104:	9b 81       	ldd	r25, Y+3	; 0x03
    1106:	00 97       	sbiw	r24, 0x00	; 0
    1108:	69 f0       	breq	.+26     	; 0x1124 <LED_8+0x3a>
    110a:	2a 81       	ldd	r18, Y+2	; 0x02
    110c:	3b 81       	ldd	r19, Y+3	; 0x03
    110e:	21 30       	cpi	r18, 0x01	; 1
    1110:	31 05       	cpc	r19, r1
    1112:	79 f4       	brne	.+30     	; 0x1132 <LED_8+0x48>
	{
		case ON: BIT_SET(PORTA, PA7);
    1114:	ab e3       	ldi	r26, 0x3B	; 59
    1116:	b0 e0       	ldi	r27, 0x00	; 0
    1118:	eb e3       	ldi	r30, 0x3B	; 59
    111a:	f0 e0       	ldi	r31, 0x00	; 0
    111c:	80 81       	ld	r24, Z
    111e:	80 68       	ori	r24, 0x80	; 128
    1120:	8c 93       	st	X, r24
    1122:	07 c0       	rjmp	.+14     	; 0x1132 <LED_8+0x48>
			break;

		case OFF: BIT_CLR(PORTA, PA7);
    1124:	ab e3       	ldi	r26, 0x3B	; 59
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	eb e3       	ldi	r30, 0x3B	; 59
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	80 81       	ld	r24, Z
    112e:	8f 77       	andi	r24, 0x7F	; 127
    1130:	8c 93       	st	X, r24
			break;

		default: return;
	}//end switch.
}/** @end LED8 */
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	0f 90       	pop	r0
    1138:	cf 91       	pop	r28
    113a:	df 91       	pop	r29
    113c:	08 95       	ret

0000113e <MODE_1>:

/**
 * @brief function to implement mode 1
 */
static void MODE_1(void)
{
    113e:	df 93       	push	r29
    1140:	cf 93       	push	r28
    1142:	cd b7       	in	r28, 0x3d	; 61
    1144:	de b7       	in	r29, 0x3e	; 62
    1146:	6e 97       	sbiw	r28, 0x1e	; 30
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	de bf       	out	0x3e, r29	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	cd bf       	out	0x3d, r28	; 61
	REG_SET(PORTA);
    1152:	eb e3       	ldi	r30, 0x3B	; 59
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	80 81       	ld	r24, Z
    1158:	eb e3       	ldi	r30, 0x3B	; 59
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	8f ef       	ldi	r24, 0xFF	; 255
    115e:	80 83       	st	Z, r24
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	a8 e4       	ldi	r26, 0x48	; 72
    1166:	b2 e4       	ldi	r27, 0x42	; 66
    1168:	89 8f       	std	Y+25, r24	; 0x19
    116a:	9a 8f       	std	Y+26, r25	; 0x1a
    116c:	ab 8f       	std	Y+27, r26	; 0x1b
    116e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1170:	69 8d       	ldd	r22, Y+25	; 0x19
    1172:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1174:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1176:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1178:	20 e0       	ldi	r18, 0x00	; 0
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	4a ef       	ldi	r20, 0xFA	; 250
    117e:	54 e4       	ldi	r21, 0x44	; 68
    1180:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1184:	dc 01       	movw	r26, r24
    1186:	cb 01       	movw	r24, r22
    1188:	8d 8b       	std	Y+21, r24	; 0x15
    118a:	9e 8b       	std	Y+22, r25	; 0x16
    118c:	af 8b       	std	Y+23, r26	; 0x17
    118e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1190:	6d 89       	ldd	r22, Y+21	; 0x15
    1192:	7e 89       	ldd	r23, Y+22	; 0x16
    1194:	8f 89       	ldd	r24, Y+23	; 0x17
    1196:	98 8d       	ldd	r25, Y+24	; 0x18
    1198:	20 e0       	ldi	r18, 0x00	; 0
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	40 e8       	ldi	r20, 0x80	; 128
    119e:	5f e3       	ldi	r21, 0x3F	; 63
    11a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11a4:	88 23       	and	r24, r24
    11a6:	2c f4       	brge	.+10     	; 0x11b2 <MODE_1+0x74>
		__ticks = 1;
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	9c 8b       	std	Y+20, r25	; 0x14
    11ae:	8b 8b       	std	Y+19, r24	; 0x13
    11b0:	3f c0       	rjmp	.+126    	; 0x1230 <MODE_1+0xf2>
	else if (__tmp > 65535)
    11b2:	6d 89       	ldd	r22, Y+21	; 0x15
    11b4:	7e 89       	ldd	r23, Y+22	; 0x16
    11b6:	8f 89       	ldd	r24, Y+23	; 0x17
    11b8:	98 8d       	ldd	r25, Y+24	; 0x18
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	3f ef       	ldi	r19, 0xFF	; 255
    11be:	4f e7       	ldi	r20, 0x7F	; 127
    11c0:	57 e4       	ldi	r21, 0x47	; 71
    11c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11c6:	18 16       	cp	r1, r24
    11c8:	4c f5       	brge	.+82     	; 0x121c <MODE_1+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11ca:	69 8d       	ldd	r22, Y+25	; 0x19
    11cc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    11ce:	8b 8d       	ldd	r24, Y+27	; 0x1b
    11d0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	40 e2       	ldi	r20, 0x20	; 32
    11d8:	51 e4       	ldi	r21, 0x41	; 65
    11da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11de:	dc 01       	movw	r26, r24
    11e0:	cb 01       	movw	r24, r22
    11e2:	bc 01       	movw	r22, r24
    11e4:	cd 01       	movw	r24, r26
    11e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11ea:	dc 01       	movw	r26, r24
    11ec:	cb 01       	movw	r24, r22
    11ee:	9c 8b       	std	Y+20, r25	; 0x14
    11f0:	8b 8b       	std	Y+19, r24	; 0x13
    11f2:	0f c0       	rjmp	.+30     	; 0x1212 <MODE_1+0xd4>
    11f4:	88 ec       	ldi	r24, 0xC8	; 200
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	9a 8b       	std	Y+18, r25	; 0x12
    11fa:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11fc:	89 89       	ldd	r24, Y+17	; 0x11
    11fe:	9a 89       	ldd	r25, Y+18	; 0x12
    1200:	01 97       	sbiw	r24, 0x01	; 1
    1202:	f1 f7       	brne	.-4      	; 0x1200 <MODE_1+0xc2>
    1204:	9a 8b       	std	Y+18, r25	; 0x12
    1206:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1208:	8b 89       	ldd	r24, Y+19	; 0x13
    120a:	9c 89       	ldd	r25, Y+20	; 0x14
    120c:	01 97       	sbiw	r24, 0x01	; 1
    120e:	9c 8b       	std	Y+20, r25	; 0x14
    1210:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1212:	8b 89       	ldd	r24, Y+19	; 0x13
    1214:	9c 89       	ldd	r25, Y+20	; 0x14
    1216:	00 97       	sbiw	r24, 0x00	; 0
    1218:	69 f7       	brne	.-38     	; 0x11f4 <MODE_1+0xb6>
    121a:	14 c0       	rjmp	.+40     	; 0x1244 <MODE_1+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    121c:	6d 89       	ldd	r22, Y+21	; 0x15
    121e:	7e 89       	ldd	r23, Y+22	; 0x16
    1220:	8f 89       	ldd	r24, Y+23	; 0x17
    1222:	98 8d       	ldd	r25, Y+24	; 0x18
    1224:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1228:	dc 01       	movw	r26, r24
    122a:	cb 01       	movw	r24, r22
    122c:	9c 8b       	std	Y+20, r25	; 0x14
    122e:	8b 8b       	std	Y+19, r24	; 0x13
    1230:	8b 89       	ldd	r24, Y+19	; 0x13
    1232:	9c 89       	ldd	r25, Y+20	; 0x14
    1234:	98 8b       	std	Y+16, r25	; 0x10
    1236:	8f 87       	std	Y+15, r24	; 0x0f
    1238:	8f 85       	ldd	r24, Y+15	; 0x0f
    123a:	98 89       	ldd	r25, Y+16	; 0x10
    123c:	01 97       	sbiw	r24, 0x01	; 1
    123e:	f1 f7       	brne	.-4      	; 0x123c <MODE_1+0xfe>
    1240:	98 8b       	std	Y+16, r25	; 0x10
    1242:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);
	REG_CLR(PORTA);
    1244:	eb e3       	ldi	r30, 0x3B	; 59
    1246:	f0 e0       	ldi	r31, 0x00	; 0
    1248:	80 81       	ld	r24, Z
    124a:	eb e3       	ldi	r30, 0x3B	; 59
    124c:	f0 e0       	ldi	r31, 0x00	; 0
    124e:	10 82       	st	Z, r1
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	aa ef       	ldi	r26, 0xFA	; 250
    1256:	b3 e4       	ldi	r27, 0x43	; 67
    1258:	8b 87       	std	Y+11, r24	; 0x0b
    125a:	9c 87       	std	Y+12, r25	; 0x0c
    125c:	ad 87       	std	Y+13, r26	; 0x0d
    125e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1260:	6b 85       	ldd	r22, Y+11	; 0x0b
    1262:	7c 85       	ldd	r23, Y+12	; 0x0c
    1264:	8d 85       	ldd	r24, Y+13	; 0x0d
    1266:	9e 85       	ldd	r25, Y+14	; 0x0e
    1268:	20 e0       	ldi	r18, 0x00	; 0
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	4a ef       	ldi	r20, 0xFA	; 250
    126e:	54 e4       	ldi	r21, 0x44	; 68
    1270:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1274:	dc 01       	movw	r26, r24
    1276:	cb 01       	movw	r24, r22
    1278:	8f 83       	std	Y+7, r24	; 0x07
    127a:	98 87       	std	Y+8, r25	; 0x08
    127c:	a9 87       	std	Y+9, r26	; 0x09
    127e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1280:	6f 81       	ldd	r22, Y+7	; 0x07
    1282:	78 85       	ldd	r23, Y+8	; 0x08
    1284:	89 85       	ldd	r24, Y+9	; 0x09
    1286:	9a 85       	ldd	r25, Y+10	; 0x0a
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	40 e8       	ldi	r20, 0x80	; 128
    128e:	5f e3       	ldi	r21, 0x3F	; 63
    1290:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1294:	88 23       	and	r24, r24
    1296:	2c f4       	brge	.+10     	; 0x12a2 <MODE_1+0x164>
		__ticks = 1;
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	9e 83       	std	Y+6, r25	; 0x06
    129e:	8d 83       	std	Y+5, r24	; 0x05
    12a0:	3f c0       	rjmp	.+126    	; 0x1320 <MODE_1+0x1e2>
	else if (__tmp > 65535)
    12a2:	6f 81       	ldd	r22, Y+7	; 0x07
    12a4:	78 85       	ldd	r23, Y+8	; 0x08
    12a6:	89 85       	ldd	r24, Y+9	; 0x09
    12a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	3f ef       	ldi	r19, 0xFF	; 255
    12ae:	4f e7       	ldi	r20, 0x7F	; 127
    12b0:	57 e4       	ldi	r21, 0x47	; 71
    12b2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12b6:	18 16       	cp	r1, r24
    12b8:	4c f5       	brge	.+82     	; 0x130c <MODE_1+0x1ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    12bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    12be:	8d 85       	ldd	r24, Y+13	; 0x0d
    12c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	40 e2       	ldi	r20, 0x20	; 32
    12c8:	51 e4       	ldi	r21, 0x41	; 65
    12ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12ce:	dc 01       	movw	r26, r24
    12d0:	cb 01       	movw	r24, r22
    12d2:	bc 01       	movw	r22, r24
    12d4:	cd 01       	movw	r24, r26
    12d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12da:	dc 01       	movw	r26, r24
    12dc:	cb 01       	movw	r24, r22
    12de:	9e 83       	std	Y+6, r25	; 0x06
    12e0:	8d 83       	std	Y+5, r24	; 0x05
    12e2:	0f c0       	rjmp	.+30     	; 0x1302 <MODE_1+0x1c4>
    12e4:	88 ec       	ldi	r24, 0xC8	; 200
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	9c 83       	std	Y+4, r25	; 0x04
    12ea:	8b 83       	std	Y+3, r24	; 0x03
    12ec:	8b 81       	ldd	r24, Y+3	; 0x03
    12ee:	9c 81       	ldd	r25, Y+4	; 0x04
    12f0:	01 97       	sbiw	r24, 0x01	; 1
    12f2:	f1 f7       	brne	.-4      	; 0x12f0 <MODE_1+0x1b2>
    12f4:	9c 83       	std	Y+4, r25	; 0x04
    12f6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12f8:	8d 81       	ldd	r24, Y+5	; 0x05
    12fa:	9e 81       	ldd	r25, Y+6	; 0x06
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	9e 83       	std	Y+6, r25	; 0x06
    1300:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1302:	8d 81       	ldd	r24, Y+5	; 0x05
    1304:	9e 81       	ldd	r25, Y+6	; 0x06
    1306:	00 97       	sbiw	r24, 0x00	; 0
    1308:	69 f7       	brne	.-38     	; 0x12e4 <MODE_1+0x1a6>
    130a:	14 c0       	rjmp	.+40     	; 0x1334 <MODE_1+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    130c:	6f 81       	ldd	r22, Y+7	; 0x07
    130e:	78 85       	ldd	r23, Y+8	; 0x08
    1310:	89 85       	ldd	r24, Y+9	; 0x09
    1312:	9a 85       	ldd	r25, Y+10	; 0x0a
    1314:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1318:	dc 01       	movw	r26, r24
    131a:	cb 01       	movw	r24, r22
    131c:	9e 83       	std	Y+6, r25	; 0x06
    131e:	8d 83       	std	Y+5, r24	; 0x05
    1320:	8d 81       	ldd	r24, Y+5	; 0x05
    1322:	9e 81       	ldd	r25, Y+6	; 0x06
    1324:	9a 83       	std	Y+2, r25	; 0x02
    1326:	89 83       	std	Y+1, r24	; 0x01
    1328:	89 81       	ldd	r24, Y+1	; 0x01
    132a:	9a 81       	ldd	r25, Y+2	; 0x02
    132c:	01 97       	sbiw	r24, 0x01	; 1
    132e:	f1 f7       	brne	.-4      	; 0x132c <MODE_1+0x1ee>
    1330:	9a 83       	std	Y+2, r25	; 0x02
    1332:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
}/** @end MODE_1 */
    1334:	6e 96       	adiw	r28, 0x1e	; 30
    1336:	0f b6       	in	r0, 0x3f	; 63
    1338:	f8 94       	cli
    133a:	de bf       	out	0x3e, r29	; 62
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	cd bf       	out	0x3d, r28	; 61
    1340:	cf 91       	pop	r28
    1342:	df 91       	pop	r29
    1344:	08 95       	ret

00001346 <MODE_2>:
/**
 * @brief function to implement mode 2
 */
static void MODE_2(void)
{
    1346:	0f 93       	push	r16
    1348:	1f 93       	push	r17
    134a:	df 93       	push	r29
    134c:	cf 93       	push	r28
    134e:	cd b7       	in	r28, 0x3d	; 61
    1350:	de b7       	in	r29, 0x3e	; 62
    1352:	ce 57       	subi	r28, 0x7E	; 126
    1354:	d0 40       	sbci	r29, 0x00	; 0
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	f8 94       	cli
    135a:	de bf       	out	0x3e, r29	; 62
    135c:	0f be       	out	0x3f, r0	; 63
    135e:	cd bf       	out	0x3d, r28	; 61
    1360:	fe 01       	movw	r30, r28
    1362:	e5 58       	subi	r30, 0x85	; 133
    1364:	ff 4f       	sbci	r31, 0xFF	; 255
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	a8 e4       	ldi	r26, 0x48	; 72
    136c:	b2 e4       	ldi	r27, 0x42	; 66
    136e:	80 83       	st	Z, r24
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	a2 83       	std	Z+2, r26	; 0x02
    1374:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1376:	8e 01       	movw	r16, r28
    1378:	09 58       	subi	r16, 0x89	; 137
    137a:	1f 4f       	sbci	r17, 0xFF	; 255
    137c:	fe 01       	movw	r30, r28
    137e:	e5 58       	subi	r30, 0x85	; 133
    1380:	ff 4f       	sbci	r31, 0xFF	; 255
    1382:	60 81       	ld	r22, Z
    1384:	71 81       	ldd	r23, Z+1	; 0x01
    1386:	82 81       	ldd	r24, Z+2	; 0x02
    1388:	93 81       	ldd	r25, Z+3	; 0x03
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	4a ef       	ldi	r20, 0xFA	; 250
    1390:	54 e4       	ldi	r21, 0x44	; 68
    1392:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1396:	dc 01       	movw	r26, r24
    1398:	cb 01       	movw	r24, r22
    139a:	f8 01       	movw	r30, r16
    139c:	80 83       	st	Z, r24
    139e:	91 83       	std	Z+1, r25	; 0x01
    13a0:	a2 83       	std	Z+2, r26	; 0x02
    13a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13a4:	fe 01       	movw	r30, r28
    13a6:	e9 58       	subi	r30, 0x89	; 137
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	60 81       	ld	r22, Z
    13ac:	71 81       	ldd	r23, Z+1	; 0x01
    13ae:	82 81       	ldd	r24, Z+2	; 0x02
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	20 e0       	ldi	r18, 0x00	; 0
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	40 e8       	ldi	r20, 0x80	; 128
    13b8:	5f e3       	ldi	r21, 0x3F	; 63
    13ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13be:	88 23       	and	r24, r24
    13c0:	44 f4       	brge	.+16     	; 0x13d2 <MODE_2+0x8c>
		__ticks = 1;
    13c2:	fe 01       	movw	r30, r28
    13c4:	eb 58       	subi	r30, 0x8B	; 139
    13c6:	ff 4f       	sbci	r31, 0xFF	; 255
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	91 83       	std	Z+1, r25	; 0x01
    13ce:	80 83       	st	Z, r24
    13d0:	64 c0       	rjmp	.+200    	; 0x149a <MODE_2+0x154>
	else if (__tmp > 65535)
    13d2:	fe 01       	movw	r30, r28
    13d4:	e9 58       	subi	r30, 0x89	; 137
    13d6:	ff 4f       	sbci	r31, 0xFF	; 255
    13d8:	60 81       	ld	r22, Z
    13da:	71 81       	ldd	r23, Z+1	; 0x01
    13dc:	82 81       	ldd	r24, Z+2	; 0x02
    13de:	93 81       	ldd	r25, Z+3	; 0x03
    13e0:	20 e0       	ldi	r18, 0x00	; 0
    13e2:	3f ef       	ldi	r19, 0xFF	; 255
    13e4:	4f e7       	ldi	r20, 0x7F	; 127
    13e6:	57 e4       	ldi	r21, 0x47	; 71
    13e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13ec:	18 16       	cp	r1, r24
    13ee:	0c f0       	brlt	.+2      	; 0x13f2 <MODE_2+0xac>
    13f0:	43 c0       	rjmp	.+134    	; 0x1478 <MODE_2+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f2:	fe 01       	movw	r30, r28
    13f4:	e5 58       	subi	r30, 0x85	; 133
    13f6:	ff 4f       	sbci	r31, 0xFF	; 255
    13f8:	60 81       	ld	r22, Z
    13fa:	71 81       	ldd	r23, Z+1	; 0x01
    13fc:	82 81       	ldd	r24, Z+2	; 0x02
    13fe:	93 81       	ldd	r25, Z+3	; 0x03
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	40 e2       	ldi	r20, 0x20	; 32
    1406:	51 e4       	ldi	r21, 0x41	; 65
    1408:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	8e 01       	movw	r16, r28
    1412:	0b 58       	subi	r16, 0x8B	; 139
    1414:	1f 4f       	sbci	r17, 0xFF	; 255
    1416:	bc 01       	movw	r22, r24
    1418:	cd 01       	movw	r24, r26
    141a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	f8 01       	movw	r30, r16
    1424:	91 83       	std	Z+1, r25	; 0x01
    1426:	80 83       	st	Z, r24
    1428:	1f c0       	rjmp	.+62     	; 0x1468 <MODE_2+0x122>
    142a:	fe 01       	movw	r30, r28
    142c:	ed 58       	subi	r30, 0x8D	; 141
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	88 ec       	ldi	r24, 0xC8	; 200
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	91 83       	std	Z+1, r25	; 0x01
    1436:	80 83       	st	Z, r24
    1438:	fe 01       	movw	r30, r28
    143a:	ed 58       	subi	r30, 0x8D	; 141
    143c:	ff 4f       	sbci	r31, 0xFF	; 255
    143e:	80 81       	ld	r24, Z
    1440:	91 81       	ldd	r25, Z+1	; 0x01
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	f1 f7       	brne	.-4      	; 0x1442 <MODE_2+0xfc>
    1446:	fe 01       	movw	r30, r28
    1448:	ed 58       	subi	r30, 0x8D	; 141
    144a:	ff 4f       	sbci	r31, 0xFF	; 255
    144c:	91 83       	std	Z+1, r25	; 0x01
    144e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1450:	de 01       	movw	r26, r28
    1452:	ab 58       	subi	r26, 0x8B	; 139
    1454:	bf 4f       	sbci	r27, 0xFF	; 255
    1456:	fe 01       	movw	r30, r28
    1458:	eb 58       	subi	r30, 0x8B	; 139
    145a:	ff 4f       	sbci	r31, 0xFF	; 255
    145c:	80 81       	ld	r24, Z
    145e:	91 81       	ldd	r25, Z+1	; 0x01
    1460:	01 97       	sbiw	r24, 0x01	; 1
    1462:	11 96       	adiw	r26, 0x01	; 1
    1464:	9c 93       	st	X, r25
    1466:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1468:	fe 01       	movw	r30, r28
    146a:	eb 58       	subi	r30, 0x8B	; 139
    146c:	ff 4f       	sbci	r31, 0xFF	; 255
    146e:	80 81       	ld	r24, Z
    1470:	91 81       	ldd	r25, Z+1	; 0x01
    1472:	00 97       	sbiw	r24, 0x00	; 0
    1474:	d1 f6       	brne	.-76     	; 0x142a <MODE_2+0xe4>
    1476:	27 c0       	rjmp	.+78     	; 0x14c6 <MODE_2+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1478:	8e 01       	movw	r16, r28
    147a:	0b 58       	subi	r16, 0x8B	; 139
    147c:	1f 4f       	sbci	r17, 0xFF	; 255
    147e:	fe 01       	movw	r30, r28
    1480:	e9 58       	subi	r30, 0x89	; 137
    1482:	ff 4f       	sbci	r31, 0xFF	; 255
    1484:	60 81       	ld	r22, Z
    1486:	71 81       	ldd	r23, Z+1	; 0x01
    1488:	82 81       	ldd	r24, Z+2	; 0x02
    148a:	93 81       	ldd	r25, Z+3	; 0x03
    148c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1490:	dc 01       	movw	r26, r24
    1492:	cb 01       	movw	r24, r22
    1494:	f8 01       	movw	r30, r16
    1496:	91 83       	std	Z+1, r25	; 0x01
    1498:	80 83       	st	Z, r24
    149a:	de 01       	movw	r26, r28
    149c:	af 58       	subi	r26, 0x8F	; 143
    149e:	bf 4f       	sbci	r27, 0xFF	; 255
    14a0:	fe 01       	movw	r30, r28
    14a2:	eb 58       	subi	r30, 0x8B	; 139
    14a4:	ff 4f       	sbci	r31, 0xFF	; 255
    14a6:	80 81       	ld	r24, Z
    14a8:	91 81       	ldd	r25, Z+1	; 0x01
    14aa:	8d 93       	st	X+, r24
    14ac:	9c 93       	st	X, r25
    14ae:	fe 01       	movw	r30, r28
    14b0:	ef 58       	subi	r30, 0x8F	; 143
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	80 81       	ld	r24, Z
    14b6:	91 81       	ldd	r25, Z+1	; 0x01
    14b8:	01 97       	sbiw	r24, 0x01	; 1
    14ba:	f1 f7       	brne	.-4      	; 0x14b8 <MODE_2+0x172>
    14bc:	fe 01       	movw	r30, r28
    14be:	ef 58       	subi	r30, 0x8F	; 143
    14c0:	ff 4f       	sbci	r31, 0xFF	; 255
    14c2:	91 83       	std	Z+1, r25	; 0x01
    14c4:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED8, OFF);
    14c6:	87 e0       	ldi	r24, 0x07	; 7
    14c8:	60 e0       	ldi	r22, 0x00	; 0
    14ca:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED1, ON);
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	61 e0       	ldi	r22, 0x01	; 1
    14d2:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    14d6:	fe 01       	movw	r30, r28
    14d8:	e3 59       	subi	r30, 0x93	; 147
    14da:	ff 4f       	sbci	r31, 0xFF	; 255
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	a8 e4       	ldi	r26, 0x48	; 72
    14e2:	b2 e4       	ldi	r27, 0x42	; 66
    14e4:	80 83       	st	Z, r24
    14e6:	91 83       	std	Z+1, r25	; 0x01
    14e8:	a2 83       	std	Z+2, r26	; 0x02
    14ea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14ec:	8e 01       	movw	r16, r28
    14ee:	07 59       	subi	r16, 0x97	; 151
    14f0:	1f 4f       	sbci	r17, 0xFF	; 255
    14f2:	fe 01       	movw	r30, r28
    14f4:	e3 59       	subi	r30, 0x93	; 147
    14f6:	ff 4f       	sbci	r31, 0xFF	; 255
    14f8:	60 81       	ld	r22, Z
    14fa:	71 81       	ldd	r23, Z+1	; 0x01
    14fc:	82 81       	ldd	r24, Z+2	; 0x02
    14fe:	93 81       	ldd	r25, Z+3	; 0x03
    1500:	20 e0       	ldi	r18, 0x00	; 0
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	4a ef       	ldi	r20, 0xFA	; 250
    1506:	54 e4       	ldi	r21, 0x44	; 68
    1508:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    150c:	dc 01       	movw	r26, r24
    150e:	cb 01       	movw	r24, r22
    1510:	f8 01       	movw	r30, r16
    1512:	80 83       	st	Z, r24
    1514:	91 83       	std	Z+1, r25	; 0x01
    1516:	a2 83       	std	Z+2, r26	; 0x02
    1518:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    151a:	fe 01       	movw	r30, r28
    151c:	e7 59       	subi	r30, 0x97	; 151
    151e:	ff 4f       	sbci	r31, 0xFF	; 255
    1520:	60 81       	ld	r22, Z
    1522:	71 81       	ldd	r23, Z+1	; 0x01
    1524:	82 81       	ldd	r24, Z+2	; 0x02
    1526:	93 81       	ldd	r25, Z+3	; 0x03
    1528:	20 e0       	ldi	r18, 0x00	; 0
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	40 e8       	ldi	r20, 0x80	; 128
    152e:	5f e3       	ldi	r21, 0x3F	; 63
    1530:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1534:	88 23       	and	r24, r24
    1536:	44 f4       	brge	.+16     	; 0x1548 <MODE_2+0x202>
		__ticks = 1;
    1538:	fe 01       	movw	r30, r28
    153a:	e9 59       	subi	r30, 0x99	; 153
    153c:	ff 4f       	sbci	r31, 0xFF	; 255
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	91 83       	std	Z+1, r25	; 0x01
    1544:	80 83       	st	Z, r24
    1546:	64 c0       	rjmp	.+200    	; 0x1610 <MODE_2+0x2ca>
	else if (__tmp > 65535)
    1548:	fe 01       	movw	r30, r28
    154a:	e7 59       	subi	r30, 0x97	; 151
    154c:	ff 4f       	sbci	r31, 0xFF	; 255
    154e:	60 81       	ld	r22, Z
    1550:	71 81       	ldd	r23, Z+1	; 0x01
    1552:	82 81       	ldd	r24, Z+2	; 0x02
    1554:	93 81       	ldd	r25, Z+3	; 0x03
    1556:	20 e0       	ldi	r18, 0x00	; 0
    1558:	3f ef       	ldi	r19, 0xFF	; 255
    155a:	4f e7       	ldi	r20, 0x7F	; 127
    155c:	57 e4       	ldi	r21, 0x47	; 71
    155e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1562:	18 16       	cp	r1, r24
    1564:	0c f0       	brlt	.+2      	; 0x1568 <MODE_2+0x222>
    1566:	43 c0       	rjmp	.+134    	; 0x15ee <MODE_2+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1568:	fe 01       	movw	r30, r28
    156a:	e3 59       	subi	r30, 0x93	; 147
    156c:	ff 4f       	sbci	r31, 0xFF	; 255
    156e:	60 81       	ld	r22, Z
    1570:	71 81       	ldd	r23, Z+1	; 0x01
    1572:	82 81       	ldd	r24, Z+2	; 0x02
    1574:	93 81       	ldd	r25, Z+3	; 0x03
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	40 e2       	ldi	r20, 0x20	; 32
    157c:	51 e4       	ldi	r21, 0x41	; 65
    157e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1582:	dc 01       	movw	r26, r24
    1584:	cb 01       	movw	r24, r22
    1586:	8e 01       	movw	r16, r28
    1588:	09 59       	subi	r16, 0x99	; 153
    158a:	1f 4f       	sbci	r17, 0xFF	; 255
    158c:	bc 01       	movw	r22, r24
    158e:	cd 01       	movw	r24, r26
    1590:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1594:	dc 01       	movw	r26, r24
    1596:	cb 01       	movw	r24, r22
    1598:	f8 01       	movw	r30, r16
    159a:	91 83       	std	Z+1, r25	; 0x01
    159c:	80 83       	st	Z, r24
    159e:	1f c0       	rjmp	.+62     	; 0x15de <MODE_2+0x298>
    15a0:	fe 01       	movw	r30, r28
    15a2:	eb 59       	subi	r30, 0x9B	; 155
    15a4:	ff 4f       	sbci	r31, 0xFF	; 255
    15a6:	88 ec       	ldi	r24, 0xC8	; 200
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	91 83       	std	Z+1, r25	; 0x01
    15ac:	80 83       	st	Z, r24
    15ae:	fe 01       	movw	r30, r28
    15b0:	eb 59       	subi	r30, 0x9B	; 155
    15b2:	ff 4f       	sbci	r31, 0xFF	; 255
    15b4:	80 81       	ld	r24, Z
    15b6:	91 81       	ldd	r25, Z+1	; 0x01
    15b8:	01 97       	sbiw	r24, 0x01	; 1
    15ba:	f1 f7       	brne	.-4      	; 0x15b8 <MODE_2+0x272>
    15bc:	fe 01       	movw	r30, r28
    15be:	eb 59       	subi	r30, 0x9B	; 155
    15c0:	ff 4f       	sbci	r31, 0xFF	; 255
    15c2:	91 83       	std	Z+1, r25	; 0x01
    15c4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15c6:	de 01       	movw	r26, r28
    15c8:	a9 59       	subi	r26, 0x99	; 153
    15ca:	bf 4f       	sbci	r27, 0xFF	; 255
    15cc:	fe 01       	movw	r30, r28
    15ce:	e9 59       	subi	r30, 0x99	; 153
    15d0:	ff 4f       	sbci	r31, 0xFF	; 255
    15d2:	80 81       	ld	r24, Z
    15d4:	91 81       	ldd	r25, Z+1	; 0x01
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	11 96       	adiw	r26, 0x01	; 1
    15da:	9c 93       	st	X, r25
    15dc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15de:	fe 01       	movw	r30, r28
    15e0:	e9 59       	subi	r30, 0x99	; 153
    15e2:	ff 4f       	sbci	r31, 0xFF	; 255
    15e4:	80 81       	ld	r24, Z
    15e6:	91 81       	ldd	r25, Z+1	; 0x01
    15e8:	00 97       	sbiw	r24, 0x00	; 0
    15ea:	d1 f6       	brne	.-76     	; 0x15a0 <MODE_2+0x25a>
    15ec:	27 c0       	rjmp	.+78     	; 0x163c <MODE_2+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15ee:	8e 01       	movw	r16, r28
    15f0:	09 59       	subi	r16, 0x99	; 153
    15f2:	1f 4f       	sbci	r17, 0xFF	; 255
    15f4:	fe 01       	movw	r30, r28
    15f6:	e7 59       	subi	r30, 0x97	; 151
    15f8:	ff 4f       	sbci	r31, 0xFF	; 255
    15fa:	60 81       	ld	r22, Z
    15fc:	71 81       	ldd	r23, Z+1	; 0x01
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
    1600:	93 81       	ldd	r25, Z+3	; 0x03
    1602:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1606:	dc 01       	movw	r26, r24
    1608:	cb 01       	movw	r24, r22
    160a:	f8 01       	movw	r30, r16
    160c:	91 83       	std	Z+1, r25	; 0x01
    160e:	80 83       	st	Z, r24
    1610:	de 01       	movw	r26, r28
    1612:	ad 59       	subi	r26, 0x9D	; 157
    1614:	bf 4f       	sbci	r27, 0xFF	; 255
    1616:	fe 01       	movw	r30, r28
    1618:	e9 59       	subi	r30, 0x99	; 153
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	80 81       	ld	r24, Z
    161e:	91 81       	ldd	r25, Z+1	; 0x01
    1620:	8d 93       	st	X+, r24
    1622:	9c 93       	st	X, r25
    1624:	fe 01       	movw	r30, r28
    1626:	ed 59       	subi	r30, 0x9D	; 157
    1628:	ff 4f       	sbci	r31, 0xFF	; 255
    162a:	80 81       	ld	r24, Z
    162c:	91 81       	ldd	r25, Z+1	; 0x01
    162e:	01 97       	sbiw	r24, 0x01	; 1
    1630:	f1 f7       	brne	.-4      	; 0x162e <MODE_2+0x2e8>
    1632:	fe 01       	movw	r30, r28
    1634:	ed 59       	subi	r30, 0x9D	; 157
    1636:	ff 4f       	sbci	r31, 0xFF	; 255
    1638:	91 83       	std	Z+1, r25	; 0x01
    163a:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED1, OFF);
    163c:	80 e0       	ldi	r24, 0x00	; 0
    163e:	60 e0       	ldi	r22, 0x00	; 0
    1640:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED2, ON);
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	61 e0       	ldi	r22, 0x01	; 1
    1648:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    164c:	fe 01       	movw	r30, r28
    164e:	e1 5a       	subi	r30, 0xA1	; 161
    1650:	ff 4f       	sbci	r31, 0xFF	; 255
    1652:	80 e0       	ldi	r24, 0x00	; 0
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	a8 e4       	ldi	r26, 0x48	; 72
    1658:	b2 e4       	ldi	r27, 0x42	; 66
    165a:	80 83       	st	Z, r24
    165c:	91 83       	std	Z+1, r25	; 0x01
    165e:	a2 83       	std	Z+2, r26	; 0x02
    1660:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1662:	8e 01       	movw	r16, r28
    1664:	05 5a       	subi	r16, 0xA5	; 165
    1666:	1f 4f       	sbci	r17, 0xFF	; 255
    1668:	fe 01       	movw	r30, r28
    166a:	e1 5a       	subi	r30, 0xA1	; 161
    166c:	ff 4f       	sbci	r31, 0xFF	; 255
    166e:	60 81       	ld	r22, Z
    1670:	71 81       	ldd	r23, Z+1	; 0x01
    1672:	82 81       	ldd	r24, Z+2	; 0x02
    1674:	93 81       	ldd	r25, Z+3	; 0x03
    1676:	20 e0       	ldi	r18, 0x00	; 0
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	4a ef       	ldi	r20, 0xFA	; 250
    167c:	54 e4       	ldi	r21, 0x44	; 68
    167e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1682:	dc 01       	movw	r26, r24
    1684:	cb 01       	movw	r24, r22
    1686:	f8 01       	movw	r30, r16
    1688:	80 83       	st	Z, r24
    168a:	91 83       	std	Z+1, r25	; 0x01
    168c:	a2 83       	std	Z+2, r26	; 0x02
    168e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1690:	fe 01       	movw	r30, r28
    1692:	e5 5a       	subi	r30, 0xA5	; 165
    1694:	ff 4f       	sbci	r31, 0xFF	; 255
    1696:	60 81       	ld	r22, Z
    1698:	71 81       	ldd	r23, Z+1	; 0x01
    169a:	82 81       	ldd	r24, Z+2	; 0x02
    169c:	93 81       	ldd	r25, Z+3	; 0x03
    169e:	20 e0       	ldi	r18, 0x00	; 0
    16a0:	30 e0       	ldi	r19, 0x00	; 0
    16a2:	40 e8       	ldi	r20, 0x80	; 128
    16a4:	5f e3       	ldi	r21, 0x3F	; 63
    16a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16aa:	88 23       	and	r24, r24
    16ac:	44 f4       	brge	.+16     	; 0x16be <MODE_2+0x378>
		__ticks = 1;
    16ae:	fe 01       	movw	r30, r28
    16b0:	e7 5a       	subi	r30, 0xA7	; 167
    16b2:	ff 4f       	sbci	r31, 0xFF	; 255
    16b4:	81 e0       	ldi	r24, 0x01	; 1
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	91 83       	std	Z+1, r25	; 0x01
    16ba:	80 83       	st	Z, r24
    16bc:	64 c0       	rjmp	.+200    	; 0x1786 <MODE_2+0x440>
	else if (__tmp > 65535)
    16be:	fe 01       	movw	r30, r28
    16c0:	e5 5a       	subi	r30, 0xA5	; 165
    16c2:	ff 4f       	sbci	r31, 0xFF	; 255
    16c4:	60 81       	ld	r22, Z
    16c6:	71 81       	ldd	r23, Z+1	; 0x01
    16c8:	82 81       	ldd	r24, Z+2	; 0x02
    16ca:	93 81       	ldd	r25, Z+3	; 0x03
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	3f ef       	ldi	r19, 0xFF	; 255
    16d0:	4f e7       	ldi	r20, 0x7F	; 127
    16d2:	57 e4       	ldi	r21, 0x47	; 71
    16d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16d8:	18 16       	cp	r1, r24
    16da:	0c f0       	brlt	.+2      	; 0x16de <MODE_2+0x398>
    16dc:	43 c0       	rjmp	.+134    	; 0x1764 <MODE_2+0x41e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16de:	fe 01       	movw	r30, r28
    16e0:	e1 5a       	subi	r30, 0xA1	; 161
    16e2:	ff 4f       	sbci	r31, 0xFF	; 255
    16e4:	60 81       	ld	r22, Z
    16e6:	71 81       	ldd	r23, Z+1	; 0x01
    16e8:	82 81       	ldd	r24, Z+2	; 0x02
    16ea:	93 81       	ldd	r25, Z+3	; 0x03
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	40 e2       	ldi	r20, 0x20	; 32
    16f2:	51 e4       	ldi	r21, 0x41	; 65
    16f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16f8:	dc 01       	movw	r26, r24
    16fa:	cb 01       	movw	r24, r22
    16fc:	8e 01       	movw	r16, r28
    16fe:	07 5a       	subi	r16, 0xA7	; 167
    1700:	1f 4f       	sbci	r17, 0xFF	; 255
    1702:	bc 01       	movw	r22, r24
    1704:	cd 01       	movw	r24, r26
    1706:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	f8 01       	movw	r30, r16
    1710:	91 83       	std	Z+1, r25	; 0x01
    1712:	80 83       	st	Z, r24
    1714:	1f c0       	rjmp	.+62     	; 0x1754 <MODE_2+0x40e>
    1716:	fe 01       	movw	r30, r28
    1718:	e9 5a       	subi	r30, 0xA9	; 169
    171a:	ff 4f       	sbci	r31, 0xFF	; 255
    171c:	88 ec       	ldi	r24, 0xC8	; 200
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	91 83       	std	Z+1, r25	; 0x01
    1722:	80 83       	st	Z, r24
    1724:	fe 01       	movw	r30, r28
    1726:	e9 5a       	subi	r30, 0xA9	; 169
    1728:	ff 4f       	sbci	r31, 0xFF	; 255
    172a:	80 81       	ld	r24, Z
    172c:	91 81       	ldd	r25, Z+1	; 0x01
    172e:	01 97       	sbiw	r24, 0x01	; 1
    1730:	f1 f7       	brne	.-4      	; 0x172e <MODE_2+0x3e8>
    1732:	fe 01       	movw	r30, r28
    1734:	e9 5a       	subi	r30, 0xA9	; 169
    1736:	ff 4f       	sbci	r31, 0xFF	; 255
    1738:	91 83       	std	Z+1, r25	; 0x01
    173a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    173c:	de 01       	movw	r26, r28
    173e:	a7 5a       	subi	r26, 0xA7	; 167
    1740:	bf 4f       	sbci	r27, 0xFF	; 255
    1742:	fe 01       	movw	r30, r28
    1744:	e7 5a       	subi	r30, 0xA7	; 167
    1746:	ff 4f       	sbci	r31, 0xFF	; 255
    1748:	80 81       	ld	r24, Z
    174a:	91 81       	ldd	r25, Z+1	; 0x01
    174c:	01 97       	sbiw	r24, 0x01	; 1
    174e:	11 96       	adiw	r26, 0x01	; 1
    1750:	9c 93       	st	X, r25
    1752:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1754:	fe 01       	movw	r30, r28
    1756:	e7 5a       	subi	r30, 0xA7	; 167
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	80 81       	ld	r24, Z
    175c:	91 81       	ldd	r25, Z+1	; 0x01
    175e:	00 97       	sbiw	r24, 0x00	; 0
    1760:	d1 f6       	brne	.-76     	; 0x1716 <MODE_2+0x3d0>
    1762:	27 c0       	rjmp	.+78     	; 0x17b2 <MODE_2+0x46c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1764:	8e 01       	movw	r16, r28
    1766:	07 5a       	subi	r16, 0xA7	; 167
    1768:	1f 4f       	sbci	r17, 0xFF	; 255
    176a:	fe 01       	movw	r30, r28
    176c:	e5 5a       	subi	r30, 0xA5	; 165
    176e:	ff 4f       	sbci	r31, 0xFF	; 255
    1770:	60 81       	ld	r22, Z
    1772:	71 81       	ldd	r23, Z+1	; 0x01
    1774:	82 81       	ldd	r24, Z+2	; 0x02
    1776:	93 81       	ldd	r25, Z+3	; 0x03
    1778:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	f8 01       	movw	r30, r16
    1782:	91 83       	std	Z+1, r25	; 0x01
    1784:	80 83       	st	Z, r24
    1786:	de 01       	movw	r26, r28
    1788:	ab 5a       	subi	r26, 0xAB	; 171
    178a:	bf 4f       	sbci	r27, 0xFF	; 255
    178c:	fe 01       	movw	r30, r28
    178e:	e7 5a       	subi	r30, 0xA7	; 167
    1790:	ff 4f       	sbci	r31, 0xFF	; 255
    1792:	80 81       	ld	r24, Z
    1794:	91 81       	ldd	r25, Z+1	; 0x01
    1796:	8d 93       	st	X+, r24
    1798:	9c 93       	st	X, r25
    179a:	fe 01       	movw	r30, r28
    179c:	eb 5a       	subi	r30, 0xAB	; 171
    179e:	ff 4f       	sbci	r31, 0xFF	; 255
    17a0:	80 81       	ld	r24, Z
    17a2:	91 81       	ldd	r25, Z+1	; 0x01
    17a4:	01 97       	sbiw	r24, 0x01	; 1
    17a6:	f1 f7       	brne	.-4      	; 0x17a4 <MODE_2+0x45e>
    17a8:	fe 01       	movw	r30, r28
    17aa:	eb 5a       	subi	r30, 0xAB	; 171
    17ac:	ff 4f       	sbci	r31, 0xFF	; 255
    17ae:	91 83       	std	Z+1, r25	; 0x01
    17b0:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED2, OFF);
    17b2:	81 e0       	ldi	r24, 0x01	; 1
    17b4:	60 e0       	ldi	r22, 0x00	; 0
    17b6:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED3, ON);
    17ba:	82 e0       	ldi	r24, 0x02	; 2
    17bc:	61 e0       	ldi	r22, 0x01	; 1
    17be:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    17c2:	fe 01       	movw	r30, r28
    17c4:	ef 5a       	subi	r30, 0xAF	; 175
    17c6:	ff 4f       	sbci	r31, 0xFF	; 255
    17c8:	80 e0       	ldi	r24, 0x00	; 0
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	a8 e4       	ldi	r26, 0x48	; 72
    17ce:	b2 e4       	ldi	r27, 0x42	; 66
    17d0:	80 83       	st	Z, r24
    17d2:	91 83       	std	Z+1, r25	; 0x01
    17d4:	a2 83       	std	Z+2, r26	; 0x02
    17d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17d8:	8e 01       	movw	r16, r28
    17da:	03 5b       	subi	r16, 0xB3	; 179
    17dc:	1f 4f       	sbci	r17, 0xFF	; 255
    17de:	fe 01       	movw	r30, r28
    17e0:	ef 5a       	subi	r30, 0xAF	; 175
    17e2:	ff 4f       	sbci	r31, 0xFF	; 255
    17e4:	60 81       	ld	r22, Z
    17e6:	71 81       	ldd	r23, Z+1	; 0x01
    17e8:	82 81       	ldd	r24, Z+2	; 0x02
    17ea:	93 81       	ldd	r25, Z+3	; 0x03
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	4a ef       	ldi	r20, 0xFA	; 250
    17f2:	54 e4       	ldi	r21, 0x44	; 68
    17f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	f8 01       	movw	r30, r16
    17fe:	80 83       	st	Z, r24
    1800:	91 83       	std	Z+1, r25	; 0x01
    1802:	a2 83       	std	Z+2, r26	; 0x02
    1804:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1806:	fe 01       	movw	r30, r28
    1808:	e3 5b       	subi	r30, 0xB3	; 179
    180a:	ff 4f       	sbci	r31, 0xFF	; 255
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	82 81       	ldd	r24, Z+2	; 0x02
    1812:	93 81       	ldd	r25, Z+3	; 0x03
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	40 e8       	ldi	r20, 0x80	; 128
    181a:	5f e3       	ldi	r21, 0x3F	; 63
    181c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1820:	88 23       	and	r24, r24
    1822:	44 f4       	brge	.+16     	; 0x1834 <MODE_2+0x4ee>
		__ticks = 1;
    1824:	fe 01       	movw	r30, r28
    1826:	e5 5b       	subi	r30, 0xB5	; 181
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	91 83       	std	Z+1, r25	; 0x01
    1830:	80 83       	st	Z, r24
    1832:	64 c0       	rjmp	.+200    	; 0x18fc <MODE_2+0x5b6>
	else if (__tmp > 65535)
    1834:	fe 01       	movw	r30, r28
    1836:	e3 5b       	subi	r30, 0xB3	; 179
    1838:	ff 4f       	sbci	r31, 0xFF	; 255
    183a:	60 81       	ld	r22, Z
    183c:	71 81       	ldd	r23, Z+1	; 0x01
    183e:	82 81       	ldd	r24, Z+2	; 0x02
    1840:	93 81       	ldd	r25, Z+3	; 0x03
    1842:	20 e0       	ldi	r18, 0x00	; 0
    1844:	3f ef       	ldi	r19, 0xFF	; 255
    1846:	4f e7       	ldi	r20, 0x7F	; 127
    1848:	57 e4       	ldi	r21, 0x47	; 71
    184a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    184e:	18 16       	cp	r1, r24
    1850:	0c f0       	brlt	.+2      	; 0x1854 <MODE_2+0x50e>
    1852:	43 c0       	rjmp	.+134    	; 0x18da <MODE_2+0x594>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1854:	fe 01       	movw	r30, r28
    1856:	ef 5a       	subi	r30, 0xAF	; 175
    1858:	ff 4f       	sbci	r31, 0xFF	; 255
    185a:	60 81       	ld	r22, Z
    185c:	71 81       	ldd	r23, Z+1	; 0x01
    185e:	82 81       	ldd	r24, Z+2	; 0x02
    1860:	93 81       	ldd	r25, Z+3	; 0x03
    1862:	20 e0       	ldi	r18, 0x00	; 0
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	40 e2       	ldi	r20, 0x20	; 32
    1868:	51 e4       	ldi	r21, 0x41	; 65
    186a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    186e:	dc 01       	movw	r26, r24
    1870:	cb 01       	movw	r24, r22
    1872:	8e 01       	movw	r16, r28
    1874:	05 5b       	subi	r16, 0xB5	; 181
    1876:	1f 4f       	sbci	r17, 0xFF	; 255
    1878:	bc 01       	movw	r22, r24
    187a:	cd 01       	movw	r24, r26
    187c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1880:	dc 01       	movw	r26, r24
    1882:	cb 01       	movw	r24, r22
    1884:	f8 01       	movw	r30, r16
    1886:	91 83       	std	Z+1, r25	; 0x01
    1888:	80 83       	st	Z, r24
    188a:	1f c0       	rjmp	.+62     	; 0x18ca <MODE_2+0x584>
    188c:	fe 01       	movw	r30, r28
    188e:	e7 5b       	subi	r30, 0xB7	; 183
    1890:	ff 4f       	sbci	r31, 0xFF	; 255
    1892:	88 ec       	ldi	r24, 0xC8	; 200
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	80 83       	st	Z, r24
    189a:	fe 01       	movw	r30, r28
    189c:	e7 5b       	subi	r30, 0xB7	; 183
    189e:	ff 4f       	sbci	r31, 0xFF	; 255
    18a0:	80 81       	ld	r24, Z
    18a2:	91 81       	ldd	r25, Z+1	; 0x01
    18a4:	01 97       	sbiw	r24, 0x01	; 1
    18a6:	f1 f7       	brne	.-4      	; 0x18a4 <MODE_2+0x55e>
    18a8:	fe 01       	movw	r30, r28
    18aa:	e7 5b       	subi	r30, 0xB7	; 183
    18ac:	ff 4f       	sbci	r31, 0xFF	; 255
    18ae:	91 83       	std	Z+1, r25	; 0x01
    18b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18b2:	de 01       	movw	r26, r28
    18b4:	a5 5b       	subi	r26, 0xB5	; 181
    18b6:	bf 4f       	sbci	r27, 0xFF	; 255
    18b8:	fe 01       	movw	r30, r28
    18ba:	e5 5b       	subi	r30, 0xB5	; 181
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	80 81       	ld	r24, Z
    18c0:	91 81       	ldd	r25, Z+1	; 0x01
    18c2:	01 97       	sbiw	r24, 0x01	; 1
    18c4:	11 96       	adiw	r26, 0x01	; 1
    18c6:	9c 93       	st	X, r25
    18c8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18ca:	fe 01       	movw	r30, r28
    18cc:	e5 5b       	subi	r30, 0xB5	; 181
    18ce:	ff 4f       	sbci	r31, 0xFF	; 255
    18d0:	80 81       	ld	r24, Z
    18d2:	91 81       	ldd	r25, Z+1	; 0x01
    18d4:	00 97       	sbiw	r24, 0x00	; 0
    18d6:	d1 f6       	brne	.-76     	; 0x188c <MODE_2+0x546>
    18d8:	27 c0       	rjmp	.+78     	; 0x1928 <MODE_2+0x5e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18da:	8e 01       	movw	r16, r28
    18dc:	05 5b       	subi	r16, 0xB5	; 181
    18de:	1f 4f       	sbci	r17, 0xFF	; 255
    18e0:	fe 01       	movw	r30, r28
    18e2:	e3 5b       	subi	r30, 0xB3	; 179
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18f2:	dc 01       	movw	r26, r24
    18f4:	cb 01       	movw	r24, r22
    18f6:	f8 01       	movw	r30, r16
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	80 83       	st	Z, r24
    18fc:	de 01       	movw	r26, r28
    18fe:	a9 5b       	subi	r26, 0xB9	; 185
    1900:	bf 4f       	sbci	r27, 0xFF	; 255
    1902:	fe 01       	movw	r30, r28
    1904:	e5 5b       	subi	r30, 0xB5	; 181
    1906:	ff 4f       	sbci	r31, 0xFF	; 255
    1908:	80 81       	ld	r24, Z
    190a:	91 81       	ldd	r25, Z+1	; 0x01
    190c:	8d 93       	st	X+, r24
    190e:	9c 93       	st	X, r25
    1910:	fe 01       	movw	r30, r28
    1912:	e9 5b       	subi	r30, 0xB9	; 185
    1914:	ff 4f       	sbci	r31, 0xFF	; 255
    1916:	80 81       	ld	r24, Z
    1918:	91 81       	ldd	r25, Z+1	; 0x01
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	f1 f7       	brne	.-4      	; 0x191a <MODE_2+0x5d4>
    191e:	fe 01       	movw	r30, r28
    1920:	e9 5b       	subi	r30, 0xB9	; 185
    1922:	ff 4f       	sbci	r31, 0xFF	; 255
    1924:	91 83       	std	Z+1, r25	; 0x01
    1926:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED3, OFF);
    1928:	82 e0       	ldi	r24, 0x02	; 2
    192a:	60 e0       	ldi	r22, 0x00	; 0
    192c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED4, ON);
    1930:	83 e0       	ldi	r24, 0x03	; 3
    1932:	61 e0       	ldi	r22, 0x01	; 1
    1934:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    1938:	fe 01       	movw	r30, r28
    193a:	ed 5b       	subi	r30, 0xBD	; 189
    193c:	ff 4f       	sbci	r31, 0xFF	; 255
    193e:	80 e0       	ldi	r24, 0x00	; 0
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	a8 e4       	ldi	r26, 0x48	; 72
    1944:	b2 e4       	ldi	r27, 0x42	; 66
    1946:	80 83       	st	Z, r24
    1948:	91 83       	std	Z+1, r25	; 0x01
    194a:	a2 83       	std	Z+2, r26	; 0x02
    194c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    194e:	8e 01       	movw	r16, r28
    1950:	01 5c       	subi	r16, 0xC1	; 193
    1952:	1f 4f       	sbci	r17, 0xFF	; 255
    1954:	fe 01       	movw	r30, r28
    1956:	ed 5b       	subi	r30, 0xBD	; 189
    1958:	ff 4f       	sbci	r31, 0xFF	; 255
    195a:	60 81       	ld	r22, Z
    195c:	71 81       	ldd	r23, Z+1	; 0x01
    195e:	82 81       	ldd	r24, Z+2	; 0x02
    1960:	93 81       	ldd	r25, Z+3	; 0x03
    1962:	20 e0       	ldi	r18, 0x00	; 0
    1964:	30 e0       	ldi	r19, 0x00	; 0
    1966:	4a ef       	ldi	r20, 0xFA	; 250
    1968:	54 e4       	ldi	r21, 0x44	; 68
    196a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    196e:	dc 01       	movw	r26, r24
    1970:	cb 01       	movw	r24, r22
    1972:	f8 01       	movw	r30, r16
    1974:	80 83       	st	Z, r24
    1976:	91 83       	std	Z+1, r25	; 0x01
    1978:	a2 83       	std	Z+2, r26	; 0x02
    197a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    197c:	fe 01       	movw	r30, r28
    197e:	ff 96       	adiw	r30, 0x3f	; 63
    1980:	60 81       	ld	r22, Z
    1982:	71 81       	ldd	r23, Z+1	; 0x01
    1984:	82 81       	ldd	r24, Z+2	; 0x02
    1986:	93 81       	ldd	r25, Z+3	; 0x03
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	40 e8       	ldi	r20, 0x80	; 128
    198e:	5f e3       	ldi	r21, 0x3F	; 63
    1990:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1994:	88 23       	and	r24, r24
    1996:	2c f4       	brge	.+10     	; 0x19a2 <MODE_2+0x65c>
		__ticks = 1;
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	9e af       	std	Y+62, r25	; 0x3e
    199e:	8d af       	std	Y+61, r24	; 0x3d
    19a0:	46 c0       	rjmp	.+140    	; 0x1a2e <MODE_2+0x6e8>
	else if (__tmp > 65535)
    19a2:	fe 01       	movw	r30, r28
    19a4:	ff 96       	adiw	r30, 0x3f	; 63
    19a6:	60 81       	ld	r22, Z
    19a8:	71 81       	ldd	r23, Z+1	; 0x01
    19aa:	82 81       	ldd	r24, Z+2	; 0x02
    19ac:	93 81       	ldd	r25, Z+3	; 0x03
    19ae:	20 e0       	ldi	r18, 0x00	; 0
    19b0:	3f ef       	ldi	r19, 0xFF	; 255
    19b2:	4f e7       	ldi	r20, 0x7F	; 127
    19b4:	57 e4       	ldi	r21, 0x47	; 71
    19b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19ba:	18 16       	cp	r1, r24
    19bc:	64 f5       	brge	.+88     	; 0x1a16 <MODE_2+0x6d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19be:	fe 01       	movw	r30, r28
    19c0:	ed 5b       	subi	r30, 0xBD	; 189
    19c2:	ff 4f       	sbci	r31, 0xFF	; 255
    19c4:	60 81       	ld	r22, Z
    19c6:	71 81       	ldd	r23, Z+1	; 0x01
    19c8:	82 81       	ldd	r24, Z+2	; 0x02
    19ca:	93 81       	ldd	r25, Z+3	; 0x03
    19cc:	20 e0       	ldi	r18, 0x00	; 0
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	40 e2       	ldi	r20, 0x20	; 32
    19d2:	51 e4       	ldi	r21, 0x41	; 65
    19d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19d8:	dc 01       	movw	r26, r24
    19da:	cb 01       	movw	r24, r22
    19dc:	bc 01       	movw	r22, r24
    19de:	cd 01       	movw	r24, r26
    19e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	9e af       	std	Y+62, r25	; 0x3e
    19ea:	8d af       	std	Y+61, r24	; 0x3d
    19ec:	0f c0       	rjmp	.+30     	; 0x1a0c <MODE_2+0x6c6>
    19ee:	88 ec       	ldi	r24, 0xC8	; 200
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	9c af       	std	Y+60, r25	; 0x3c
    19f4:	8b af       	std	Y+59, r24	; 0x3b
    19f6:	8b ad       	ldd	r24, Y+59	; 0x3b
    19f8:	9c ad       	ldd	r25, Y+60	; 0x3c
    19fa:	01 97       	sbiw	r24, 0x01	; 1
    19fc:	f1 f7       	brne	.-4      	; 0x19fa <MODE_2+0x6b4>
    19fe:	9c af       	std	Y+60, r25	; 0x3c
    1a00:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a02:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a04:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a06:	01 97       	sbiw	r24, 0x01	; 1
    1a08:	9e af       	std	Y+62, r25	; 0x3e
    1a0a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a0c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a0e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a10:	00 97       	sbiw	r24, 0x00	; 0
    1a12:	69 f7       	brne	.-38     	; 0x19ee <MODE_2+0x6a8>
    1a14:	16 c0       	rjmp	.+44     	; 0x1a42 <MODE_2+0x6fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a16:	fe 01       	movw	r30, r28
    1a18:	ff 96       	adiw	r30, 0x3f	; 63
    1a1a:	60 81       	ld	r22, Z
    1a1c:	71 81       	ldd	r23, Z+1	; 0x01
    1a1e:	82 81       	ldd	r24, Z+2	; 0x02
    1a20:	93 81       	ldd	r25, Z+3	; 0x03
    1a22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	9e af       	std	Y+62, r25	; 0x3e
    1a2c:	8d af       	std	Y+61, r24	; 0x3d
    1a2e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a30:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a32:	9a af       	std	Y+58, r25	; 0x3a
    1a34:	89 af       	std	Y+57, r24	; 0x39
    1a36:	89 ad       	ldd	r24, Y+57	; 0x39
    1a38:	9a ad       	ldd	r25, Y+58	; 0x3a
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	f1 f7       	brne	.-4      	; 0x1a3a <MODE_2+0x6f4>
    1a3e:	9a af       	std	Y+58, r25	; 0x3a
    1a40:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED4, OFF);
    1a42:	83 e0       	ldi	r24, 0x03	; 3
    1a44:	60 e0       	ldi	r22, 0x00	; 0
    1a46:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED5, ON);
    1a4a:	84 e0       	ldi	r24, 0x04	; 4
    1a4c:	61 e0       	ldi	r22, 0x01	; 1
    1a4e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    1a52:	80 e0       	ldi	r24, 0x00	; 0
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	a8 e4       	ldi	r26, 0x48	; 72
    1a58:	b2 e4       	ldi	r27, 0x42	; 66
    1a5a:	8d ab       	std	Y+53, r24	; 0x35
    1a5c:	9e ab       	std	Y+54, r25	; 0x36
    1a5e:	af ab       	std	Y+55, r26	; 0x37
    1a60:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a62:	6d a9       	ldd	r22, Y+53	; 0x35
    1a64:	7e a9       	ldd	r23, Y+54	; 0x36
    1a66:	8f a9       	ldd	r24, Y+55	; 0x37
    1a68:	98 ad       	ldd	r25, Y+56	; 0x38
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	4a ef       	ldi	r20, 0xFA	; 250
    1a70:	54 e4       	ldi	r21, 0x44	; 68
    1a72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	89 ab       	std	Y+49, r24	; 0x31
    1a7c:	9a ab       	std	Y+50, r25	; 0x32
    1a7e:	ab ab       	std	Y+51, r26	; 0x33
    1a80:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1a82:	69 a9       	ldd	r22, Y+49	; 0x31
    1a84:	7a a9       	ldd	r23, Y+50	; 0x32
    1a86:	8b a9       	ldd	r24, Y+51	; 0x33
    1a88:	9c a9       	ldd	r25, Y+52	; 0x34
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	40 e8       	ldi	r20, 0x80	; 128
    1a90:	5f e3       	ldi	r21, 0x3F	; 63
    1a92:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a96:	88 23       	and	r24, r24
    1a98:	2c f4       	brge	.+10     	; 0x1aa4 <MODE_2+0x75e>
		__ticks = 1;
    1a9a:	81 e0       	ldi	r24, 0x01	; 1
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	98 ab       	std	Y+48, r25	; 0x30
    1aa0:	8f a7       	std	Y+47, r24	; 0x2f
    1aa2:	3f c0       	rjmp	.+126    	; 0x1b22 <MODE_2+0x7dc>
	else if (__tmp > 65535)
    1aa4:	69 a9       	ldd	r22, Y+49	; 0x31
    1aa6:	7a a9       	ldd	r23, Y+50	; 0x32
    1aa8:	8b a9       	ldd	r24, Y+51	; 0x33
    1aaa:	9c a9       	ldd	r25, Y+52	; 0x34
    1aac:	20 e0       	ldi	r18, 0x00	; 0
    1aae:	3f ef       	ldi	r19, 0xFF	; 255
    1ab0:	4f e7       	ldi	r20, 0x7F	; 127
    1ab2:	57 e4       	ldi	r21, 0x47	; 71
    1ab4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ab8:	18 16       	cp	r1, r24
    1aba:	4c f5       	brge	.+82     	; 0x1b0e <MODE_2+0x7c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1abc:	6d a9       	ldd	r22, Y+53	; 0x35
    1abe:	7e a9       	ldd	r23, Y+54	; 0x36
    1ac0:	8f a9       	ldd	r24, Y+55	; 0x37
    1ac2:	98 ad       	ldd	r25, Y+56	; 0x38
    1ac4:	20 e0       	ldi	r18, 0x00	; 0
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e2       	ldi	r20, 0x20	; 32
    1aca:	51 e4       	ldi	r21, 0x41	; 65
    1acc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	cb 01       	movw	r24, r22
    1ad4:	bc 01       	movw	r22, r24
    1ad6:	cd 01       	movw	r24, r26
    1ad8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1adc:	dc 01       	movw	r26, r24
    1ade:	cb 01       	movw	r24, r22
    1ae0:	98 ab       	std	Y+48, r25	; 0x30
    1ae2:	8f a7       	std	Y+47, r24	; 0x2f
    1ae4:	0f c0       	rjmp	.+30     	; 0x1b04 <MODE_2+0x7be>
    1ae6:	88 ec       	ldi	r24, 0xC8	; 200
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	9e a7       	std	Y+46, r25	; 0x2e
    1aec:	8d a7       	std	Y+45, r24	; 0x2d
    1aee:	8d a5       	ldd	r24, Y+45	; 0x2d
    1af0:	9e a5       	ldd	r25, Y+46	; 0x2e
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	f1 f7       	brne	.-4      	; 0x1af2 <MODE_2+0x7ac>
    1af6:	9e a7       	std	Y+46, r25	; 0x2e
    1af8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1afa:	8f a5       	ldd	r24, Y+47	; 0x2f
    1afc:	98 a9       	ldd	r25, Y+48	; 0x30
    1afe:	01 97       	sbiw	r24, 0x01	; 1
    1b00:	98 ab       	std	Y+48, r25	; 0x30
    1b02:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b04:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b06:	98 a9       	ldd	r25, Y+48	; 0x30
    1b08:	00 97       	sbiw	r24, 0x00	; 0
    1b0a:	69 f7       	brne	.-38     	; 0x1ae6 <MODE_2+0x7a0>
    1b0c:	14 c0       	rjmp	.+40     	; 0x1b36 <MODE_2+0x7f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b0e:	69 a9       	ldd	r22, Y+49	; 0x31
    1b10:	7a a9       	ldd	r23, Y+50	; 0x32
    1b12:	8b a9       	ldd	r24, Y+51	; 0x33
    1b14:	9c a9       	ldd	r25, Y+52	; 0x34
    1b16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	cb 01       	movw	r24, r22
    1b1e:	98 ab       	std	Y+48, r25	; 0x30
    1b20:	8f a7       	std	Y+47, r24	; 0x2f
    1b22:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b24:	98 a9       	ldd	r25, Y+48	; 0x30
    1b26:	9c a7       	std	Y+44, r25	; 0x2c
    1b28:	8b a7       	std	Y+43, r24	; 0x2b
    1b2a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b2c:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b2e:	01 97       	sbiw	r24, 0x01	; 1
    1b30:	f1 f7       	brne	.-4      	; 0x1b2e <MODE_2+0x7e8>
    1b32:	9c a7       	std	Y+44, r25	; 0x2c
    1b34:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED5, OFF);
    1b36:	84 e0       	ldi	r24, 0x04	; 4
    1b38:	60 e0       	ldi	r22, 0x00	; 0
    1b3a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED6, ON);
    1b3e:	85 e0       	ldi	r24, 0x05	; 5
    1b40:	61 e0       	ldi	r22, 0x01	; 1
    1b42:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    1b46:	80 e0       	ldi	r24, 0x00	; 0
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	a8 e4       	ldi	r26, 0x48	; 72
    1b4c:	b2 e4       	ldi	r27, 0x42	; 66
    1b4e:	8f a3       	std	Y+39, r24	; 0x27
    1b50:	98 a7       	std	Y+40, r25	; 0x28
    1b52:	a9 a7       	std	Y+41, r26	; 0x29
    1b54:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b56:	6f a1       	ldd	r22, Y+39	; 0x27
    1b58:	78 a5       	ldd	r23, Y+40	; 0x28
    1b5a:	89 a5       	ldd	r24, Y+41	; 0x29
    1b5c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b5e:	20 e0       	ldi	r18, 0x00	; 0
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	4a ef       	ldi	r20, 0xFA	; 250
    1b64:	54 e4       	ldi	r21, 0x44	; 68
    1b66:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b6a:	dc 01       	movw	r26, r24
    1b6c:	cb 01       	movw	r24, r22
    1b6e:	8b a3       	std	Y+35, r24	; 0x23
    1b70:	9c a3       	std	Y+36, r25	; 0x24
    1b72:	ad a3       	std	Y+37, r26	; 0x25
    1b74:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b76:	6b a1       	ldd	r22, Y+35	; 0x23
    1b78:	7c a1       	ldd	r23, Y+36	; 0x24
    1b7a:	8d a1       	ldd	r24, Y+37	; 0x25
    1b7c:	9e a1       	ldd	r25, Y+38	; 0x26
    1b7e:	20 e0       	ldi	r18, 0x00	; 0
    1b80:	30 e0       	ldi	r19, 0x00	; 0
    1b82:	40 e8       	ldi	r20, 0x80	; 128
    1b84:	5f e3       	ldi	r21, 0x3F	; 63
    1b86:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b8a:	88 23       	and	r24, r24
    1b8c:	2c f4       	brge	.+10     	; 0x1b98 <MODE_2+0x852>
		__ticks = 1;
    1b8e:	81 e0       	ldi	r24, 0x01	; 1
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	9a a3       	std	Y+34, r25	; 0x22
    1b94:	89 a3       	std	Y+33, r24	; 0x21
    1b96:	3f c0       	rjmp	.+126    	; 0x1c16 <MODE_2+0x8d0>
	else if (__tmp > 65535)
    1b98:	6b a1       	ldd	r22, Y+35	; 0x23
    1b9a:	7c a1       	ldd	r23, Y+36	; 0x24
    1b9c:	8d a1       	ldd	r24, Y+37	; 0x25
    1b9e:	9e a1       	ldd	r25, Y+38	; 0x26
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	3f ef       	ldi	r19, 0xFF	; 255
    1ba4:	4f e7       	ldi	r20, 0x7F	; 127
    1ba6:	57 e4       	ldi	r21, 0x47	; 71
    1ba8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1bac:	18 16       	cp	r1, r24
    1bae:	4c f5       	brge	.+82     	; 0x1c02 <MODE_2+0x8bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bb0:	6f a1       	ldd	r22, Y+39	; 0x27
    1bb2:	78 a5       	ldd	r23, Y+40	; 0x28
    1bb4:	89 a5       	ldd	r24, Y+41	; 0x29
    1bb6:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bb8:	20 e0       	ldi	r18, 0x00	; 0
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	40 e2       	ldi	r20, 0x20	; 32
    1bbe:	51 e4       	ldi	r21, 0x41	; 65
    1bc0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bc4:	dc 01       	movw	r26, r24
    1bc6:	cb 01       	movw	r24, r22
    1bc8:	bc 01       	movw	r22, r24
    1bca:	cd 01       	movw	r24, r26
    1bcc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	cb 01       	movw	r24, r22
    1bd4:	9a a3       	std	Y+34, r25	; 0x22
    1bd6:	89 a3       	std	Y+33, r24	; 0x21
    1bd8:	0f c0       	rjmp	.+30     	; 0x1bf8 <MODE_2+0x8b2>
    1bda:	88 ec       	ldi	r24, 0xC8	; 200
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	98 a3       	std	Y+32, r25	; 0x20
    1be0:	8f 8f       	std	Y+31, r24	; 0x1f
    1be2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1be4:	98 a1       	ldd	r25, Y+32	; 0x20
    1be6:	01 97       	sbiw	r24, 0x01	; 1
    1be8:	f1 f7       	brne	.-4      	; 0x1be6 <MODE_2+0x8a0>
    1bea:	98 a3       	std	Y+32, r25	; 0x20
    1bec:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bee:	89 a1       	ldd	r24, Y+33	; 0x21
    1bf0:	9a a1       	ldd	r25, Y+34	; 0x22
    1bf2:	01 97       	sbiw	r24, 0x01	; 1
    1bf4:	9a a3       	std	Y+34, r25	; 0x22
    1bf6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf8:	89 a1       	ldd	r24, Y+33	; 0x21
    1bfa:	9a a1       	ldd	r25, Y+34	; 0x22
    1bfc:	00 97       	sbiw	r24, 0x00	; 0
    1bfe:	69 f7       	brne	.-38     	; 0x1bda <MODE_2+0x894>
    1c00:	14 c0       	rjmp	.+40     	; 0x1c2a <MODE_2+0x8e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c02:	6b a1       	ldd	r22, Y+35	; 0x23
    1c04:	7c a1       	ldd	r23, Y+36	; 0x24
    1c06:	8d a1       	ldd	r24, Y+37	; 0x25
    1c08:	9e a1       	ldd	r25, Y+38	; 0x26
    1c0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c0e:	dc 01       	movw	r26, r24
    1c10:	cb 01       	movw	r24, r22
    1c12:	9a a3       	std	Y+34, r25	; 0x22
    1c14:	89 a3       	std	Y+33, r24	; 0x21
    1c16:	89 a1       	ldd	r24, Y+33	; 0x21
    1c18:	9a a1       	ldd	r25, Y+34	; 0x22
    1c1a:	9e 8f       	std	Y+30, r25	; 0x1e
    1c1c:	8d 8f       	std	Y+29, r24	; 0x1d
    1c1e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c20:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c22:	01 97       	sbiw	r24, 0x01	; 1
    1c24:	f1 f7       	brne	.-4      	; 0x1c22 <MODE_2+0x8dc>
    1c26:	9e 8f       	std	Y+30, r25	; 0x1e
    1c28:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED6, OFF);
    1c2a:	85 e0       	ldi	r24, 0x05	; 5
    1c2c:	60 e0       	ldi	r22, 0x00	; 0
    1c2e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED7, ON);
    1c32:	86 e0       	ldi	r24, 0x06	; 6
    1c34:	61 e0       	ldi	r22, 0x01	; 1
    1c36:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    1c3a:	80 e0       	ldi	r24, 0x00	; 0
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	a8 e4       	ldi	r26, 0x48	; 72
    1c40:	b2 e4       	ldi	r27, 0x42	; 66
    1c42:	89 8f       	std	Y+25, r24	; 0x19
    1c44:	9a 8f       	std	Y+26, r25	; 0x1a
    1c46:	ab 8f       	std	Y+27, r26	; 0x1b
    1c48:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c4a:	69 8d       	ldd	r22, Y+25	; 0x19
    1c4c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c4e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c50:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c52:	20 e0       	ldi	r18, 0x00	; 0
    1c54:	30 e0       	ldi	r19, 0x00	; 0
    1c56:	4a ef       	ldi	r20, 0xFA	; 250
    1c58:	54 e4       	ldi	r21, 0x44	; 68
    1c5a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c5e:	dc 01       	movw	r26, r24
    1c60:	cb 01       	movw	r24, r22
    1c62:	8d 8b       	std	Y+21, r24	; 0x15
    1c64:	9e 8b       	std	Y+22, r25	; 0x16
    1c66:	af 8b       	std	Y+23, r26	; 0x17
    1c68:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c6a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c6c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c6e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c70:	98 8d       	ldd	r25, Y+24	; 0x18
    1c72:	20 e0       	ldi	r18, 0x00	; 0
    1c74:	30 e0       	ldi	r19, 0x00	; 0
    1c76:	40 e8       	ldi	r20, 0x80	; 128
    1c78:	5f e3       	ldi	r21, 0x3F	; 63
    1c7a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c7e:	88 23       	and	r24, r24
    1c80:	2c f4       	brge	.+10     	; 0x1c8c <MODE_2+0x946>
		__ticks = 1;
    1c82:	81 e0       	ldi	r24, 0x01	; 1
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	9c 8b       	std	Y+20, r25	; 0x14
    1c88:	8b 8b       	std	Y+19, r24	; 0x13
    1c8a:	3f c0       	rjmp	.+126    	; 0x1d0a <MODE_2+0x9c4>
	else if (__tmp > 65535)
    1c8c:	6d 89       	ldd	r22, Y+21	; 0x15
    1c8e:	7e 89       	ldd	r23, Y+22	; 0x16
    1c90:	8f 89       	ldd	r24, Y+23	; 0x17
    1c92:	98 8d       	ldd	r25, Y+24	; 0x18
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	3f ef       	ldi	r19, 0xFF	; 255
    1c98:	4f e7       	ldi	r20, 0x7F	; 127
    1c9a:	57 e4       	ldi	r21, 0x47	; 71
    1c9c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ca0:	18 16       	cp	r1, r24
    1ca2:	4c f5       	brge	.+82     	; 0x1cf6 <MODE_2+0x9b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ca4:	69 8d       	ldd	r22, Y+25	; 0x19
    1ca6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ca8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1caa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cac:	20 e0       	ldi	r18, 0x00	; 0
    1cae:	30 e0       	ldi	r19, 0x00	; 0
    1cb0:	40 e2       	ldi	r20, 0x20	; 32
    1cb2:	51 e4       	ldi	r21, 0x41	; 65
    1cb4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb8:	dc 01       	movw	r26, r24
    1cba:	cb 01       	movw	r24, r22
    1cbc:	bc 01       	movw	r22, r24
    1cbe:	cd 01       	movw	r24, r26
    1cc0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cc4:	dc 01       	movw	r26, r24
    1cc6:	cb 01       	movw	r24, r22
    1cc8:	9c 8b       	std	Y+20, r25	; 0x14
    1cca:	8b 8b       	std	Y+19, r24	; 0x13
    1ccc:	0f c0       	rjmp	.+30     	; 0x1cec <MODE_2+0x9a6>
    1cce:	88 ec       	ldi	r24, 0xC8	; 200
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	9a 8b       	std	Y+18, r25	; 0x12
    1cd4:	89 8b       	std	Y+17, r24	; 0x11
    1cd6:	89 89       	ldd	r24, Y+17	; 0x11
    1cd8:	9a 89       	ldd	r25, Y+18	; 0x12
    1cda:	01 97       	sbiw	r24, 0x01	; 1
    1cdc:	f1 f7       	brne	.-4      	; 0x1cda <MODE_2+0x994>
    1cde:	9a 8b       	std	Y+18, r25	; 0x12
    1ce0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ce2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ce4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ce6:	01 97       	sbiw	r24, 0x01	; 1
    1ce8:	9c 8b       	std	Y+20, r25	; 0x14
    1cea:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cec:	8b 89       	ldd	r24, Y+19	; 0x13
    1cee:	9c 89       	ldd	r25, Y+20	; 0x14
    1cf0:	00 97       	sbiw	r24, 0x00	; 0
    1cf2:	69 f7       	brne	.-38     	; 0x1cce <MODE_2+0x988>
    1cf4:	14 c0       	rjmp	.+40     	; 0x1d1e <MODE_2+0x9d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cf6:	6d 89       	ldd	r22, Y+21	; 0x15
    1cf8:	7e 89       	ldd	r23, Y+22	; 0x16
    1cfa:	8f 89       	ldd	r24, Y+23	; 0x17
    1cfc:	98 8d       	ldd	r25, Y+24	; 0x18
    1cfe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d02:	dc 01       	movw	r26, r24
    1d04:	cb 01       	movw	r24, r22
    1d06:	9c 8b       	std	Y+20, r25	; 0x14
    1d08:	8b 8b       	std	Y+19, r24	; 0x13
    1d0a:	8b 89       	ldd	r24, Y+19	; 0x13
    1d0c:	9c 89       	ldd	r25, Y+20	; 0x14
    1d0e:	98 8b       	std	Y+16, r25	; 0x10
    1d10:	8f 87       	std	Y+15, r24	; 0x0f
    1d12:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d14:	98 89       	ldd	r25, Y+16	; 0x10
    1d16:	01 97       	sbiw	r24, 0x01	; 1
    1d18:	f1 f7       	brne	.-4      	; 0x1d16 <MODE_2+0x9d0>
    1d1a:	98 8b       	std	Y+16, r25	; 0x10
    1d1c:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED7, OFF);
    1d1e:	86 e0       	ldi	r24, 0x06	; 6
    1d20:	60 e0       	ldi	r22, 0x00	; 0
    1d22:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED8, ON);
    1d26:	87 e0       	ldi	r24, 0x07	; 7
    1d28:	61 e0       	ldi	r22, 0x01	; 1
    1d2a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    1d2e:	80 e0       	ldi	r24, 0x00	; 0
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	aa e7       	ldi	r26, 0x7A	; 122
    1d34:	b3 e4       	ldi	r27, 0x43	; 67
    1d36:	8b 87       	std	Y+11, r24	; 0x0b
    1d38:	9c 87       	std	Y+12, r25	; 0x0c
    1d3a:	ad 87       	std	Y+13, r26	; 0x0d
    1d3c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d3e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d40:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d42:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d44:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	4a ef       	ldi	r20, 0xFA	; 250
    1d4c:	54 e4       	ldi	r21, 0x44	; 68
    1d4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d52:	dc 01       	movw	r26, r24
    1d54:	cb 01       	movw	r24, r22
    1d56:	8f 83       	std	Y+7, r24	; 0x07
    1d58:	98 87       	std	Y+8, r25	; 0x08
    1d5a:	a9 87       	std	Y+9, r26	; 0x09
    1d5c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d5e:	6f 81       	ldd	r22, Y+7	; 0x07
    1d60:	78 85       	ldd	r23, Y+8	; 0x08
    1d62:	89 85       	ldd	r24, Y+9	; 0x09
    1d64:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d66:	20 e0       	ldi	r18, 0x00	; 0
    1d68:	30 e0       	ldi	r19, 0x00	; 0
    1d6a:	40 e8       	ldi	r20, 0x80	; 128
    1d6c:	5f e3       	ldi	r21, 0x3F	; 63
    1d6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d72:	88 23       	and	r24, r24
    1d74:	2c f4       	brge	.+10     	; 0x1d80 <MODE_2+0xa3a>
		__ticks = 1;
    1d76:	81 e0       	ldi	r24, 0x01	; 1
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	9e 83       	std	Y+6, r25	; 0x06
    1d7c:	8d 83       	std	Y+5, r24	; 0x05
    1d7e:	3f c0       	rjmp	.+126    	; 0x1dfe <MODE_2+0xab8>
	else if (__tmp > 65535)
    1d80:	6f 81       	ldd	r22, Y+7	; 0x07
    1d82:	78 85       	ldd	r23, Y+8	; 0x08
    1d84:	89 85       	ldd	r24, Y+9	; 0x09
    1d86:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d88:	20 e0       	ldi	r18, 0x00	; 0
    1d8a:	3f ef       	ldi	r19, 0xFF	; 255
    1d8c:	4f e7       	ldi	r20, 0x7F	; 127
    1d8e:	57 e4       	ldi	r21, 0x47	; 71
    1d90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d94:	18 16       	cp	r1, r24
    1d96:	4c f5       	brge	.+82     	; 0x1dea <MODE_2+0xaa4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d98:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d9a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d9c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d9e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1da0:	20 e0       	ldi	r18, 0x00	; 0
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	40 e2       	ldi	r20, 0x20	; 32
    1da6:	51 e4       	ldi	r21, 0x41	; 65
    1da8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	bc 01       	movw	r22, r24
    1db2:	cd 01       	movw	r24, r26
    1db4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	9e 83       	std	Y+6, r25	; 0x06
    1dbe:	8d 83       	std	Y+5, r24	; 0x05
    1dc0:	0f c0       	rjmp	.+30     	; 0x1de0 <MODE_2+0xa9a>
    1dc2:	88 ec       	ldi	r24, 0xC8	; 200
    1dc4:	90 e0       	ldi	r25, 0x00	; 0
    1dc6:	9c 83       	std	Y+4, r25	; 0x04
    1dc8:	8b 83       	std	Y+3, r24	; 0x03
    1dca:	8b 81       	ldd	r24, Y+3	; 0x03
    1dcc:	9c 81       	ldd	r25, Y+4	; 0x04
    1dce:	01 97       	sbiw	r24, 0x01	; 1
    1dd0:	f1 f7       	brne	.-4      	; 0x1dce <MODE_2+0xa88>
    1dd2:	9c 83       	std	Y+4, r25	; 0x04
    1dd4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd8:	9e 81       	ldd	r25, Y+6	; 0x06
    1dda:	01 97       	sbiw	r24, 0x01	; 1
    1ddc:	9e 83       	std	Y+6, r25	; 0x06
    1dde:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1de0:	8d 81       	ldd	r24, Y+5	; 0x05
    1de2:	9e 81       	ldd	r25, Y+6	; 0x06
    1de4:	00 97       	sbiw	r24, 0x00	; 0
    1de6:	69 f7       	brne	.-38     	; 0x1dc2 <MODE_2+0xa7c>
    1de8:	14 c0       	rjmp	.+40     	; 0x1e12 <MODE_2+0xacc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dea:	6f 81       	ldd	r22, Y+7	; 0x07
    1dec:	78 85       	ldd	r23, Y+8	; 0x08
    1dee:	89 85       	ldd	r24, Y+9	; 0x09
    1df0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1df2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1df6:	dc 01       	movw	r26, r24
    1df8:	cb 01       	movw	r24, r22
    1dfa:	9e 83       	std	Y+6, r25	; 0x06
    1dfc:	8d 83       	std	Y+5, r24	; 0x05
    1dfe:	8d 81       	ldd	r24, Y+5	; 0x05
    1e00:	9e 81       	ldd	r25, Y+6	; 0x06
    1e02:	9a 83       	std	Y+2, r25	; 0x02
    1e04:	89 83       	std	Y+1, r24	; 0x01
    1e06:	89 81       	ldd	r24, Y+1	; 0x01
    1e08:	9a 81       	ldd	r25, Y+2	; 0x02
    1e0a:	01 97       	sbiw	r24, 0x01	; 1
    1e0c:	f1 f7       	brne	.-4      	; 0x1e0a <MODE_2+0xac4>
    1e0e:	9a 83       	std	Y+2, r25	; 0x02
    1e10:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(250);
}/** @end MODE_2 */
    1e12:	c2 58       	subi	r28, 0x82	; 130
    1e14:	df 4f       	sbci	r29, 0xFF	; 255
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	cf 91       	pop	r28
    1e22:	df 91       	pop	r29
    1e24:	1f 91       	pop	r17
    1e26:	0f 91       	pop	r16
    1e28:	08 95       	ret

00001e2a <MODE_3>:
/**
 * @brief function to implement mode 3
 */
static void MODE_3(void)
{
    1e2a:	0f 93       	push	r16
    1e2c:	1f 93       	push	r17
    1e2e:	df 93       	push	r29
    1e30:	cf 93       	push	r28
    1e32:	cd b7       	in	r28, 0x3d	; 61
    1e34:	de b7       	in	r29, 0x3e	; 62
    1e36:	ce 57       	subi	r28, 0x7E	; 126
    1e38:	d0 40       	sbci	r29, 0x00	; 0
    1e3a:	0f b6       	in	r0, 0x3f	; 63
    1e3c:	f8 94       	cli
    1e3e:	de bf       	out	0x3e, r29	; 62
    1e40:	0f be       	out	0x3f, r0	; 63
    1e42:	cd bf       	out	0x3d, r28	; 61
    1e44:	fe 01       	movw	r30, r28
    1e46:	e5 58       	subi	r30, 0x85	; 133
    1e48:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	a8 e4       	ldi	r26, 0x48	; 72
    1e50:	b2 e4       	ldi	r27, 0x42	; 66
    1e52:	80 83       	st	Z, r24
    1e54:	91 83       	std	Z+1, r25	; 0x01
    1e56:	a2 83       	std	Z+2, r26	; 0x02
    1e58:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e5a:	8e 01       	movw	r16, r28
    1e5c:	09 58       	subi	r16, 0x89	; 137
    1e5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e60:	fe 01       	movw	r30, r28
    1e62:	e5 58       	subi	r30, 0x85	; 133
    1e64:	ff 4f       	sbci	r31, 0xFF	; 255
    1e66:	60 81       	ld	r22, Z
    1e68:	71 81       	ldd	r23, Z+1	; 0x01
    1e6a:	82 81       	ldd	r24, Z+2	; 0x02
    1e6c:	93 81       	ldd	r25, Z+3	; 0x03
    1e6e:	20 e0       	ldi	r18, 0x00	; 0
    1e70:	30 e0       	ldi	r19, 0x00	; 0
    1e72:	4a ef       	ldi	r20, 0xFA	; 250
    1e74:	54 e4       	ldi	r21, 0x44	; 68
    1e76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e7a:	dc 01       	movw	r26, r24
    1e7c:	cb 01       	movw	r24, r22
    1e7e:	f8 01       	movw	r30, r16
    1e80:	80 83       	st	Z, r24
    1e82:	91 83       	std	Z+1, r25	; 0x01
    1e84:	a2 83       	std	Z+2, r26	; 0x02
    1e86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e9 58       	subi	r30, 0x89	; 137
    1e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8e:	60 81       	ld	r22, Z
    1e90:	71 81       	ldd	r23, Z+1	; 0x01
    1e92:	82 81       	ldd	r24, Z+2	; 0x02
    1e94:	93 81       	ldd	r25, Z+3	; 0x03
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	30 e0       	ldi	r19, 0x00	; 0
    1e9a:	40 e8       	ldi	r20, 0x80	; 128
    1e9c:	5f e3       	ldi	r21, 0x3F	; 63
    1e9e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ea2:	88 23       	and	r24, r24
    1ea4:	44 f4       	brge	.+16     	; 0x1eb6 <MODE_3+0x8c>
		__ticks = 1;
    1ea6:	fe 01       	movw	r30, r28
    1ea8:	eb 58       	subi	r30, 0x8B	; 139
    1eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1eac:	81 e0       	ldi	r24, 0x01	; 1
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	91 83       	std	Z+1, r25	; 0x01
    1eb2:	80 83       	st	Z, r24
    1eb4:	64 c0       	rjmp	.+200    	; 0x1f7e <MODE_3+0x154>
	else if (__tmp > 65535)
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	e9 58       	subi	r30, 0x89	; 137
    1eba:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebc:	60 81       	ld	r22, Z
    1ebe:	71 81       	ldd	r23, Z+1	; 0x01
    1ec0:	82 81       	ldd	r24, Z+2	; 0x02
    1ec2:	93 81       	ldd	r25, Z+3	; 0x03
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	3f ef       	ldi	r19, 0xFF	; 255
    1ec8:	4f e7       	ldi	r20, 0x7F	; 127
    1eca:	57 e4       	ldi	r21, 0x47	; 71
    1ecc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ed0:	18 16       	cp	r1, r24
    1ed2:	0c f0       	brlt	.+2      	; 0x1ed6 <MODE_3+0xac>
    1ed4:	43 c0       	rjmp	.+134    	; 0x1f5c <MODE_3+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ed6:	fe 01       	movw	r30, r28
    1ed8:	e5 58       	subi	r30, 0x85	; 133
    1eda:	ff 4f       	sbci	r31, 0xFF	; 255
    1edc:	60 81       	ld	r22, Z
    1ede:	71 81       	ldd	r23, Z+1	; 0x01
    1ee0:	82 81       	ldd	r24, Z+2	; 0x02
    1ee2:	93 81       	ldd	r25, Z+3	; 0x03
    1ee4:	20 e0       	ldi	r18, 0x00	; 0
    1ee6:	30 e0       	ldi	r19, 0x00	; 0
    1ee8:	40 e2       	ldi	r20, 0x20	; 32
    1eea:	51 e4       	ldi	r21, 0x41	; 65
    1eec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ef0:	dc 01       	movw	r26, r24
    1ef2:	cb 01       	movw	r24, r22
    1ef4:	8e 01       	movw	r16, r28
    1ef6:	0b 58       	subi	r16, 0x8B	; 139
    1ef8:	1f 4f       	sbci	r17, 0xFF	; 255
    1efa:	bc 01       	movw	r22, r24
    1efc:	cd 01       	movw	r24, r26
    1efe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f02:	dc 01       	movw	r26, r24
    1f04:	cb 01       	movw	r24, r22
    1f06:	f8 01       	movw	r30, r16
    1f08:	91 83       	std	Z+1, r25	; 0x01
    1f0a:	80 83       	st	Z, r24
    1f0c:	1f c0       	rjmp	.+62     	; 0x1f4c <MODE_3+0x122>
    1f0e:	fe 01       	movw	r30, r28
    1f10:	ed 58       	subi	r30, 0x8D	; 141
    1f12:	ff 4f       	sbci	r31, 0xFF	; 255
    1f14:	88 ec       	ldi	r24, 0xC8	; 200
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	91 83       	std	Z+1, r25	; 0x01
    1f1a:	80 83       	st	Z, r24
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	ed 58       	subi	r30, 0x8D	; 141
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	80 81       	ld	r24, Z
    1f24:	91 81       	ldd	r25, Z+1	; 0x01
    1f26:	01 97       	sbiw	r24, 0x01	; 1
    1f28:	f1 f7       	brne	.-4      	; 0x1f26 <MODE_3+0xfc>
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	ed 58       	subi	r30, 0x8D	; 141
    1f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f34:	de 01       	movw	r26, r28
    1f36:	ab 58       	subi	r26, 0x8B	; 139
    1f38:	bf 4f       	sbci	r27, 0xFF	; 255
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	eb 58       	subi	r30, 0x8B	; 139
    1f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f40:	80 81       	ld	r24, Z
    1f42:	91 81       	ldd	r25, Z+1	; 0x01
    1f44:	01 97       	sbiw	r24, 0x01	; 1
    1f46:	11 96       	adiw	r26, 0x01	; 1
    1f48:	9c 93       	st	X, r25
    1f4a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	eb 58       	subi	r30, 0x8B	; 139
    1f50:	ff 4f       	sbci	r31, 0xFF	; 255
    1f52:	80 81       	ld	r24, Z
    1f54:	91 81       	ldd	r25, Z+1	; 0x01
    1f56:	00 97       	sbiw	r24, 0x00	; 0
    1f58:	d1 f6       	brne	.-76     	; 0x1f0e <MODE_3+0xe4>
    1f5a:	27 c0       	rjmp	.+78     	; 0x1faa <MODE_3+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f5c:	8e 01       	movw	r16, r28
    1f5e:	0b 58       	subi	r16, 0x8B	; 139
    1f60:	1f 4f       	sbci	r17, 0xFF	; 255
    1f62:	fe 01       	movw	r30, r28
    1f64:	e9 58       	subi	r30, 0x89	; 137
    1f66:	ff 4f       	sbci	r31, 0xFF	; 255
    1f68:	60 81       	ld	r22, Z
    1f6a:	71 81       	ldd	r23, Z+1	; 0x01
    1f6c:	82 81       	ldd	r24, Z+2	; 0x02
    1f6e:	93 81       	ldd	r25, Z+3	; 0x03
    1f70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f74:	dc 01       	movw	r26, r24
    1f76:	cb 01       	movw	r24, r22
    1f78:	f8 01       	movw	r30, r16
    1f7a:	91 83       	std	Z+1, r25	; 0x01
    1f7c:	80 83       	st	Z, r24
    1f7e:	de 01       	movw	r26, r28
    1f80:	af 58       	subi	r26, 0x8F	; 143
    1f82:	bf 4f       	sbci	r27, 0xFF	; 255
    1f84:	fe 01       	movw	r30, r28
    1f86:	eb 58       	subi	r30, 0x8B	; 139
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	80 81       	ld	r24, Z
    1f8c:	91 81       	ldd	r25, Z+1	; 0x01
    1f8e:	8d 93       	st	X+, r24
    1f90:	9c 93       	st	X, r25
    1f92:	fe 01       	movw	r30, r28
    1f94:	ef 58       	subi	r30, 0x8F	; 143
    1f96:	ff 4f       	sbci	r31, 0xFF	; 255
    1f98:	80 81       	ld	r24, Z
    1f9a:	91 81       	ldd	r25, Z+1	; 0x01
    1f9c:	01 97       	sbiw	r24, 0x01	; 1
    1f9e:	f1 f7       	brne	.-4      	; 0x1f9c <MODE_3+0x172>
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	ef 58       	subi	r30, 0x8F	; 143
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	91 83       	std	Z+1, r25	; 0x01
    1fa8:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED1, OFF);
    1faa:	80 e0       	ldi	r24, 0x00	; 0
    1fac:	60 e0       	ldi	r22, 0x00	; 0
    1fae:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED8, ON);
    1fb2:	87 e0       	ldi	r24, 0x07	; 7
    1fb4:	61 e0       	ldi	r22, 0x01	; 1
    1fb6:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    1fba:	fe 01       	movw	r30, r28
    1fbc:	e3 59       	subi	r30, 0x93	; 147
    1fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	a8 e4       	ldi	r26, 0x48	; 72
    1fc6:	b2 e4       	ldi	r27, 0x42	; 66
    1fc8:	80 83       	st	Z, r24
    1fca:	91 83       	std	Z+1, r25	; 0x01
    1fcc:	a2 83       	std	Z+2, r26	; 0x02
    1fce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fd0:	8e 01       	movw	r16, r28
    1fd2:	07 59       	subi	r16, 0x97	; 151
    1fd4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd6:	fe 01       	movw	r30, r28
    1fd8:	e3 59       	subi	r30, 0x93	; 147
    1fda:	ff 4f       	sbci	r31, 0xFF	; 255
    1fdc:	60 81       	ld	r22, Z
    1fde:	71 81       	ldd	r23, Z+1	; 0x01
    1fe0:	82 81       	ldd	r24, Z+2	; 0x02
    1fe2:	93 81       	ldd	r25, Z+3	; 0x03
    1fe4:	20 e0       	ldi	r18, 0x00	; 0
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	4a ef       	ldi	r20, 0xFA	; 250
    1fea:	54 e4       	ldi	r21, 0x44	; 68
    1fec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ff0:	dc 01       	movw	r26, r24
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	f8 01       	movw	r30, r16
    1ff6:	80 83       	st	Z, r24
    1ff8:	91 83       	std	Z+1, r25	; 0x01
    1ffa:	a2 83       	std	Z+2, r26	; 0x02
    1ffc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ffe:	fe 01       	movw	r30, r28
    2000:	e7 59       	subi	r30, 0x97	; 151
    2002:	ff 4f       	sbci	r31, 0xFF	; 255
    2004:	60 81       	ld	r22, Z
    2006:	71 81       	ldd	r23, Z+1	; 0x01
    2008:	82 81       	ldd	r24, Z+2	; 0x02
    200a:	93 81       	ldd	r25, Z+3	; 0x03
    200c:	20 e0       	ldi	r18, 0x00	; 0
    200e:	30 e0       	ldi	r19, 0x00	; 0
    2010:	40 e8       	ldi	r20, 0x80	; 128
    2012:	5f e3       	ldi	r21, 0x3F	; 63
    2014:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2018:	88 23       	and	r24, r24
    201a:	44 f4       	brge	.+16     	; 0x202c <MODE_3+0x202>
		__ticks = 1;
    201c:	fe 01       	movw	r30, r28
    201e:	e9 59       	subi	r30, 0x99	; 153
    2020:	ff 4f       	sbci	r31, 0xFF	; 255
    2022:	81 e0       	ldi	r24, 0x01	; 1
    2024:	90 e0       	ldi	r25, 0x00	; 0
    2026:	91 83       	std	Z+1, r25	; 0x01
    2028:	80 83       	st	Z, r24
    202a:	64 c0       	rjmp	.+200    	; 0x20f4 <MODE_3+0x2ca>
	else if (__tmp > 65535)
    202c:	fe 01       	movw	r30, r28
    202e:	e7 59       	subi	r30, 0x97	; 151
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	60 81       	ld	r22, Z
    2034:	71 81       	ldd	r23, Z+1	; 0x01
    2036:	82 81       	ldd	r24, Z+2	; 0x02
    2038:	93 81       	ldd	r25, Z+3	; 0x03
    203a:	20 e0       	ldi	r18, 0x00	; 0
    203c:	3f ef       	ldi	r19, 0xFF	; 255
    203e:	4f e7       	ldi	r20, 0x7F	; 127
    2040:	57 e4       	ldi	r21, 0x47	; 71
    2042:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2046:	18 16       	cp	r1, r24
    2048:	0c f0       	brlt	.+2      	; 0x204c <MODE_3+0x222>
    204a:	43 c0       	rjmp	.+134    	; 0x20d2 <MODE_3+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    204c:	fe 01       	movw	r30, r28
    204e:	e3 59       	subi	r30, 0x93	; 147
    2050:	ff 4f       	sbci	r31, 0xFF	; 255
    2052:	60 81       	ld	r22, Z
    2054:	71 81       	ldd	r23, Z+1	; 0x01
    2056:	82 81       	ldd	r24, Z+2	; 0x02
    2058:	93 81       	ldd	r25, Z+3	; 0x03
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	40 e2       	ldi	r20, 0x20	; 32
    2060:	51 e4       	ldi	r21, 0x41	; 65
    2062:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2066:	dc 01       	movw	r26, r24
    2068:	cb 01       	movw	r24, r22
    206a:	8e 01       	movw	r16, r28
    206c:	09 59       	subi	r16, 0x99	; 153
    206e:	1f 4f       	sbci	r17, 0xFF	; 255
    2070:	bc 01       	movw	r22, r24
    2072:	cd 01       	movw	r24, r26
    2074:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2078:	dc 01       	movw	r26, r24
    207a:	cb 01       	movw	r24, r22
    207c:	f8 01       	movw	r30, r16
    207e:	91 83       	std	Z+1, r25	; 0x01
    2080:	80 83       	st	Z, r24
    2082:	1f c0       	rjmp	.+62     	; 0x20c2 <MODE_3+0x298>
    2084:	fe 01       	movw	r30, r28
    2086:	eb 59       	subi	r30, 0x9B	; 155
    2088:	ff 4f       	sbci	r31, 0xFF	; 255
    208a:	88 ec       	ldi	r24, 0xC8	; 200
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	91 83       	std	Z+1, r25	; 0x01
    2090:	80 83       	st	Z, r24
    2092:	fe 01       	movw	r30, r28
    2094:	eb 59       	subi	r30, 0x9B	; 155
    2096:	ff 4f       	sbci	r31, 0xFF	; 255
    2098:	80 81       	ld	r24, Z
    209a:	91 81       	ldd	r25, Z+1	; 0x01
    209c:	01 97       	sbiw	r24, 0x01	; 1
    209e:	f1 f7       	brne	.-4      	; 0x209c <MODE_3+0x272>
    20a0:	fe 01       	movw	r30, r28
    20a2:	eb 59       	subi	r30, 0x9B	; 155
    20a4:	ff 4f       	sbci	r31, 0xFF	; 255
    20a6:	91 83       	std	Z+1, r25	; 0x01
    20a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20aa:	de 01       	movw	r26, r28
    20ac:	a9 59       	subi	r26, 0x99	; 153
    20ae:	bf 4f       	sbci	r27, 0xFF	; 255
    20b0:	fe 01       	movw	r30, r28
    20b2:	e9 59       	subi	r30, 0x99	; 153
    20b4:	ff 4f       	sbci	r31, 0xFF	; 255
    20b6:	80 81       	ld	r24, Z
    20b8:	91 81       	ldd	r25, Z+1	; 0x01
    20ba:	01 97       	sbiw	r24, 0x01	; 1
    20bc:	11 96       	adiw	r26, 0x01	; 1
    20be:	9c 93       	st	X, r25
    20c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20c2:	fe 01       	movw	r30, r28
    20c4:	e9 59       	subi	r30, 0x99	; 153
    20c6:	ff 4f       	sbci	r31, 0xFF	; 255
    20c8:	80 81       	ld	r24, Z
    20ca:	91 81       	ldd	r25, Z+1	; 0x01
    20cc:	00 97       	sbiw	r24, 0x00	; 0
    20ce:	d1 f6       	brne	.-76     	; 0x2084 <MODE_3+0x25a>
    20d0:	27 c0       	rjmp	.+78     	; 0x2120 <MODE_3+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20d2:	8e 01       	movw	r16, r28
    20d4:	09 59       	subi	r16, 0x99	; 153
    20d6:	1f 4f       	sbci	r17, 0xFF	; 255
    20d8:	fe 01       	movw	r30, r28
    20da:	e7 59       	subi	r30, 0x97	; 151
    20dc:	ff 4f       	sbci	r31, 0xFF	; 255
    20de:	60 81       	ld	r22, Z
    20e0:	71 81       	ldd	r23, Z+1	; 0x01
    20e2:	82 81       	ldd	r24, Z+2	; 0x02
    20e4:	93 81       	ldd	r25, Z+3	; 0x03
    20e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20ea:	dc 01       	movw	r26, r24
    20ec:	cb 01       	movw	r24, r22
    20ee:	f8 01       	movw	r30, r16
    20f0:	91 83       	std	Z+1, r25	; 0x01
    20f2:	80 83       	st	Z, r24
    20f4:	de 01       	movw	r26, r28
    20f6:	ad 59       	subi	r26, 0x9D	; 157
    20f8:	bf 4f       	sbci	r27, 0xFF	; 255
    20fa:	fe 01       	movw	r30, r28
    20fc:	e9 59       	subi	r30, 0x99	; 153
    20fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2100:	80 81       	ld	r24, Z
    2102:	91 81       	ldd	r25, Z+1	; 0x01
    2104:	8d 93       	st	X+, r24
    2106:	9c 93       	st	X, r25
    2108:	fe 01       	movw	r30, r28
    210a:	ed 59       	subi	r30, 0x9D	; 157
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	80 81       	ld	r24, Z
    2110:	91 81       	ldd	r25, Z+1	; 0x01
    2112:	01 97       	sbiw	r24, 0x01	; 1
    2114:	f1 f7       	brne	.-4      	; 0x2112 <MODE_3+0x2e8>
    2116:	fe 01       	movw	r30, r28
    2118:	ed 59       	subi	r30, 0x9D	; 157
    211a:	ff 4f       	sbci	r31, 0xFF	; 255
    211c:	91 83       	std	Z+1, r25	; 0x01
    211e:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED8, OFF);
    2120:	87 e0       	ldi	r24, 0x07	; 7
    2122:	60 e0       	ldi	r22, 0x00	; 0
    2124:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED7, ON);
    2128:	86 e0       	ldi	r24, 0x06	; 6
    212a:	61 e0       	ldi	r22, 0x01	; 1
    212c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2130:	fe 01       	movw	r30, r28
    2132:	e1 5a       	subi	r30, 0xA1	; 161
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	80 e0       	ldi	r24, 0x00	; 0
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	a8 e4       	ldi	r26, 0x48	; 72
    213c:	b2 e4       	ldi	r27, 0x42	; 66
    213e:	80 83       	st	Z, r24
    2140:	91 83       	std	Z+1, r25	; 0x01
    2142:	a2 83       	std	Z+2, r26	; 0x02
    2144:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2146:	8e 01       	movw	r16, r28
    2148:	05 5a       	subi	r16, 0xA5	; 165
    214a:	1f 4f       	sbci	r17, 0xFF	; 255
    214c:	fe 01       	movw	r30, r28
    214e:	e1 5a       	subi	r30, 0xA1	; 161
    2150:	ff 4f       	sbci	r31, 0xFF	; 255
    2152:	60 81       	ld	r22, Z
    2154:	71 81       	ldd	r23, Z+1	; 0x01
    2156:	82 81       	ldd	r24, Z+2	; 0x02
    2158:	93 81       	ldd	r25, Z+3	; 0x03
    215a:	20 e0       	ldi	r18, 0x00	; 0
    215c:	30 e0       	ldi	r19, 0x00	; 0
    215e:	4a ef       	ldi	r20, 0xFA	; 250
    2160:	54 e4       	ldi	r21, 0x44	; 68
    2162:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2166:	dc 01       	movw	r26, r24
    2168:	cb 01       	movw	r24, r22
    216a:	f8 01       	movw	r30, r16
    216c:	80 83       	st	Z, r24
    216e:	91 83       	std	Z+1, r25	; 0x01
    2170:	a2 83       	std	Z+2, r26	; 0x02
    2172:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2174:	fe 01       	movw	r30, r28
    2176:	e5 5a       	subi	r30, 0xA5	; 165
    2178:	ff 4f       	sbci	r31, 0xFF	; 255
    217a:	60 81       	ld	r22, Z
    217c:	71 81       	ldd	r23, Z+1	; 0x01
    217e:	82 81       	ldd	r24, Z+2	; 0x02
    2180:	93 81       	ldd	r25, Z+3	; 0x03
    2182:	20 e0       	ldi	r18, 0x00	; 0
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	40 e8       	ldi	r20, 0x80	; 128
    2188:	5f e3       	ldi	r21, 0x3F	; 63
    218a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    218e:	88 23       	and	r24, r24
    2190:	44 f4       	brge	.+16     	; 0x21a2 <MODE_3+0x378>
		__ticks = 1;
    2192:	fe 01       	movw	r30, r28
    2194:	e7 5a       	subi	r30, 0xA7	; 167
    2196:	ff 4f       	sbci	r31, 0xFF	; 255
    2198:	81 e0       	ldi	r24, 0x01	; 1
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	91 83       	std	Z+1, r25	; 0x01
    219e:	80 83       	st	Z, r24
    21a0:	64 c0       	rjmp	.+200    	; 0x226a <MODE_3+0x440>
	else if (__tmp > 65535)
    21a2:	fe 01       	movw	r30, r28
    21a4:	e5 5a       	subi	r30, 0xA5	; 165
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	60 81       	ld	r22, Z
    21aa:	71 81       	ldd	r23, Z+1	; 0x01
    21ac:	82 81       	ldd	r24, Z+2	; 0x02
    21ae:	93 81       	ldd	r25, Z+3	; 0x03
    21b0:	20 e0       	ldi	r18, 0x00	; 0
    21b2:	3f ef       	ldi	r19, 0xFF	; 255
    21b4:	4f e7       	ldi	r20, 0x7F	; 127
    21b6:	57 e4       	ldi	r21, 0x47	; 71
    21b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21bc:	18 16       	cp	r1, r24
    21be:	0c f0       	brlt	.+2      	; 0x21c2 <MODE_3+0x398>
    21c0:	43 c0       	rjmp	.+134    	; 0x2248 <MODE_3+0x41e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21c2:	fe 01       	movw	r30, r28
    21c4:	e1 5a       	subi	r30, 0xA1	; 161
    21c6:	ff 4f       	sbci	r31, 0xFF	; 255
    21c8:	60 81       	ld	r22, Z
    21ca:	71 81       	ldd	r23, Z+1	; 0x01
    21cc:	82 81       	ldd	r24, Z+2	; 0x02
    21ce:	93 81       	ldd	r25, Z+3	; 0x03
    21d0:	20 e0       	ldi	r18, 0x00	; 0
    21d2:	30 e0       	ldi	r19, 0x00	; 0
    21d4:	40 e2       	ldi	r20, 0x20	; 32
    21d6:	51 e4       	ldi	r21, 0x41	; 65
    21d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21dc:	dc 01       	movw	r26, r24
    21de:	cb 01       	movw	r24, r22
    21e0:	8e 01       	movw	r16, r28
    21e2:	07 5a       	subi	r16, 0xA7	; 167
    21e4:	1f 4f       	sbci	r17, 0xFF	; 255
    21e6:	bc 01       	movw	r22, r24
    21e8:	cd 01       	movw	r24, r26
    21ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21ee:	dc 01       	movw	r26, r24
    21f0:	cb 01       	movw	r24, r22
    21f2:	f8 01       	movw	r30, r16
    21f4:	91 83       	std	Z+1, r25	; 0x01
    21f6:	80 83       	st	Z, r24
    21f8:	1f c0       	rjmp	.+62     	; 0x2238 <MODE_3+0x40e>
    21fa:	fe 01       	movw	r30, r28
    21fc:	e9 5a       	subi	r30, 0xA9	; 169
    21fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2200:	88 ec       	ldi	r24, 0xC8	; 200
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	91 83       	std	Z+1, r25	; 0x01
    2206:	80 83       	st	Z, r24
    2208:	fe 01       	movw	r30, r28
    220a:	e9 5a       	subi	r30, 0xA9	; 169
    220c:	ff 4f       	sbci	r31, 0xFF	; 255
    220e:	80 81       	ld	r24, Z
    2210:	91 81       	ldd	r25, Z+1	; 0x01
    2212:	01 97       	sbiw	r24, 0x01	; 1
    2214:	f1 f7       	brne	.-4      	; 0x2212 <MODE_3+0x3e8>
    2216:	fe 01       	movw	r30, r28
    2218:	e9 5a       	subi	r30, 0xA9	; 169
    221a:	ff 4f       	sbci	r31, 0xFF	; 255
    221c:	91 83       	std	Z+1, r25	; 0x01
    221e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2220:	de 01       	movw	r26, r28
    2222:	a7 5a       	subi	r26, 0xA7	; 167
    2224:	bf 4f       	sbci	r27, 0xFF	; 255
    2226:	fe 01       	movw	r30, r28
    2228:	e7 5a       	subi	r30, 0xA7	; 167
    222a:	ff 4f       	sbci	r31, 0xFF	; 255
    222c:	80 81       	ld	r24, Z
    222e:	91 81       	ldd	r25, Z+1	; 0x01
    2230:	01 97       	sbiw	r24, 0x01	; 1
    2232:	11 96       	adiw	r26, 0x01	; 1
    2234:	9c 93       	st	X, r25
    2236:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2238:	fe 01       	movw	r30, r28
    223a:	e7 5a       	subi	r30, 0xA7	; 167
    223c:	ff 4f       	sbci	r31, 0xFF	; 255
    223e:	80 81       	ld	r24, Z
    2240:	91 81       	ldd	r25, Z+1	; 0x01
    2242:	00 97       	sbiw	r24, 0x00	; 0
    2244:	d1 f6       	brne	.-76     	; 0x21fa <MODE_3+0x3d0>
    2246:	27 c0       	rjmp	.+78     	; 0x2296 <MODE_3+0x46c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2248:	8e 01       	movw	r16, r28
    224a:	07 5a       	subi	r16, 0xA7	; 167
    224c:	1f 4f       	sbci	r17, 0xFF	; 255
    224e:	fe 01       	movw	r30, r28
    2250:	e5 5a       	subi	r30, 0xA5	; 165
    2252:	ff 4f       	sbci	r31, 0xFF	; 255
    2254:	60 81       	ld	r22, Z
    2256:	71 81       	ldd	r23, Z+1	; 0x01
    2258:	82 81       	ldd	r24, Z+2	; 0x02
    225a:	93 81       	ldd	r25, Z+3	; 0x03
    225c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2260:	dc 01       	movw	r26, r24
    2262:	cb 01       	movw	r24, r22
    2264:	f8 01       	movw	r30, r16
    2266:	91 83       	std	Z+1, r25	; 0x01
    2268:	80 83       	st	Z, r24
    226a:	de 01       	movw	r26, r28
    226c:	ab 5a       	subi	r26, 0xAB	; 171
    226e:	bf 4f       	sbci	r27, 0xFF	; 255
    2270:	fe 01       	movw	r30, r28
    2272:	e7 5a       	subi	r30, 0xA7	; 167
    2274:	ff 4f       	sbci	r31, 0xFF	; 255
    2276:	80 81       	ld	r24, Z
    2278:	91 81       	ldd	r25, Z+1	; 0x01
    227a:	8d 93       	st	X+, r24
    227c:	9c 93       	st	X, r25
    227e:	fe 01       	movw	r30, r28
    2280:	eb 5a       	subi	r30, 0xAB	; 171
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	80 81       	ld	r24, Z
    2286:	91 81       	ldd	r25, Z+1	; 0x01
    2288:	01 97       	sbiw	r24, 0x01	; 1
    228a:	f1 f7       	brne	.-4      	; 0x2288 <MODE_3+0x45e>
    228c:	fe 01       	movw	r30, r28
    228e:	eb 5a       	subi	r30, 0xAB	; 171
    2290:	ff 4f       	sbci	r31, 0xFF	; 255
    2292:	91 83       	std	Z+1, r25	; 0x01
    2294:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED7, OFF);
    2296:	86 e0       	ldi	r24, 0x06	; 6
    2298:	60 e0       	ldi	r22, 0x00	; 0
    229a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED6, ON);
    229e:	85 e0       	ldi	r24, 0x05	; 5
    22a0:	61 e0       	ldi	r22, 0x01	; 1
    22a2:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    22a6:	fe 01       	movw	r30, r28
    22a8:	ef 5a       	subi	r30, 0xAF	; 175
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	80 e0       	ldi	r24, 0x00	; 0
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	a8 e4       	ldi	r26, 0x48	; 72
    22b2:	b2 e4       	ldi	r27, 0x42	; 66
    22b4:	80 83       	st	Z, r24
    22b6:	91 83       	std	Z+1, r25	; 0x01
    22b8:	a2 83       	std	Z+2, r26	; 0x02
    22ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22bc:	8e 01       	movw	r16, r28
    22be:	03 5b       	subi	r16, 0xB3	; 179
    22c0:	1f 4f       	sbci	r17, 0xFF	; 255
    22c2:	fe 01       	movw	r30, r28
    22c4:	ef 5a       	subi	r30, 0xAF	; 175
    22c6:	ff 4f       	sbci	r31, 0xFF	; 255
    22c8:	60 81       	ld	r22, Z
    22ca:	71 81       	ldd	r23, Z+1	; 0x01
    22cc:	82 81       	ldd	r24, Z+2	; 0x02
    22ce:	93 81       	ldd	r25, Z+3	; 0x03
    22d0:	20 e0       	ldi	r18, 0x00	; 0
    22d2:	30 e0       	ldi	r19, 0x00	; 0
    22d4:	4a ef       	ldi	r20, 0xFA	; 250
    22d6:	54 e4       	ldi	r21, 0x44	; 68
    22d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22dc:	dc 01       	movw	r26, r24
    22de:	cb 01       	movw	r24, r22
    22e0:	f8 01       	movw	r30, r16
    22e2:	80 83       	st	Z, r24
    22e4:	91 83       	std	Z+1, r25	; 0x01
    22e6:	a2 83       	std	Z+2, r26	; 0x02
    22e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22ea:	fe 01       	movw	r30, r28
    22ec:	e3 5b       	subi	r30, 0xB3	; 179
    22ee:	ff 4f       	sbci	r31, 0xFF	; 255
    22f0:	60 81       	ld	r22, Z
    22f2:	71 81       	ldd	r23, Z+1	; 0x01
    22f4:	82 81       	ldd	r24, Z+2	; 0x02
    22f6:	93 81       	ldd	r25, Z+3	; 0x03
    22f8:	20 e0       	ldi	r18, 0x00	; 0
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	40 e8       	ldi	r20, 0x80	; 128
    22fe:	5f e3       	ldi	r21, 0x3F	; 63
    2300:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2304:	88 23       	and	r24, r24
    2306:	44 f4       	brge	.+16     	; 0x2318 <MODE_3+0x4ee>
		__ticks = 1;
    2308:	fe 01       	movw	r30, r28
    230a:	e5 5b       	subi	r30, 0xB5	; 181
    230c:	ff 4f       	sbci	r31, 0xFF	; 255
    230e:	81 e0       	ldi	r24, 0x01	; 1
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	91 83       	std	Z+1, r25	; 0x01
    2314:	80 83       	st	Z, r24
    2316:	64 c0       	rjmp	.+200    	; 0x23e0 <MODE_3+0x5b6>
	else if (__tmp > 65535)
    2318:	fe 01       	movw	r30, r28
    231a:	e3 5b       	subi	r30, 0xB3	; 179
    231c:	ff 4f       	sbci	r31, 0xFF	; 255
    231e:	60 81       	ld	r22, Z
    2320:	71 81       	ldd	r23, Z+1	; 0x01
    2322:	82 81       	ldd	r24, Z+2	; 0x02
    2324:	93 81       	ldd	r25, Z+3	; 0x03
    2326:	20 e0       	ldi	r18, 0x00	; 0
    2328:	3f ef       	ldi	r19, 0xFF	; 255
    232a:	4f e7       	ldi	r20, 0x7F	; 127
    232c:	57 e4       	ldi	r21, 0x47	; 71
    232e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2332:	18 16       	cp	r1, r24
    2334:	0c f0       	brlt	.+2      	; 0x2338 <MODE_3+0x50e>
    2336:	43 c0       	rjmp	.+134    	; 0x23be <MODE_3+0x594>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2338:	fe 01       	movw	r30, r28
    233a:	ef 5a       	subi	r30, 0xAF	; 175
    233c:	ff 4f       	sbci	r31, 0xFF	; 255
    233e:	60 81       	ld	r22, Z
    2340:	71 81       	ldd	r23, Z+1	; 0x01
    2342:	82 81       	ldd	r24, Z+2	; 0x02
    2344:	93 81       	ldd	r25, Z+3	; 0x03
    2346:	20 e0       	ldi	r18, 0x00	; 0
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	40 e2       	ldi	r20, 0x20	; 32
    234c:	51 e4       	ldi	r21, 0x41	; 65
    234e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2352:	dc 01       	movw	r26, r24
    2354:	cb 01       	movw	r24, r22
    2356:	8e 01       	movw	r16, r28
    2358:	05 5b       	subi	r16, 0xB5	; 181
    235a:	1f 4f       	sbci	r17, 0xFF	; 255
    235c:	bc 01       	movw	r22, r24
    235e:	cd 01       	movw	r24, r26
    2360:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2364:	dc 01       	movw	r26, r24
    2366:	cb 01       	movw	r24, r22
    2368:	f8 01       	movw	r30, r16
    236a:	91 83       	std	Z+1, r25	; 0x01
    236c:	80 83       	st	Z, r24
    236e:	1f c0       	rjmp	.+62     	; 0x23ae <MODE_3+0x584>
    2370:	fe 01       	movw	r30, r28
    2372:	e7 5b       	subi	r30, 0xB7	; 183
    2374:	ff 4f       	sbci	r31, 0xFF	; 255
    2376:	88 ec       	ldi	r24, 0xC8	; 200
    2378:	90 e0       	ldi	r25, 0x00	; 0
    237a:	91 83       	std	Z+1, r25	; 0x01
    237c:	80 83       	st	Z, r24
    237e:	fe 01       	movw	r30, r28
    2380:	e7 5b       	subi	r30, 0xB7	; 183
    2382:	ff 4f       	sbci	r31, 0xFF	; 255
    2384:	80 81       	ld	r24, Z
    2386:	91 81       	ldd	r25, Z+1	; 0x01
    2388:	01 97       	sbiw	r24, 0x01	; 1
    238a:	f1 f7       	brne	.-4      	; 0x2388 <MODE_3+0x55e>
    238c:	fe 01       	movw	r30, r28
    238e:	e7 5b       	subi	r30, 0xB7	; 183
    2390:	ff 4f       	sbci	r31, 0xFF	; 255
    2392:	91 83       	std	Z+1, r25	; 0x01
    2394:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2396:	de 01       	movw	r26, r28
    2398:	a5 5b       	subi	r26, 0xB5	; 181
    239a:	bf 4f       	sbci	r27, 0xFF	; 255
    239c:	fe 01       	movw	r30, r28
    239e:	e5 5b       	subi	r30, 0xB5	; 181
    23a0:	ff 4f       	sbci	r31, 0xFF	; 255
    23a2:	80 81       	ld	r24, Z
    23a4:	91 81       	ldd	r25, Z+1	; 0x01
    23a6:	01 97       	sbiw	r24, 0x01	; 1
    23a8:	11 96       	adiw	r26, 0x01	; 1
    23aa:	9c 93       	st	X, r25
    23ac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23ae:	fe 01       	movw	r30, r28
    23b0:	e5 5b       	subi	r30, 0xB5	; 181
    23b2:	ff 4f       	sbci	r31, 0xFF	; 255
    23b4:	80 81       	ld	r24, Z
    23b6:	91 81       	ldd	r25, Z+1	; 0x01
    23b8:	00 97       	sbiw	r24, 0x00	; 0
    23ba:	d1 f6       	brne	.-76     	; 0x2370 <MODE_3+0x546>
    23bc:	27 c0       	rjmp	.+78     	; 0x240c <MODE_3+0x5e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23be:	8e 01       	movw	r16, r28
    23c0:	05 5b       	subi	r16, 0xB5	; 181
    23c2:	1f 4f       	sbci	r17, 0xFF	; 255
    23c4:	fe 01       	movw	r30, r28
    23c6:	e3 5b       	subi	r30, 0xB3	; 179
    23c8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ca:	60 81       	ld	r22, Z
    23cc:	71 81       	ldd	r23, Z+1	; 0x01
    23ce:	82 81       	ldd	r24, Z+2	; 0x02
    23d0:	93 81       	ldd	r25, Z+3	; 0x03
    23d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23d6:	dc 01       	movw	r26, r24
    23d8:	cb 01       	movw	r24, r22
    23da:	f8 01       	movw	r30, r16
    23dc:	91 83       	std	Z+1, r25	; 0x01
    23de:	80 83       	st	Z, r24
    23e0:	de 01       	movw	r26, r28
    23e2:	a9 5b       	subi	r26, 0xB9	; 185
    23e4:	bf 4f       	sbci	r27, 0xFF	; 255
    23e6:	fe 01       	movw	r30, r28
    23e8:	e5 5b       	subi	r30, 0xB5	; 181
    23ea:	ff 4f       	sbci	r31, 0xFF	; 255
    23ec:	80 81       	ld	r24, Z
    23ee:	91 81       	ldd	r25, Z+1	; 0x01
    23f0:	8d 93       	st	X+, r24
    23f2:	9c 93       	st	X, r25
    23f4:	fe 01       	movw	r30, r28
    23f6:	e9 5b       	subi	r30, 0xB9	; 185
    23f8:	ff 4f       	sbci	r31, 0xFF	; 255
    23fa:	80 81       	ld	r24, Z
    23fc:	91 81       	ldd	r25, Z+1	; 0x01
    23fe:	01 97       	sbiw	r24, 0x01	; 1
    2400:	f1 f7       	brne	.-4      	; 0x23fe <MODE_3+0x5d4>
    2402:	fe 01       	movw	r30, r28
    2404:	e9 5b       	subi	r30, 0xB9	; 185
    2406:	ff 4f       	sbci	r31, 0xFF	; 255
    2408:	91 83       	std	Z+1, r25	; 0x01
    240a:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED6, OFF);
    240c:	85 e0       	ldi	r24, 0x05	; 5
    240e:	60 e0       	ldi	r22, 0x00	; 0
    2410:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED5, ON);
    2414:	84 e0       	ldi	r24, 0x04	; 4
    2416:	61 e0       	ldi	r22, 0x01	; 1
    2418:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    241c:	fe 01       	movw	r30, r28
    241e:	ed 5b       	subi	r30, 0xBD	; 189
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	80 e0       	ldi	r24, 0x00	; 0
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	a8 e4       	ldi	r26, 0x48	; 72
    2428:	b2 e4       	ldi	r27, 0x42	; 66
    242a:	80 83       	st	Z, r24
    242c:	91 83       	std	Z+1, r25	; 0x01
    242e:	a2 83       	std	Z+2, r26	; 0x02
    2430:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2432:	8e 01       	movw	r16, r28
    2434:	01 5c       	subi	r16, 0xC1	; 193
    2436:	1f 4f       	sbci	r17, 0xFF	; 255
    2438:	fe 01       	movw	r30, r28
    243a:	ed 5b       	subi	r30, 0xBD	; 189
    243c:	ff 4f       	sbci	r31, 0xFF	; 255
    243e:	60 81       	ld	r22, Z
    2440:	71 81       	ldd	r23, Z+1	; 0x01
    2442:	82 81       	ldd	r24, Z+2	; 0x02
    2444:	93 81       	ldd	r25, Z+3	; 0x03
    2446:	20 e0       	ldi	r18, 0x00	; 0
    2448:	30 e0       	ldi	r19, 0x00	; 0
    244a:	4a ef       	ldi	r20, 0xFA	; 250
    244c:	54 e4       	ldi	r21, 0x44	; 68
    244e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2452:	dc 01       	movw	r26, r24
    2454:	cb 01       	movw	r24, r22
    2456:	f8 01       	movw	r30, r16
    2458:	80 83       	st	Z, r24
    245a:	91 83       	std	Z+1, r25	; 0x01
    245c:	a2 83       	std	Z+2, r26	; 0x02
    245e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2460:	fe 01       	movw	r30, r28
    2462:	ff 96       	adiw	r30, 0x3f	; 63
    2464:	60 81       	ld	r22, Z
    2466:	71 81       	ldd	r23, Z+1	; 0x01
    2468:	82 81       	ldd	r24, Z+2	; 0x02
    246a:	93 81       	ldd	r25, Z+3	; 0x03
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	40 e8       	ldi	r20, 0x80	; 128
    2472:	5f e3       	ldi	r21, 0x3F	; 63
    2474:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2478:	88 23       	and	r24, r24
    247a:	2c f4       	brge	.+10     	; 0x2486 <MODE_3+0x65c>
		__ticks = 1;
    247c:	81 e0       	ldi	r24, 0x01	; 1
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	9e af       	std	Y+62, r25	; 0x3e
    2482:	8d af       	std	Y+61, r24	; 0x3d
    2484:	46 c0       	rjmp	.+140    	; 0x2512 <MODE_3+0x6e8>
	else if (__tmp > 65535)
    2486:	fe 01       	movw	r30, r28
    2488:	ff 96       	adiw	r30, 0x3f	; 63
    248a:	60 81       	ld	r22, Z
    248c:	71 81       	ldd	r23, Z+1	; 0x01
    248e:	82 81       	ldd	r24, Z+2	; 0x02
    2490:	93 81       	ldd	r25, Z+3	; 0x03
    2492:	20 e0       	ldi	r18, 0x00	; 0
    2494:	3f ef       	ldi	r19, 0xFF	; 255
    2496:	4f e7       	ldi	r20, 0x7F	; 127
    2498:	57 e4       	ldi	r21, 0x47	; 71
    249a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    249e:	18 16       	cp	r1, r24
    24a0:	64 f5       	brge	.+88     	; 0x24fa <MODE_3+0x6d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24a2:	fe 01       	movw	r30, r28
    24a4:	ed 5b       	subi	r30, 0xBD	; 189
    24a6:	ff 4f       	sbci	r31, 0xFF	; 255
    24a8:	60 81       	ld	r22, Z
    24aa:	71 81       	ldd	r23, Z+1	; 0x01
    24ac:	82 81       	ldd	r24, Z+2	; 0x02
    24ae:	93 81       	ldd	r25, Z+3	; 0x03
    24b0:	20 e0       	ldi	r18, 0x00	; 0
    24b2:	30 e0       	ldi	r19, 0x00	; 0
    24b4:	40 e2       	ldi	r20, 0x20	; 32
    24b6:	51 e4       	ldi	r21, 0x41	; 65
    24b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24bc:	dc 01       	movw	r26, r24
    24be:	cb 01       	movw	r24, r22
    24c0:	bc 01       	movw	r22, r24
    24c2:	cd 01       	movw	r24, r26
    24c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24c8:	dc 01       	movw	r26, r24
    24ca:	cb 01       	movw	r24, r22
    24cc:	9e af       	std	Y+62, r25	; 0x3e
    24ce:	8d af       	std	Y+61, r24	; 0x3d
    24d0:	0f c0       	rjmp	.+30     	; 0x24f0 <MODE_3+0x6c6>
    24d2:	88 ec       	ldi	r24, 0xC8	; 200
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	9c af       	std	Y+60, r25	; 0x3c
    24d8:	8b af       	std	Y+59, r24	; 0x3b
    24da:	8b ad       	ldd	r24, Y+59	; 0x3b
    24dc:	9c ad       	ldd	r25, Y+60	; 0x3c
    24de:	01 97       	sbiw	r24, 0x01	; 1
    24e0:	f1 f7       	brne	.-4      	; 0x24de <MODE_3+0x6b4>
    24e2:	9c af       	std	Y+60, r25	; 0x3c
    24e4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24e6:	8d ad       	ldd	r24, Y+61	; 0x3d
    24e8:	9e ad       	ldd	r25, Y+62	; 0x3e
    24ea:	01 97       	sbiw	r24, 0x01	; 1
    24ec:	9e af       	std	Y+62, r25	; 0x3e
    24ee:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24f0:	8d ad       	ldd	r24, Y+61	; 0x3d
    24f2:	9e ad       	ldd	r25, Y+62	; 0x3e
    24f4:	00 97       	sbiw	r24, 0x00	; 0
    24f6:	69 f7       	brne	.-38     	; 0x24d2 <MODE_3+0x6a8>
    24f8:	16 c0       	rjmp	.+44     	; 0x2526 <MODE_3+0x6fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24fa:	fe 01       	movw	r30, r28
    24fc:	ff 96       	adiw	r30, 0x3f	; 63
    24fe:	60 81       	ld	r22, Z
    2500:	71 81       	ldd	r23, Z+1	; 0x01
    2502:	82 81       	ldd	r24, Z+2	; 0x02
    2504:	93 81       	ldd	r25, Z+3	; 0x03
    2506:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    250a:	dc 01       	movw	r26, r24
    250c:	cb 01       	movw	r24, r22
    250e:	9e af       	std	Y+62, r25	; 0x3e
    2510:	8d af       	std	Y+61, r24	; 0x3d
    2512:	8d ad       	ldd	r24, Y+61	; 0x3d
    2514:	9e ad       	ldd	r25, Y+62	; 0x3e
    2516:	9a af       	std	Y+58, r25	; 0x3a
    2518:	89 af       	std	Y+57, r24	; 0x39
    251a:	89 ad       	ldd	r24, Y+57	; 0x39
    251c:	9a ad       	ldd	r25, Y+58	; 0x3a
    251e:	01 97       	sbiw	r24, 0x01	; 1
    2520:	f1 f7       	brne	.-4      	; 0x251e <MODE_3+0x6f4>
    2522:	9a af       	std	Y+58, r25	; 0x3a
    2524:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED5, OFF);
    2526:	84 e0       	ldi	r24, 0x04	; 4
    2528:	60 e0       	ldi	r22, 0x00	; 0
    252a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED4, ON);
    252e:	83 e0       	ldi	r24, 0x03	; 3
    2530:	61 e0       	ldi	r22, 0x01	; 1
    2532:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2536:	80 e0       	ldi	r24, 0x00	; 0
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	a8 e4       	ldi	r26, 0x48	; 72
    253c:	b2 e4       	ldi	r27, 0x42	; 66
    253e:	8d ab       	std	Y+53, r24	; 0x35
    2540:	9e ab       	std	Y+54, r25	; 0x36
    2542:	af ab       	std	Y+55, r26	; 0x37
    2544:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2546:	6d a9       	ldd	r22, Y+53	; 0x35
    2548:	7e a9       	ldd	r23, Y+54	; 0x36
    254a:	8f a9       	ldd	r24, Y+55	; 0x37
    254c:	98 ad       	ldd	r25, Y+56	; 0x38
    254e:	20 e0       	ldi	r18, 0x00	; 0
    2550:	30 e0       	ldi	r19, 0x00	; 0
    2552:	4a ef       	ldi	r20, 0xFA	; 250
    2554:	54 e4       	ldi	r21, 0x44	; 68
    2556:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    255a:	dc 01       	movw	r26, r24
    255c:	cb 01       	movw	r24, r22
    255e:	89 ab       	std	Y+49, r24	; 0x31
    2560:	9a ab       	std	Y+50, r25	; 0x32
    2562:	ab ab       	std	Y+51, r26	; 0x33
    2564:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2566:	69 a9       	ldd	r22, Y+49	; 0x31
    2568:	7a a9       	ldd	r23, Y+50	; 0x32
    256a:	8b a9       	ldd	r24, Y+51	; 0x33
    256c:	9c a9       	ldd	r25, Y+52	; 0x34
    256e:	20 e0       	ldi	r18, 0x00	; 0
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	40 e8       	ldi	r20, 0x80	; 128
    2574:	5f e3       	ldi	r21, 0x3F	; 63
    2576:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    257a:	88 23       	and	r24, r24
    257c:	2c f4       	brge	.+10     	; 0x2588 <MODE_3+0x75e>
		__ticks = 1;
    257e:	81 e0       	ldi	r24, 0x01	; 1
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	98 ab       	std	Y+48, r25	; 0x30
    2584:	8f a7       	std	Y+47, r24	; 0x2f
    2586:	3f c0       	rjmp	.+126    	; 0x2606 <MODE_3+0x7dc>
	else if (__tmp > 65535)
    2588:	69 a9       	ldd	r22, Y+49	; 0x31
    258a:	7a a9       	ldd	r23, Y+50	; 0x32
    258c:	8b a9       	ldd	r24, Y+51	; 0x33
    258e:	9c a9       	ldd	r25, Y+52	; 0x34
    2590:	20 e0       	ldi	r18, 0x00	; 0
    2592:	3f ef       	ldi	r19, 0xFF	; 255
    2594:	4f e7       	ldi	r20, 0x7F	; 127
    2596:	57 e4       	ldi	r21, 0x47	; 71
    2598:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    259c:	18 16       	cp	r1, r24
    259e:	4c f5       	brge	.+82     	; 0x25f2 <MODE_3+0x7c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25a0:	6d a9       	ldd	r22, Y+53	; 0x35
    25a2:	7e a9       	ldd	r23, Y+54	; 0x36
    25a4:	8f a9       	ldd	r24, Y+55	; 0x37
    25a6:	98 ad       	ldd	r25, Y+56	; 0x38
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	30 e0       	ldi	r19, 0x00	; 0
    25ac:	40 e2       	ldi	r20, 0x20	; 32
    25ae:	51 e4       	ldi	r21, 0x41	; 65
    25b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25b4:	dc 01       	movw	r26, r24
    25b6:	cb 01       	movw	r24, r22
    25b8:	bc 01       	movw	r22, r24
    25ba:	cd 01       	movw	r24, r26
    25bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25c0:	dc 01       	movw	r26, r24
    25c2:	cb 01       	movw	r24, r22
    25c4:	98 ab       	std	Y+48, r25	; 0x30
    25c6:	8f a7       	std	Y+47, r24	; 0x2f
    25c8:	0f c0       	rjmp	.+30     	; 0x25e8 <MODE_3+0x7be>
    25ca:	88 ec       	ldi	r24, 0xC8	; 200
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	9e a7       	std	Y+46, r25	; 0x2e
    25d0:	8d a7       	std	Y+45, r24	; 0x2d
    25d2:	8d a5       	ldd	r24, Y+45	; 0x2d
    25d4:	9e a5       	ldd	r25, Y+46	; 0x2e
    25d6:	01 97       	sbiw	r24, 0x01	; 1
    25d8:	f1 f7       	brne	.-4      	; 0x25d6 <MODE_3+0x7ac>
    25da:	9e a7       	std	Y+46, r25	; 0x2e
    25dc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25de:	8f a5       	ldd	r24, Y+47	; 0x2f
    25e0:	98 a9       	ldd	r25, Y+48	; 0x30
    25e2:	01 97       	sbiw	r24, 0x01	; 1
    25e4:	98 ab       	std	Y+48, r25	; 0x30
    25e6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    25ea:	98 a9       	ldd	r25, Y+48	; 0x30
    25ec:	00 97       	sbiw	r24, 0x00	; 0
    25ee:	69 f7       	brne	.-38     	; 0x25ca <MODE_3+0x7a0>
    25f0:	14 c0       	rjmp	.+40     	; 0x261a <MODE_3+0x7f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25f2:	69 a9       	ldd	r22, Y+49	; 0x31
    25f4:	7a a9       	ldd	r23, Y+50	; 0x32
    25f6:	8b a9       	ldd	r24, Y+51	; 0x33
    25f8:	9c a9       	ldd	r25, Y+52	; 0x34
    25fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25fe:	dc 01       	movw	r26, r24
    2600:	cb 01       	movw	r24, r22
    2602:	98 ab       	std	Y+48, r25	; 0x30
    2604:	8f a7       	std	Y+47, r24	; 0x2f
    2606:	8f a5       	ldd	r24, Y+47	; 0x2f
    2608:	98 a9       	ldd	r25, Y+48	; 0x30
    260a:	9c a7       	std	Y+44, r25	; 0x2c
    260c:	8b a7       	std	Y+43, r24	; 0x2b
    260e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2610:	9c a5       	ldd	r25, Y+44	; 0x2c
    2612:	01 97       	sbiw	r24, 0x01	; 1
    2614:	f1 f7       	brne	.-4      	; 0x2612 <MODE_3+0x7e8>
    2616:	9c a7       	std	Y+44, r25	; 0x2c
    2618:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED4, OFF);
    261a:	83 e0       	ldi	r24, 0x03	; 3
    261c:	60 e0       	ldi	r22, 0x00	; 0
    261e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED3, ON);
    2622:	82 e0       	ldi	r24, 0x02	; 2
    2624:	61 e0       	ldi	r22, 0x01	; 1
    2626:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    262a:	80 e0       	ldi	r24, 0x00	; 0
    262c:	90 e0       	ldi	r25, 0x00	; 0
    262e:	a8 e4       	ldi	r26, 0x48	; 72
    2630:	b2 e4       	ldi	r27, 0x42	; 66
    2632:	8f a3       	std	Y+39, r24	; 0x27
    2634:	98 a7       	std	Y+40, r25	; 0x28
    2636:	a9 a7       	std	Y+41, r26	; 0x29
    2638:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    263a:	6f a1       	ldd	r22, Y+39	; 0x27
    263c:	78 a5       	ldd	r23, Y+40	; 0x28
    263e:	89 a5       	ldd	r24, Y+41	; 0x29
    2640:	9a a5       	ldd	r25, Y+42	; 0x2a
    2642:	20 e0       	ldi	r18, 0x00	; 0
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	4a ef       	ldi	r20, 0xFA	; 250
    2648:	54 e4       	ldi	r21, 0x44	; 68
    264a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    264e:	dc 01       	movw	r26, r24
    2650:	cb 01       	movw	r24, r22
    2652:	8b a3       	std	Y+35, r24	; 0x23
    2654:	9c a3       	std	Y+36, r25	; 0x24
    2656:	ad a3       	std	Y+37, r26	; 0x25
    2658:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    265a:	6b a1       	ldd	r22, Y+35	; 0x23
    265c:	7c a1       	ldd	r23, Y+36	; 0x24
    265e:	8d a1       	ldd	r24, Y+37	; 0x25
    2660:	9e a1       	ldd	r25, Y+38	; 0x26
    2662:	20 e0       	ldi	r18, 0x00	; 0
    2664:	30 e0       	ldi	r19, 0x00	; 0
    2666:	40 e8       	ldi	r20, 0x80	; 128
    2668:	5f e3       	ldi	r21, 0x3F	; 63
    266a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    266e:	88 23       	and	r24, r24
    2670:	2c f4       	brge	.+10     	; 0x267c <MODE_3+0x852>
		__ticks = 1;
    2672:	81 e0       	ldi	r24, 0x01	; 1
    2674:	90 e0       	ldi	r25, 0x00	; 0
    2676:	9a a3       	std	Y+34, r25	; 0x22
    2678:	89 a3       	std	Y+33, r24	; 0x21
    267a:	3f c0       	rjmp	.+126    	; 0x26fa <MODE_3+0x8d0>
	else if (__tmp > 65535)
    267c:	6b a1       	ldd	r22, Y+35	; 0x23
    267e:	7c a1       	ldd	r23, Y+36	; 0x24
    2680:	8d a1       	ldd	r24, Y+37	; 0x25
    2682:	9e a1       	ldd	r25, Y+38	; 0x26
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	3f ef       	ldi	r19, 0xFF	; 255
    2688:	4f e7       	ldi	r20, 0x7F	; 127
    268a:	57 e4       	ldi	r21, 0x47	; 71
    268c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2690:	18 16       	cp	r1, r24
    2692:	4c f5       	brge	.+82     	; 0x26e6 <MODE_3+0x8bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2694:	6f a1       	ldd	r22, Y+39	; 0x27
    2696:	78 a5       	ldd	r23, Y+40	; 0x28
    2698:	89 a5       	ldd	r24, Y+41	; 0x29
    269a:	9a a5       	ldd	r25, Y+42	; 0x2a
    269c:	20 e0       	ldi	r18, 0x00	; 0
    269e:	30 e0       	ldi	r19, 0x00	; 0
    26a0:	40 e2       	ldi	r20, 0x20	; 32
    26a2:	51 e4       	ldi	r21, 0x41	; 65
    26a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26a8:	dc 01       	movw	r26, r24
    26aa:	cb 01       	movw	r24, r22
    26ac:	bc 01       	movw	r22, r24
    26ae:	cd 01       	movw	r24, r26
    26b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26b4:	dc 01       	movw	r26, r24
    26b6:	cb 01       	movw	r24, r22
    26b8:	9a a3       	std	Y+34, r25	; 0x22
    26ba:	89 a3       	std	Y+33, r24	; 0x21
    26bc:	0f c0       	rjmp	.+30     	; 0x26dc <MODE_3+0x8b2>
    26be:	88 ec       	ldi	r24, 0xC8	; 200
    26c0:	90 e0       	ldi	r25, 0x00	; 0
    26c2:	98 a3       	std	Y+32, r25	; 0x20
    26c4:	8f 8f       	std	Y+31, r24	; 0x1f
    26c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    26c8:	98 a1       	ldd	r25, Y+32	; 0x20
    26ca:	01 97       	sbiw	r24, 0x01	; 1
    26cc:	f1 f7       	brne	.-4      	; 0x26ca <MODE_3+0x8a0>
    26ce:	98 a3       	std	Y+32, r25	; 0x20
    26d0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26d2:	89 a1       	ldd	r24, Y+33	; 0x21
    26d4:	9a a1       	ldd	r25, Y+34	; 0x22
    26d6:	01 97       	sbiw	r24, 0x01	; 1
    26d8:	9a a3       	std	Y+34, r25	; 0x22
    26da:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26dc:	89 a1       	ldd	r24, Y+33	; 0x21
    26de:	9a a1       	ldd	r25, Y+34	; 0x22
    26e0:	00 97       	sbiw	r24, 0x00	; 0
    26e2:	69 f7       	brne	.-38     	; 0x26be <MODE_3+0x894>
    26e4:	14 c0       	rjmp	.+40     	; 0x270e <MODE_3+0x8e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26e6:	6b a1       	ldd	r22, Y+35	; 0x23
    26e8:	7c a1       	ldd	r23, Y+36	; 0x24
    26ea:	8d a1       	ldd	r24, Y+37	; 0x25
    26ec:	9e a1       	ldd	r25, Y+38	; 0x26
    26ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26f2:	dc 01       	movw	r26, r24
    26f4:	cb 01       	movw	r24, r22
    26f6:	9a a3       	std	Y+34, r25	; 0x22
    26f8:	89 a3       	std	Y+33, r24	; 0x21
    26fa:	89 a1       	ldd	r24, Y+33	; 0x21
    26fc:	9a a1       	ldd	r25, Y+34	; 0x22
    26fe:	9e 8f       	std	Y+30, r25	; 0x1e
    2700:	8d 8f       	std	Y+29, r24	; 0x1d
    2702:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2704:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2706:	01 97       	sbiw	r24, 0x01	; 1
    2708:	f1 f7       	brne	.-4      	; 0x2706 <MODE_3+0x8dc>
    270a:	9e 8f       	std	Y+30, r25	; 0x1e
    270c:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED3, OFF);
    270e:	82 e0       	ldi	r24, 0x02	; 2
    2710:	60 e0       	ldi	r22, 0x00	; 0
    2712:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED2, ON);
    2716:	81 e0       	ldi	r24, 0x01	; 1
    2718:	61 e0       	ldi	r22, 0x01	; 1
    271a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    271e:	80 e0       	ldi	r24, 0x00	; 0
    2720:	90 e0       	ldi	r25, 0x00	; 0
    2722:	a8 e4       	ldi	r26, 0x48	; 72
    2724:	b2 e4       	ldi	r27, 0x42	; 66
    2726:	89 8f       	std	Y+25, r24	; 0x19
    2728:	9a 8f       	std	Y+26, r25	; 0x1a
    272a:	ab 8f       	std	Y+27, r26	; 0x1b
    272c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    272e:	69 8d       	ldd	r22, Y+25	; 0x19
    2730:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2732:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2734:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2736:	20 e0       	ldi	r18, 0x00	; 0
    2738:	30 e0       	ldi	r19, 0x00	; 0
    273a:	4a ef       	ldi	r20, 0xFA	; 250
    273c:	54 e4       	ldi	r21, 0x44	; 68
    273e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2742:	dc 01       	movw	r26, r24
    2744:	cb 01       	movw	r24, r22
    2746:	8d 8b       	std	Y+21, r24	; 0x15
    2748:	9e 8b       	std	Y+22, r25	; 0x16
    274a:	af 8b       	std	Y+23, r26	; 0x17
    274c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    274e:	6d 89       	ldd	r22, Y+21	; 0x15
    2750:	7e 89       	ldd	r23, Y+22	; 0x16
    2752:	8f 89       	ldd	r24, Y+23	; 0x17
    2754:	98 8d       	ldd	r25, Y+24	; 0x18
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	40 e8       	ldi	r20, 0x80	; 128
    275c:	5f e3       	ldi	r21, 0x3F	; 63
    275e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2762:	88 23       	and	r24, r24
    2764:	2c f4       	brge	.+10     	; 0x2770 <MODE_3+0x946>
		__ticks = 1;
    2766:	81 e0       	ldi	r24, 0x01	; 1
    2768:	90 e0       	ldi	r25, 0x00	; 0
    276a:	9c 8b       	std	Y+20, r25	; 0x14
    276c:	8b 8b       	std	Y+19, r24	; 0x13
    276e:	3f c0       	rjmp	.+126    	; 0x27ee <MODE_3+0x9c4>
	else if (__tmp > 65535)
    2770:	6d 89       	ldd	r22, Y+21	; 0x15
    2772:	7e 89       	ldd	r23, Y+22	; 0x16
    2774:	8f 89       	ldd	r24, Y+23	; 0x17
    2776:	98 8d       	ldd	r25, Y+24	; 0x18
    2778:	20 e0       	ldi	r18, 0x00	; 0
    277a:	3f ef       	ldi	r19, 0xFF	; 255
    277c:	4f e7       	ldi	r20, 0x7F	; 127
    277e:	57 e4       	ldi	r21, 0x47	; 71
    2780:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2784:	18 16       	cp	r1, r24
    2786:	4c f5       	brge	.+82     	; 0x27da <MODE_3+0x9b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2788:	69 8d       	ldd	r22, Y+25	; 0x19
    278a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    278c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    278e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2790:	20 e0       	ldi	r18, 0x00	; 0
    2792:	30 e0       	ldi	r19, 0x00	; 0
    2794:	40 e2       	ldi	r20, 0x20	; 32
    2796:	51 e4       	ldi	r21, 0x41	; 65
    2798:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    279c:	dc 01       	movw	r26, r24
    279e:	cb 01       	movw	r24, r22
    27a0:	bc 01       	movw	r22, r24
    27a2:	cd 01       	movw	r24, r26
    27a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27a8:	dc 01       	movw	r26, r24
    27aa:	cb 01       	movw	r24, r22
    27ac:	9c 8b       	std	Y+20, r25	; 0x14
    27ae:	8b 8b       	std	Y+19, r24	; 0x13
    27b0:	0f c0       	rjmp	.+30     	; 0x27d0 <MODE_3+0x9a6>
    27b2:	88 ec       	ldi	r24, 0xC8	; 200
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	9a 8b       	std	Y+18, r25	; 0x12
    27b8:	89 8b       	std	Y+17, r24	; 0x11
    27ba:	89 89       	ldd	r24, Y+17	; 0x11
    27bc:	9a 89       	ldd	r25, Y+18	; 0x12
    27be:	01 97       	sbiw	r24, 0x01	; 1
    27c0:	f1 f7       	brne	.-4      	; 0x27be <MODE_3+0x994>
    27c2:	9a 8b       	std	Y+18, r25	; 0x12
    27c4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27c6:	8b 89       	ldd	r24, Y+19	; 0x13
    27c8:	9c 89       	ldd	r25, Y+20	; 0x14
    27ca:	01 97       	sbiw	r24, 0x01	; 1
    27cc:	9c 8b       	std	Y+20, r25	; 0x14
    27ce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27d0:	8b 89       	ldd	r24, Y+19	; 0x13
    27d2:	9c 89       	ldd	r25, Y+20	; 0x14
    27d4:	00 97       	sbiw	r24, 0x00	; 0
    27d6:	69 f7       	brne	.-38     	; 0x27b2 <MODE_3+0x988>
    27d8:	14 c0       	rjmp	.+40     	; 0x2802 <MODE_3+0x9d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27da:	6d 89       	ldd	r22, Y+21	; 0x15
    27dc:	7e 89       	ldd	r23, Y+22	; 0x16
    27de:	8f 89       	ldd	r24, Y+23	; 0x17
    27e0:	98 8d       	ldd	r25, Y+24	; 0x18
    27e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27e6:	dc 01       	movw	r26, r24
    27e8:	cb 01       	movw	r24, r22
    27ea:	9c 8b       	std	Y+20, r25	; 0x14
    27ec:	8b 8b       	std	Y+19, r24	; 0x13
    27ee:	8b 89       	ldd	r24, Y+19	; 0x13
    27f0:	9c 89       	ldd	r25, Y+20	; 0x14
    27f2:	98 8b       	std	Y+16, r25	; 0x10
    27f4:	8f 87       	std	Y+15, r24	; 0x0f
    27f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    27f8:	98 89       	ldd	r25, Y+16	; 0x10
    27fa:	01 97       	sbiw	r24, 0x01	; 1
    27fc:	f1 f7       	brne	.-4      	; 0x27fa <MODE_3+0x9d0>
    27fe:	98 8b       	std	Y+16, r25	; 0x10
    2800:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED2, OFF);
    2802:	81 e0       	ldi	r24, 0x01	; 1
    2804:	60 e0       	ldi	r22, 0x00	; 0
    2806:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED1, ON);
    280a:	80 e0       	ldi	r24, 0x00	; 0
    280c:	61 e0       	ldi	r22, 0x01	; 1
    280e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2812:	80 e0       	ldi	r24, 0x00	; 0
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	aa e7       	ldi	r26, 0x7A	; 122
    2818:	b3 e4       	ldi	r27, 0x43	; 67
    281a:	8b 87       	std	Y+11, r24	; 0x0b
    281c:	9c 87       	std	Y+12, r25	; 0x0c
    281e:	ad 87       	std	Y+13, r26	; 0x0d
    2820:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2822:	6b 85       	ldd	r22, Y+11	; 0x0b
    2824:	7c 85       	ldd	r23, Y+12	; 0x0c
    2826:	8d 85       	ldd	r24, Y+13	; 0x0d
    2828:	9e 85       	ldd	r25, Y+14	; 0x0e
    282a:	20 e0       	ldi	r18, 0x00	; 0
    282c:	30 e0       	ldi	r19, 0x00	; 0
    282e:	4a ef       	ldi	r20, 0xFA	; 250
    2830:	54 e4       	ldi	r21, 0x44	; 68
    2832:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2836:	dc 01       	movw	r26, r24
    2838:	cb 01       	movw	r24, r22
    283a:	8f 83       	std	Y+7, r24	; 0x07
    283c:	98 87       	std	Y+8, r25	; 0x08
    283e:	a9 87       	std	Y+9, r26	; 0x09
    2840:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2842:	6f 81       	ldd	r22, Y+7	; 0x07
    2844:	78 85       	ldd	r23, Y+8	; 0x08
    2846:	89 85       	ldd	r24, Y+9	; 0x09
    2848:	9a 85       	ldd	r25, Y+10	; 0x0a
    284a:	20 e0       	ldi	r18, 0x00	; 0
    284c:	30 e0       	ldi	r19, 0x00	; 0
    284e:	40 e8       	ldi	r20, 0x80	; 128
    2850:	5f e3       	ldi	r21, 0x3F	; 63
    2852:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2856:	88 23       	and	r24, r24
    2858:	2c f4       	brge	.+10     	; 0x2864 <MODE_3+0xa3a>
		__ticks = 1;
    285a:	81 e0       	ldi	r24, 0x01	; 1
    285c:	90 e0       	ldi	r25, 0x00	; 0
    285e:	9e 83       	std	Y+6, r25	; 0x06
    2860:	8d 83       	std	Y+5, r24	; 0x05
    2862:	3f c0       	rjmp	.+126    	; 0x28e2 <MODE_3+0xab8>
	else if (__tmp > 65535)
    2864:	6f 81       	ldd	r22, Y+7	; 0x07
    2866:	78 85       	ldd	r23, Y+8	; 0x08
    2868:	89 85       	ldd	r24, Y+9	; 0x09
    286a:	9a 85       	ldd	r25, Y+10	; 0x0a
    286c:	20 e0       	ldi	r18, 0x00	; 0
    286e:	3f ef       	ldi	r19, 0xFF	; 255
    2870:	4f e7       	ldi	r20, 0x7F	; 127
    2872:	57 e4       	ldi	r21, 0x47	; 71
    2874:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2878:	18 16       	cp	r1, r24
    287a:	4c f5       	brge	.+82     	; 0x28ce <MODE_3+0xaa4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    287c:	6b 85       	ldd	r22, Y+11	; 0x0b
    287e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2880:	8d 85       	ldd	r24, Y+13	; 0x0d
    2882:	9e 85       	ldd	r25, Y+14	; 0x0e
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	40 e2       	ldi	r20, 0x20	; 32
    288a:	51 e4       	ldi	r21, 0x41	; 65
    288c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2890:	dc 01       	movw	r26, r24
    2892:	cb 01       	movw	r24, r22
    2894:	bc 01       	movw	r22, r24
    2896:	cd 01       	movw	r24, r26
    2898:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    289c:	dc 01       	movw	r26, r24
    289e:	cb 01       	movw	r24, r22
    28a0:	9e 83       	std	Y+6, r25	; 0x06
    28a2:	8d 83       	std	Y+5, r24	; 0x05
    28a4:	0f c0       	rjmp	.+30     	; 0x28c4 <MODE_3+0xa9a>
    28a6:	88 ec       	ldi	r24, 0xC8	; 200
    28a8:	90 e0       	ldi	r25, 0x00	; 0
    28aa:	9c 83       	std	Y+4, r25	; 0x04
    28ac:	8b 83       	std	Y+3, r24	; 0x03
    28ae:	8b 81       	ldd	r24, Y+3	; 0x03
    28b0:	9c 81       	ldd	r25, Y+4	; 0x04
    28b2:	01 97       	sbiw	r24, 0x01	; 1
    28b4:	f1 f7       	brne	.-4      	; 0x28b2 <MODE_3+0xa88>
    28b6:	9c 83       	std	Y+4, r25	; 0x04
    28b8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28ba:	8d 81       	ldd	r24, Y+5	; 0x05
    28bc:	9e 81       	ldd	r25, Y+6	; 0x06
    28be:	01 97       	sbiw	r24, 0x01	; 1
    28c0:	9e 83       	std	Y+6, r25	; 0x06
    28c2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28c4:	8d 81       	ldd	r24, Y+5	; 0x05
    28c6:	9e 81       	ldd	r25, Y+6	; 0x06
    28c8:	00 97       	sbiw	r24, 0x00	; 0
    28ca:	69 f7       	brne	.-38     	; 0x28a6 <MODE_3+0xa7c>
    28cc:	14 c0       	rjmp	.+40     	; 0x28f6 <MODE_3+0xacc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28ce:	6f 81       	ldd	r22, Y+7	; 0x07
    28d0:	78 85       	ldd	r23, Y+8	; 0x08
    28d2:	89 85       	ldd	r24, Y+9	; 0x09
    28d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    28d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28da:	dc 01       	movw	r26, r24
    28dc:	cb 01       	movw	r24, r22
    28de:	9e 83       	std	Y+6, r25	; 0x06
    28e0:	8d 83       	std	Y+5, r24	; 0x05
    28e2:	8d 81       	ldd	r24, Y+5	; 0x05
    28e4:	9e 81       	ldd	r25, Y+6	; 0x06
    28e6:	9a 83       	std	Y+2, r25	; 0x02
    28e8:	89 83       	std	Y+1, r24	; 0x01
    28ea:	89 81       	ldd	r24, Y+1	; 0x01
    28ec:	9a 81       	ldd	r25, Y+2	; 0x02
    28ee:	01 97       	sbiw	r24, 0x01	; 1
    28f0:	f1 f7       	brne	.-4      	; 0x28ee <MODE_3+0xac4>
    28f2:	9a 83       	std	Y+2, r25	; 0x02
    28f4:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(250);
}/** @end MODE_3 */
    28f6:	c2 58       	subi	r28, 0x82	; 130
    28f8:	df 4f       	sbci	r29, 0xFF	; 255
    28fa:	0f b6       	in	r0, 0x3f	; 63
    28fc:	f8 94       	cli
    28fe:	de bf       	out	0x3e, r29	; 62
    2900:	0f be       	out	0x3f, r0	; 63
    2902:	cd bf       	out	0x3d, r28	; 61
    2904:	cf 91       	pop	r28
    2906:	df 91       	pop	r29
    2908:	1f 91       	pop	r17
    290a:	0f 91       	pop	r16
    290c:	08 95       	ret

0000290e <MODE_4>:
/**
 * @brief function to implement mode 4
 */
static void MODE_4(void)
{
    290e:	0f 93       	push	r16
    2910:	1f 93       	push	r17
    2912:	df 93       	push	r29
    2914:	cf 93       	push	r28
    2916:	cd b7       	in	r28, 0x3d	; 61
    2918:	de b7       	in	r29, 0x3e	; 62
    291a:	c0 57       	subi	r28, 0x70	; 112
    291c:	d0 40       	sbci	r29, 0x00	; 0
    291e:	0f b6       	in	r0, 0x3f	; 63
    2920:	f8 94       	cli
    2922:	de bf       	out	0x3e, r29	; 62
    2924:	0f be       	out	0x3f, r0	; 63
    2926:	cd bf       	out	0x3d, r28	; 61
	LED_CTRL(LED1, ON);
    2928:	80 e0       	ldi	r24, 0x00	; 0
    292a:	61 e0       	ldi	r22, 0x01	; 1
    292c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED8, ON);
    2930:	87 e0       	ldi	r24, 0x07	; 7
    2932:	61 e0       	ldi	r22, 0x01	; 1
    2934:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2938:	fe 01       	movw	r30, r28
    293a:	e3 59       	subi	r30, 0x93	; 147
    293c:	ff 4f       	sbci	r31, 0xFF	; 255
    293e:	80 e0       	ldi	r24, 0x00	; 0
    2940:	90 e0       	ldi	r25, 0x00	; 0
    2942:	a8 e4       	ldi	r26, 0x48	; 72
    2944:	b2 e4       	ldi	r27, 0x42	; 66
    2946:	80 83       	st	Z, r24
    2948:	91 83       	std	Z+1, r25	; 0x01
    294a:	a2 83       	std	Z+2, r26	; 0x02
    294c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    294e:	8e 01       	movw	r16, r28
    2950:	07 59       	subi	r16, 0x97	; 151
    2952:	1f 4f       	sbci	r17, 0xFF	; 255
    2954:	fe 01       	movw	r30, r28
    2956:	e3 59       	subi	r30, 0x93	; 147
    2958:	ff 4f       	sbci	r31, 0xFF	; 255
    295a:	60 81       	ld	r22, Z
    295c:	71 81       	ldd	r23, Z+1	; 0x01
    295e:	82 81       	ldd	r24, Z+2	; 0x02
    2960:	93 81       	ldd	r25, Z+3	; 0x03
    2962:	20 e0       	ldi	r18, 0x00	; 0
    2964:	30 e0       	ldi	r19, 0x00	; 0
    2966:	4a ef       	ldi	r20, 0xFA	; 250
    2968:	54 e4       	ldi	r21, 0x44	; 68
    296a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    296e:	dc 01       	movw	r26, r24
    2970:	cb 01       	movw	r24, r22
    2972:	f8 01       	movw	r30, r16
    2974:	80 83       	st	Z, r24
    2976:	91 83       	std	Z+1, r25	; 0x01
    2978:	a2 83       	std	Z+2, r26	; 0x02
    297a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    297c:	fe 01       	movw	r30, r28
    297e:	e7 59       	subi	r30, 0x97	; 151
    2980:	ff 4f       	sbci	r31, 0xFF	; 255
    2982:	60 81       	ld	r22, Z
    2984:	71 81       	ldd	r23, Z+1	; 0x01
    2986:	82 81       	ldd	r24, Z+2	; 0x02
    2988:	93 81       	ldd	r25, Z+3	; 0x03
    298a:	20 e0       	ldi	r18, 0x00	; 0
    298c:	30 e0       	ldi	r19, 0x00	; 0
    298e:	40 e8       	ldi	r20, 0x80	; 128
    2990:	5f e3       	ldi	r21, 0x3F	; 63
    2992:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2996:	88 23       	and	r24, r24
    2998:	44 f4       	brge	.+16     	; 0x29aa <MODE_4+0x9c>
		__ticks = 1;
    299a:	fe 01       	movw	r30, r28
    299c:	e9 59       	subi	r30, 0x99	; 153
    299e:	ff 4f       	sbci	r31, 0xFF	; 255
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	91 83       	std	Z+1, r25	; 0x01
    29a6:	80 83       	st	Z, r24
    29a8:	64 c0       	rjmp	.+200    	; 0x2a72 <MODE_4+0x164>
	else if (__tmp > 65535)
    29aa:	fe 01       	movw	r30, r28
    29ac:	e7 59       	subi	r30, 0x97	; 151
    29ae:	ff 4f       	sbci	r31, 0xFF	; 255
    29b0:	60 81       	ld	r22, Z
    29b2:	71 81       	ldd	r23, Z+1	; 0x01
    29b4:	82 81       	ldd	r24, Z+2	; 0x02
    29b6:	93 81       	ldd	r25, Z+3	; 0x03
    29b8:	20 e0       	ldi	r18, 0x00	; 0
    29ba:	3f ef       	ldi	r19, 0xFF	; 255
    29bc:	4f e7       	ldi	r20, 0x7F	; 127
    29be:	57 e4       	ldi	r21, 0x47	; 71
    29c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29c4:	18 16       	cp	r1, r24
    29c6:	0c f0       	brlt	.+2      	; 0x29ca <MODE_4+0xbc>
    29c8:	43 c0       	rjmp	.+134    	; 0x2a50 <MODE_4+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29ca:	fe 01       	movw	r30, r28
    29cc:	e3 59       	subi	r30, 0x93	; 147
    29ce:	ff 4f       	sbci	r31, 0xFF	; 255
    29d0:	60 81       	ld	r22, Z
    29d2:	71 81       	ldd	r23, Z+1	; 0x01
    29d4:	82 81       	ldd	r24, Z+2	; 0x02
    29d6:	93 81       	ldd	r25, Z+3	; 0x03
    29d8:	20 e0       	ldi	r18, 0x00	; 0
    29da:	30 e0       	ldi	r19, 0x00	; 0
    29dc:	40 e2       	ldi	r20, 0x20	; 32
    29de:	51 e4       	ldi	r21, 0x41	; 65
    29e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29e4:	dc 01       	movw	r26, r24
    29e6:	cb 01       	movw	r24, r22
    29e8:	8e 01       	movw	r16, r28
    29ea:	09 59       	subi	r16, 0x99	; 153
    29ec:	1f 4f       	sbci	r17, 0xFF	; 255
    29ee:	bc 01       	movw	r22, r24
    29f0:	cd 01       	movw	r24, r26
    29f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29f6:	dc 01       	movw	r26, r24
    29f8:	cb 01       	movw	r24, r22
    29fa:	f8 01       	movw	r30, r16
    29fc:	91 83       	std	Z+1, r25	; 0x01
    29fe:	80 83       	st	Z, r24
    2a00:	1f c0       	rjmp	.+62     	; 0x2a40 <MODE_4+0x132>
    2a02:	fe 01       	movw	r30, r28
    2a04:	eb 59       	subi	r30, 0x9B	; 155
    2a06:	ff 4f       	sbci	r31, 0xFF	; 255
    2a08:	88 ec       	ldi	r24, 0xC8	; 200
    2a0a:	90 e0       	ldi	r25, 0x00	; 0
    2a0c:	91 83       	std	Z+1, r25	; 0x01
    2a0e:	80 83       	st	Z, r24
    2a10:	fe 01       	movw	r30, r28
    2a12:	eb 59       	subi	r30, 0x9B	; 155
    2a14:	ff 4f       	sbci	r31, 0xFF	; 255
    2a16:	80 81       	ld	r24, Z
    2a18:	91 81       	ldd	r25, Z+1	; 0x01
    2a1a:	01 97       	sbiw	r24, 0x01	; 1
    2a1c:	f1 f7       	brne	.-4      	; 0x2a1a <MODE_4+0x10c>
    2a1e:	fe 01       	movw	r30, r28
    2a20:	eb 59       	subi	r30, 0x9B	; 155
    2a22:	ff 4f       	sbci	r31, 0xFF	; 255
    2a24:	91 83       	std	Z+1, r25	; 0x01
    2a26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a28:	de 01       	movw	r26, r28
    2a2a:	a9 59       	subi	r26, 0x99	; 153
    2a2c:	bf 4f       	sbci	r27, 0xFF	; 255
    2a2e:	fe 01       	movw	r30, r28
    2a30:	e9 59       	subi	r30, 0x99	; 153
    2a32:	ff 4f       	sbci	r31, 0xFF	; 255
    2a34:	80 81       	ld	r24, Z
    2a36:	91 81       	ldd	r25, Z+1	; 0x01
    2a38:	01 97       	sbiw	r24, 0x01	; 1
    2a3a:	11 96       	adiw	r26, 0x01	; 1
    2a3c:	9c 93       	st	X, r25
    2a3e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a40:	fe 01       	movw	r30, r28
    2a42:	e9 59       	subi	r30, 0x99	; 153
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	80 81       	ld	r24, Z
    2a48:	91 81       	ldd	r25, Z+1	; 0x01
    2a4a:	00 97       	sbiw	r24, 0x00	; 0
    2a4c:	d1 f6       	brne	.-76     	; 0x2a02 <MODE_4+0xf4>
    2a4e:	27 c0       	rjmp	.+78     	; 0x2a9e <MODE_4+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a50:	8e 01       	movw	r16, r28
    2a52:	09 59       	subi	r16, 0x99	; 153
    2a54:	1f 4f       	sbci	r17, 0xFF	; 255
    2a56:	fe 01       	movw	r30, r28
    2a58:	e7 59       	subi	r30, 0x97	; 151
    2a5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5c:	60 81       	ld	r22, Z
    2a5e:	71 81       	ldd	r23, Z+1	; 0x01
    2a60:	82 81       	ldd	r24, Z+2	; 0x02
    2a62:	93 81       	ldd	r25, Z+3	; 0x03
    2a64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a68:	dc 01       	movw	r26, r24
    2a6a:	cb 01       	movw	r24, r22
    2a6c:	f8 01       	movw	r30, r16
    2a6e:	91 83       	std	Z+1, r25	; 0x01
    2a70:	80 83       	st	Z, r24
    2a72:	de 01       	movw	r26, r28
    2a74:	ad 59       	subi	r26, 0x9D	; 157
    2a76:	bf 4f       	sbci	r27, 0xFF	; 255
    2a78:	fe 01       	movw	r30, r28
    2a7a:	e9 59       	subi	r30, 0x99	; 153
    2a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7e:	80 81       	ld	r24, Z
    2a80:	91 81       	ldd	r25, Z+1	; 0x01
    2a82:	8d 93       	st	X+, r24
    2a84:	9c 93       	st	X, r25
    2a86:	fe 01       	movw	r30, r28
    2a88:	ed 59       	subi	r30, 0x9D	; 157
    2a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8c:	80 81       	ld	r24, Z
    2a8e:	91 81       	ldd	r25, Z+1	; 0x01
    2a90:	01 97       	sbiw	r24, 0x01	; 1
    2a92:	f1 f7       	brne	.-4      	; 0x2a90 <MODE_4+0x182>
    2a94:	fe 01       	movw	r30, r28
    2a96:	ed 59       	subi	r30, 0x9D	; 157
    2a98:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9a:	91 83       	std	Z+1, r25	; 0x01
    2a9c:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED1, OFF);
    2a9e:	80 e0       	ldi	r24, 0x00	; 0
    2aa0:	60 e0       	ldi	r22, 0x00	; 0
    2aa2:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED8, OFF);
    2aa6:	87 e0       	ldi	r24, 0x07	; 7
    2aa8:	60 e0       	ldi	r22, 0x00	; 0
    2aaa:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2aae:	fe 01       	movw	r30, r28
    2ab0:	e1 5a       	subi	r30, 0xA1	; 161
    2ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab4:	80 e0       	ldi	r24, 0x00	; 0
    2ab6:	90 e0       	ldi	r25, 0x00	; 0
    2ab8:	a8 e4       	ldi	r26, 0x48	; 72
    2aba:	b2 e4       	ldi	r27, 0x42	; 66
    2abc:	80 83       	st	Z, r24
    2abe:	91 83       	std	Z+1, r25	; 0x01
    2ac0:	a2 83       	std	Z+2, r26	; 0x02
    2ac2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ac4:	8e 01       	movw	r16, r28
    2ac6:	05 5a       	subi	r16, 0xA5	; 165
    2ac8:	1f 4f       	sbci	r17, 0xFF	; 255
    2aca:	fe 01       	movw	r30, r28
    2acc:	e1 5a       	subi	r30, 0xA1	; 161
    2ace:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad0:	60 81       	ld	r22, Z
    2ad2:	71 81       	ldd	r23, Z+1	; 0x01
    2ad4:	82 81       	ldd	r24, Z+2	; 0x02
    2ad6:	93 81       	ldd	r25, Z+3	; 0x03
    2ad8:	20 e0       	ldi	r18, 0x00	; 0
    2ada:	30 e0       	ldi	r19, 0x00	; 0
    2adc:	4a ef       	ldi	r20, 0xFA	; 250
    2ade:	54 e4       	ldi	r21, 0x44	; 68
    2ae0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ae4:	dc 01       	movw	r26, r24
    2ae6:	cb 01       	movw	r24, r22
    2ae8:	f8 01       	movw	r30, r16
    2aea:	80 83       	st	Z, r24
    2aec:	91 83       	std	Z+1, r25	; 0x01
    2aee:	a2 83       	std	Z+2, r26	; 0x02
    2af0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2af2:	fe 01       	movw	r30, r28
    2af4:	e5 5a       	subi	r30, 0xA5	; 165
    2af6:	ff 4f       	sbci	r31, 0xFF	; 255
    2af8:	60 81       	ld	r22, Z
    2afa:	71 81       	ldd	r23, Z+1	; 0x01
    2afc:	82 81       	ldd	r24, Z+2	; 0x02
    2afe:	93 81       	ldd	r25, Z+3	; 0x03
    2b00:	20 e0       	ldi	r18, 0x00	; 0
    2b02:	30 e0       	ldi	r19, 0x00	; 0
    2b04:	40 e8       	ldi	r20, 0x80	; 128
    2b06:	5f e3       	ldi	r21, 0x3F	; 63
    2b08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b0c:	88 23       	and	r24, r24
    2b0e:	44 f4       	brge	.+16     	; 0x2b20 <MODE_4+0x212>
		__ticks = 1;
    2b10:	fe 01       	movw	r30, r28
    2b12:	e7 5a       	subi	r30, 0xA7	; 167
    2b14:	ff 4f       	sbci	r31, 0xFF	; 255
    2b16:	81 e0       	ldi	r24, 0x01	; 1
    2b18:	90 e0       	ldi	r25, 0x00	; 0
    2b1a:	91 83       	std	Z+1, r25	; 0x01
    2b1c:	80 83       	st	Z, r24
    2b1e:	64 c0       	rjmp	.+200    	; 0x2be8 <MODE_4+0x2da>
	else if (__tmp > 65535)
    2b20:	fe 01       	movw	r30, r28
    2b22:	e5 5a       	subi	r30, 0xA5	; 165
    2b24:	ff 4f       	sbci	r31, 0xFF	; 255
    2b26:	60 81       	ld	r22, Z
    2b28:	71 81       	ldd	r23, Z+1	; 0x01
    2b2a:	82 81       	ldd	r24, Z+2	; 0x02
    2b2c:	93 81       	ldd	r25, Z+3	; 0x03
    2b2e:	20 e0       	ldi	r18, 0x00	; 0
    2b30:	3f ef       	ldi	r19, 0xFF	; 255
    2b32:	4f e7       	ldi	r20, 0x7F	; 127
    2b34:	57 e4       	ldi	r21, 0x47	; 71
    2b36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b3a:	18 16       	cp	r1, r24
    2b3c:	0c f0       	brlt	.+2      	; 0x2b40 <MODE_4+0x232>
    2b3e:	43 c0       	rjmp	.+134    	; 0x2bc6 <MODE_4+0x2b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b40:	fe 01       	movw	r30, r28
    2b42:	e1 5a       	subi	r30, 0xA1	; 161
    2b44:	ff 4f       	sbci	r31, 0xFF	; 255
    2b46:	60 81       	ld	r22, Z
    2b48:	71 81       	ldd	r23, Z+1	; 0x01
    2b4a:	82 81       	ldd	r24, Z+2	; 0x02
    2b4c:	93 81       	ldd	r25, Z+3	; 0x03
    2b4e:	20 e0       	ldi	r18, 0x00	; 0
    2b50:	30 e0       	ldi	r19, 0x00	; 0
    2b52:	40 e2       	ldi	r20, 0x20	; 32
    2b54:	51 e4       	ldi	r21, 0x41	; 65
    2b56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b5a:	dc 01       	movw	r26, r24
    2b5c:	cb 01       	movw	r24, r22
    2b5e:	8e 01       	movw	r16, r28
    2b60:	07 5a       	subi	r16, 0xA7	; 167
    2b62:	1f 4f       	sbci	r17, 0xFF	; 255
    2b64:	bc 01       	movw	r22, r24
    2b66:	cd 01       	movw	r24, r26
    2b68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b6c:	dc 01       	movw	r26, r24
    2b6e:	cb 01       	movw	r24, r22
    2b70:	f8 01       	movw	r30, r16
    2b72:	91 83       	std	Z+1, r25	; 0x01
    2b74:	80 83       	st	Z, r24
    2b76:	1f c0       	rjmp	.+62     	; 0x2bb6 <MODE_4+0x2a8>
    2b78:	fe 01       	movw	r30, r28
    2b7a:	e9 5a       	subi	r30, 0xA9	; 169
    2b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b7e:	88 ec       	ldi	r24, 0xC8	; 200
    2b80:	90 e0       	ldi	r25, 0x00	; 0
    2b82:	91 83       	std	Z+1, r25	; 0x01
    2b84:	80 83       	st	Z, r24
    2b86:	fe 01       	movw	r30, r28
    2b88:	e9 5a       	subi	r30, 0xA9	; 169
    2b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b8c:	80 81       	ld	r24, Z
    2b8e:	91 81       	ldd	r25, Z+1	; 0x01
    2b90:	01 97       	sbiw	r24, 0x01	; 1
    2b92:	f1 f7       	brne	.-4      	; 0x2b90 <MODE_4+0x282>
    2b94:	fe 01       	movw	r30, r28
    2b96:	e9 5a       	subi	r30, 0xA9	; 169
    2b98:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9a:	91 83       	std	Z+1, r25	; 0x01
    2b9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b9e:	de 01       	movw	r26, r28
    2ba0:	a7 5a       	subi	r26, 0xA7	; 167
    2ba2:	bf 4f       	sbci	r27, 0xFF	; 255
    2ba4:	fe 01       	movw	r30, r28
    2ba6:	e7 5a       	subi	r30, 0xA7	; 167
    2ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    2baa:	80 81       	ld	r24, Z
    2bac:	91 81       	ldd	r25, Z+1	; 0x01
    2bae:	01 97       	sbiw	r24, 0x01	; 1
    2bb0:	11 96       	adiw	r26, 0x01	; 1
    2bb2:	9c 93       	st	X, r25
    2bb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	e7 5a       	subi	r30, 0xA7	; 167
    2bba:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbc:	80 81       	ld	r24, Z
    2bbe:	91 81       	ldd	r25, Z+1	; 0x01
    2bc0:	00 97       	sbiw	r24, 0x00	; 0
    2bc2:	d1 f6       	brne	.-76     	; 0x2b78 <MODE_4+0x26a>
    2bc4:	27 c0       	rjmp	.+78     	; 0x2c14 <MODE_4+0x306>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bc6:	8e 01       	movw	r16, r28
    2bc8:	07 5a       	subi	r16, 0xA7	; 167
    2bca:	1f 4f       	sbci	r17, 0xFF	; 255
    2bcc:	fe 01       	movw	r30, r28
    2bce:	e5 5a       	subi	r30, 0xA5	; 165
    2bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd2:	60 81       	ld	r22, Z
    2bd4:	71 81       	ldd	r23, Z+1	; 0x01
    2bd6:	82 81       	ldd	r24, Z+2	; 0x02
    2bd8:	93 81       	ldd	r25, Z+3	; 0x03
    2bda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bde:	dc 01       	movw	r26, r24
    2be0:	cb 01       	movw	r24, r22
    2be2:	f8 01       	movw	r30, r16
    2be4:	91 83       	std	Z+1, r25	; 0x01
    2be6:	80 83       	st	Z, r24
    2be8:	de 01       	movw	r26, r28
    2bea:	ab 5a       	subi	r26, 0xAB	; 171
    2bec:	bf 4f       	sbci	r27, 0xFF	; 255
    2bee:	fe 01       	movw	r30, r28
    2bf0:	e7 5a       	subi	r30, 0xA7	; 167
    2bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf4:	80 81       	ld	r24, Z
    2bf6:	91 81       	ldd	r25, Z+1	; 0x01
    2bf8:	8d 93       	st	X+, r24
    2bfa:	9c 93       	st	X, r25
    2bfc:	fe 01       	movw	r30, r28
    2bfe:	eb 5a       	subi	r30, 0xAB	; 171
    2c00:	ff 4f       	sbci	r31, 0xFF	; 255
    2c02:	80 81       	ld	r24, Z
    2c04:	91 81       	ldd	r25, Z+1	; 0x01
    2c06:	01 97       	sbiw	r24, 0x01	; 1
    2c08:	f1 f7       	brne	.-4      	; 0x2c06 <MODE_4+0x2f8>
    2c0a:	fe 01       	movw	r30, r28
    2c0c:	eb 5a       	subi	r30, 0xAB	; 171
    2c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c10:	91 83       	std	Z+1, r25	; 0x01
    2c12:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, ON);
    2c14:	81 e0       	ldi	r24, 0x01	; 1
    2c16:	61 e0       	ldi	r22, 0x01	; 1
    2c18:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED7, ON);
    2c1c:	86 e0       	ldi	r24, 0x06	; 6
    2c1e:	61 e0       	ldi	r22, 0x01	; 1
    2c20:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2c24:	fe 01       	movw	r30, r28
    2c26:	ef 5a       	subi	r30, 0xAF	; 175
    2c28:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2a:	80 e0       	ldi	r24, 0x00	; 0
    2c2c:	90 e0       	ldi	r25, 0x00	; 0
    2c2e:	a8 e4       	ldi	r26, 0x48	; 72
    2c30:	b2 e4       	ldi	r27, 0x42	; 66
    2c32:	80 83       	st	Z, r24
    2c34:	91 83       	std	Z+1, r25	; 0x01
    2c36:	a2 83       	std	Z+2, r26	; 0x02
    2c38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c3a:	8e 01       	movw	r16, r28
    2c3c:	03 5b       	subi	r16, 0xB3	; 179
    2c3e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c40:	fe 01       	movw	r30, r28
    2c42:	ef 5a       	subi	r30, 0xAF	; 175
    2c44:	ff 4f       	sbci	r31, 0xFF	; 255
    2c46:	60 81       	ld	r22, Z
    2c48:	71 81       	ldd	r23, Z+1	; 0x01
    2c4a:	82 81       	ldd	r24, Z+2	; 0x02
    2c4c:	93 81       	ldd	r25, Z+3	; 0x03
    2c4e:	20 e0       	ldi	r18, 0x00	; 0
    2c50:	30 e0       	ldi	r19, 0x00	; 0
    2c52:	4a ef       	ldi	r20, 0xFA	; 250
    2c54:	54 e4       	ldi	r21, 0x44	; 68
    2c56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c5a:	dc 01       	movw	r26, r24
    2c5c:	cb 01       	movw	r24, r22
    2c5e:	f8 01       	movw	r30, r16
    2c60:	80 83       	st	Z, r24
    2c62:	91 83       	std	Z+1, r25	; 0x01
    2c64:	a2 83       	std	Z+2, r26	; 0x02
    2c66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c68:	fe 01       	movw	r30, r28
    2c6a:	e3 5b       	subi	r30, 0xB3	; 179
    2c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6e:	60 81       	ld	r22, Z
    2c70:	71 81       	ldd	r23, Z+1	; 0x01
    2c72:	82 81       	ldd	r24, Z+2	; 0x02
    2c74:	93 81       	ldd	r25, Z+3	; 0x03
    2c76:	20 e0       	ldi	r18, 0x00	; 0
    2c78:	30 e0       	ldi	r19, 0x00	; 0
    2c7a:	40 e8       	ldi	r20, 0x80	; 128
    2c7c:	5f e3       	ldi	r21, 0x3F	; 63
    2c7e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c82:	88 23       	and	r24, r24
    2c84:	44 f4       	brge	.+16     	; 0x2c96 <MODE_4+0x388>
		__ticks = 1;
    2c86:	fe 01       	movw	r30, r28
    2c88:	e5 5b       	subi	r30, 0xB5	; 181
    2c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8c:	81 e0       	ldi	r24, 0x01	; 1
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	91 83       	std	Z+1, r25	; 0x01
    2c92:	80 83       	st	Z, r24
    2c94:	64 c0       	rjmp	.+200    	; 0x2d5e <MODE_4+0x450>
	else if (__tmp > 65535)
    2c96:	fe 01       	movw	r30, r28
    2c98:	e3 5b       	subi	r30, 0xB3	; 179
    2c9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9c:	60 81       	ld	r22, Z
    2c9e:	71 81       	ldd	r23, Z+1	; 0x01
    2ca0:	82 81       	ldd	r24, Z+2	; 0x02
    2ca2:	93 81       	ldd	r25, Z+3	; 0x03
    2ca4:	20 e0       	ldi	r18, 0x00	; 0
    2ca6:	3f ef       	ldi	r19, 0xFF	; 255
    2ca8:	4f e7       	ldi	r20, 0x7F	; 127
    2caa:	57 e4       	ldi	r21, 0x47	; 71
    2cac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cb0:	18 16       	cp	r1, r24
    2cb2:	0c f0       	brlt	.+2      	; 0x2cb6 <MODE_4+0x3a8>
    2cb4:	43 c0       	rjmp	.+134    	; 0x2d3c <MODE_4+0x42e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cb6:	fe 01       	movw	r30, r28
    2cb8:	ef 5a       	subi	r30, 0xAF	; 175
    2cba:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbc:	60 81       	ld	r22, Z
    2cbe:	71 81       	ldd	r23, Z+1	; 0x01
    2cc0:	82 81       	ldd	r24, Z+2	; 0x02
    2cc2:	93 81       	ldd	r25, Z+3	; 0x03
    2cc4:	20 e0       	ldi	r18, 0x00	; 0
    2cc6:	30 e0       	ldi	r19, 0x00	; 0
    2cc8:	40 e2       	ldi	r20, 0x20	; 32
    2cca:	51 e4       	ldi	r21, 0x41	; 65
    2ccc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cd0:	dc 01       	movw	r26, r24
    2cd2:	cb 01       	movw	r24, r22
    2cd4:	8e 01       	movw	r16, r28
    2cd6:	05 5b       	subi	r16, 0xB5	; 181
    2cd8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cda:	bc 01       	movw	r22, r24
    2cdc:	cd 01       	movw	r24, r26
    2cde:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ce2:	dc 01       	movw	r26, r24
    2ce4:	cb 01       	movw	r24, r22
    2ce6:	f8 01       	movw	r30, r16
    2ce8:	91 83       	std	Z+1, r25	; 0x01
    2cea:	80 83       	st	Z, r24
    2cec:	1f c0       	rjmp	.+62     	; 0x2d2c <MODE_4+0x41e>
    2cee:	fe 01       	movw	r30, r28
    2cf0:	e7 5b       	subi	r30, 0xB7	; 183
    2cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf4:	88 ec       	ldi	r24, 0xC8	; 200
    2cf6:	90 e0       	ldi	r25, 0x00	; 0
    2cf8:	91 83       	std	Z+1, r25	; 0x01
    2cfa:	80 83       	st	Z, r24
    2cfc:	fe 01       	movw	r30, r28
    2cfe:	e7 5b       	subi	r30, 0xB7	; 183
    2d00:	ff 4f       	sbci	r31, 0xFF	; 255
    2d02:	80 81       	ld	r24, Z
    2d04:	91 81       	ldd	r25, Z+1	; 0x01
    2d06:	01 97       	sbiw	r24, 0x01	; 1
    2d08:	f1 f7       	brne	.-4      	; 0x2d06 <MODE_4+0x3f8>
    2d0a:	fe 01       	movw	r30, r28
    2d0c:	e7 5b       	subi	r30, 0xB7	; 183
    2d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d10:	91 83       	std	Z+1, r25	; 0x01
    2d12:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d14:	de 01       	movw	r26, r28
    2d16:	a5 5b       	subi	r26, 0xB5	; 181
    2d18:	bf 4f       	sbci	r27, 0xFF	; 255
    2d1a:	fe 01       	movw	r30, r28
    2d1c:	e5 5b       	subi	r30, 0xB5	; 181
    2d1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d20:	80 81       	ld	r24, Z
    2d22:	91 81       	ldd	r25, Z+1	; 0x01
    2d24:	01 97       	sbiw	r24, 0x01	; 1
    2d26:	11 96       	adiw	r26, 0x01	; 1
    2d28:	9c 93       	st	X, r25
    2d2a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d2c:	fe 01       	movw	r30, r28
    2d2e:	e5 5b       	subi	r30, 0xB5	; 181
    2d30:	ff 4f       	sbci	r31, 0xFF	; 255
    2d32:	80 81       	ld	r24, Z
    2d34:	91 81       	ldd	r25, Z+1	; 0x01
    2d36:	00 97       	sbiw	r24, 0x00	; 0
    2d38:	d1 f6       	brne	.-76     	; 0x2cee <MODE_4+0x3e0>
    2d3a:	27 c0       	rjmp	.+78     	; 0x2d8a <MODE_4+0x47c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d3c:	8e 01       	movw	r16, r28
    2d3e:	05 5b       	subi	r16, 0xB5	; 181
    2d40:	1f 4f       	sbci	r17, 0xFF	; 255
    2d42:	fe 01       	movw	r30, r28
    2d44:	e3 5b       	subi	r30, 0xB3	; 179
    2d46:	ff 4f       	sbci	r31, 0xFF	; 255
    2d48:	60 81       	ld	r22, Z
    2d4a:	71 81       	ldd	r23, Z+1	; 0x01
    2d4c:	82 81       	ldd	r24, Z+2	; 0x02
    2d4e:	93 81       	ldd	r25, Z+3	; 0x03
    2d50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d54:	dc 01       	movw	r26, r24
    2d56:	cb 01       	movw	r24, r22
    2d58:	f8 01       	movw	r30, r16
    2d5a:	91 83       	std	Z+1, r25	; 0x01
    2d5c:	80 83       	st	Z, r24
    2d5e:	de 01       	movw	r26, r28
    2d60:	a9 5b       	subi	r26, 0xB9	; 185
    2d62:	bf 4f       	sbci	r27, 0xFF	; 255
    2d64:	fe 01       	movw	r30, r28
    2d66:	e5 5b       	subi	r30, 0xB5	; 181
    2d68:	ff 4f       	sbci	r31, 0xFF	; 255
    2d6a:	80 81       	ld	r24, Z
    2d6c:	91 81       	ldd	r25, Z+1	; 0x01
    2d6e:	8d 93       	st	X+, r24
    2d70:	9c 93       	st	X, r25
    2d72:	fe 01       	movw	r30, r28
    2d74:	e9 5b       	subi	r30, 0xB9	; 185
    2d76:	ff 4f       	sbci	r31, 0xFF	; 255
    2d78:	80 81       	ld	r24, Z
    2d7a:	91 81       	ldd	r25, Z+1	; 0x01
    2d7c:	01 97       	sbiw	r24, 0x01	; 1
    2d7e:	f1 f7       	brne	.-4      	; 0x2d7c <MODE_4+0x46e>
    2d80:	fe 01       	movw	r30, r28
    2d82:	e9 5b       	subi	r30, 0xB9	; 185
    2d84:	ff 4f       	sbci	r31, 0xFF	; 255
    2d86:	91 83       	std	Z+1, r25	; 0x01
    2d88:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, OFF);
    2d8a:	81 e0       	ldi	r24, 0x01	; 1
    2d8c:	60 e0       	ldi	r22, 0x00	; 0
    2d8e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED7, OFF);
    2d92:	86 e0       	ldi	r24, 0x06	; 6
    2d94:	60 e0       	ldi	r22, 0x00	; 0
    2d96:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2d9a:	fe 01       	movw	r30, r28
    2d9c:	ed 5b       	subi	r30, 0xBD	; 189
    2d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2da0:	80 e0       	ldi	r24, 0x00	; 0
    2da2:	90 e0       	ldi	r25, 0x00	; 0
    2da4:	a8 e4       	ldi	r26, 0x48	; 72
    2da6:	b2 e4       	ldi	r27, 0x42	; 66
    2da8:	80 83       	st	Z, r24
    2daa:	91 83       	std	Z+1, r25	; 0x01
    2dac:	a2 83       	std	Z+2, r26	; 0x02
    2dae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2db0:	8e 01       	movw	r16, r28
    2db2:	01 5c       	subi	r16, 0xC1	; 193
    2db4:	1f 4f       	sbci	r17, 0xFF	; 255
    2db6:	fe 01       	movw	r30, r28
    2db8:	ed 5b       	subi	r30, 0xBD	; 189
    2dba:	ff 4f       	sbci	r31, 0xFF	; 255
    2dbc:	60 81       	ld	r22, Z
    2dbe:	71 81       	ldd	r23, Z+1	; 0x01
    2dc0:	82 81       	ldd	r24, Z+2	; 0x02
    2dc2:	93 81       	ldd	r25, Z+3	; 0x03
    2dc4:	20 e0       	ldi	r18, 0x00	; 0
    2dc6:	30 e0       	ldi	r19, 0x00	; 0
    2dc8:	4a ef       	ldi	r20, 0xFA	; 250
    2dca:	54 e4       	ldi	r21, 0x44	; 68
    2dcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dd0:	dc 01       	movw	r26, r24
    2dd2:	cb 01       	movw	r24, r22
    2dd4:	f8 01       	movw	r30, r16
    2dd6:	80 83       	st	Z, r24
    2dd8:	91 83       	std	Z+1, r25	; 0x01
    2dda:	a2 83       	std	Z+2, r26	; 0x02
    2ddc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2dde:	fe 01       	movw	r30, r28
    2de0:	ff 96       	adiw	r30, 0x3f	; 63
    2de2:	60 81       	ld	r22, Z
    2de4:	71 81       	ldd	r23, Z+1	; 0x01
    2de6:	82 81       	ldd	r24, Z+2	; 0x02
    2de8:	93 81       	ldd	r25, Z+3	; 0x03
    2dea:	20 e0       	ldi	r18, 0x00	; 0
    2dec:	30 e0       	ldi	r19, 0x00	; 0
    2dee:	40 e8       	ldi	r20, 0x80	; 128
    2df0:	5f e3       	ldi	r21, 0x3F	; 63
    2df2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2df6:	88 23       	and	r24, r24
    2df8:	2c f4       	brge	.+10     	; 0x2e04 <MODE_4+0x4f6>
		__ticks = 1;
    2dfa:	81 e0       	ldi	r24, 0x01	; 1
    2dfc:	90 e0       	ldi	r25, 0x00	; 0
    2dfe:	9e af       	std	Y+62, r25	; 0x3e
    2e00:	8d af       	std	Y+61, r24	; 0x3d
    2e02:	46 c0       	rjmp	.+140    	; 0x2e90 <MODE_4+0x582>
	else if (__tmp > 65535)
    2e04:	fe 01       	movw	r30, r28
    2e06:	ff 96       	adiw	r30, 0x3f	; 63
    2e08:	60 81       	ld	r22, Z
    2e0a:	71 81       	ldd	r23, Z+1	; 0x01
    2e0c:	82 81       	ldd	r24, Z+2	; 0x02
    2e0e:	93 81       	ldd	r25, Z+3	; 0x03
    2e10:	20 e0       	ldi	r18, 0x00	; 0
    2e12:	3f ef       	ldi	r19, 0xFF	; 255
    2e14:	4f e7       	ldi	r20, 0x7F	; 127
    2e16:	57 e4       	ldi	r21, 0x47	; 71
    2e18:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e1c:	18 16       	cp	r1, r24
    2e1e:	64 f5       	brge	.+88     	; 0x2e78 <MODE_4+0x56a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e20:	fe 01       	movw	r30, r28
    2e22:	ed 5b       	subi	r30, 0xBD	; 189
    2e24:	ff 4f       	sbci	r31, 0xFF	; 255
    2e26:	60 81       	ld	r22, Z
    2e28:	71 81       	ldd	r23, Z+1	; 0x01
    2e2a:	82 81       	ldd	r24, Z+2	; 0x02
    2e2c:	93 81       	ldd	r25, Z+3	; 0x03
    2e2e:	20 e0       	ldi	r18, 0x00	; 0
    2e30:	30 e0       	ldi	r19, 0x00	; 0
    2e32:	40 e2       	ldi	r20, 0x20	; 32
    2e34:	51 e4       	ldi	r21, 0x41	; 65
    2e36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e3a:	dc 01       	movw	r26, r24
    2e3c:	cb 01       	movw	r24, r22
    2e3e:	bc 01       	movw	r22, r24
    2e40:	cd 01       	movw	r24, r26
    2e42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e46:	dc 01       	movw	r26, r24
    2e48:	cb 01       	movw	r24, r22
    2e4a:	9e af       	std	Y+62, r25	; 0x3e
    2e4c:	8d af       	std	Y+61, r24	; 0x3d
    2e4e:	0f c0       	rjmp	.+30     	; 0x2e6e <MODE_4+0x560>
    2e50:	88 ec       	ldi	r24, 0xC8	; 200
    2e52:	90 e0       	ldi	r25, 0x00	; 0
    2e54:	9c af       	std	Y+60, r25	; 0x3c
    2e56:	8b af       	std	Y+59, r24	; 0x3b
    2e58:	8b ad       	ldd	r24, Y+59	; 0x3b
    2e5a:	9c ad       	ldd	r25, Y+60	; 0x3c
    2e5c:	01 97       	sbiw	r24, 0x01	; 1
    2e5e:	f1 f7       	brne	.-4      	; 0x2e5c <MODE_4+0x54e>
    2e60:	9c af       	std	Y+60, r25	; 0x3c
    2e62:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e64:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e66:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e68:	01 97       	sbiw	r24, 0x01	; 1
    2e6a:	9e af       	std	Y+62, r25	; 0x3e
    2e6c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e6e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e70:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e72:	00 97       	sbiw	r24, 0x00	; 0
    2e74:	69 f7       	brne	.-38     	; 0x2e50 <MODE_4+0x542>
    2e76:	16 c0       	rjmp	.+44     	; 0x2ea4 <MODE_4+0x596>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e78:	fe 01       	movw	r30, r28
    2e7a:	ff 96       	adiw	r30, 0x3f	; 63
    2e7c:	60 81       	ld	r22, Z
    2e7e:	71 81       	ldd	r23, Z+1	; 0x01
    2e80:	82 81       	ldd	r24, Z+2	; 0x02
    2e82:	93 81       	ldd	r25, Z+3	; 0x03
    2e84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e88:	dc 01       	movw	r26, r24
    2e8a:	cb 01       	movw	r24, r22
    2e8c:	9e af       	std	Y+62, r25	; 0x3e
    2e8e:	8d af       	std	Y+61, r24	; 0x3d
    2e90:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e92:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e94:	9a af       	std	Y+58, r25	; 0x3a
    2e96:	89 af       	std	Y+57, r24	; 0x39
    2e98:	89 ad       	ldd	r24, Y+57	; 0x39
    2e9a:	9a ad       	ldd	r25, Y+58	; 0x3a
    2e9c:	01 97       	sbiw	r24, 0x01	; 1
    2e9e:	f1 f7       	brne	.-4      	; 0x2e9c <MODE_4+0x58e>
    2ea0:	9a af       	std	Y+58, r25	; 0x3a
    2ea2:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, ON);
    2ea4:	82 e0       	ldi	r24, 0x02	; 2
    2ea6:	61 e0       	ldi	r22, 0x01	; 1
    2ea8:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED6, ON);
    2eac:	85 e0       	ldi	r24, 0x05	; 5
    2eae:	61 e0       	ldi	r22, 0x01	; 1
    2eb0:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2eb4:	80 e0       	ldi	r24, 0x00	; 0
    2eb6:	90 e0       	ldi	r25, 0x00	; 0
    2eb8:	a8 e4       	ldi	r26, 0x48	; 72
    2eba:	b2 e4       	ldi	r27, 0x42	; 66
    2ebc:	8d ab       	std	Y+53, r24	; 0x35
    2ebe:	9e ab       	std	Y+54, r25	; 0x36
    2ec0:	af ab       	std	Y+55, r26	; 0x37
    2ec2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ec4:	6d a9       	ldd	r22, Y+53	; 0x35
    2ec6:	7e a9       	ldd	r23, Y+54	; 0x36
    2ec8:	8f a9       	ldd	r24, Y+55	; 0x37
    2eca:	98 ad       	ldd	r25, Y+56	; 0x38
    2ecc:	20 e0       	ldi	r18, 0x00	; 0
    2ece:	30 e0       	ldi	r19, 0x00	; 0
    2ed0:	4a ef       	ldi	r20, 0xFA	; 250
    2ed2:	54 e4       	ldi	r21, 0x44	; 68
    2ed4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ed8:	dc 01       	movw	r26, r24
    2eda:	cb 01       	movw	r24, r22
    2edc:	89 ab       	std	Y+49, r24	; 0x31
    2ede:	9a ab       	std	Y+50, r25	; 0x32
    2ee0:	ab ab       	std	Y+51, r26	; 0x33
    2ee2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2ee4:	69 a9       	ldd	r22, Y+49	; 0x31
    2ee6:	7a a9       	ldd	r23, Y+50	; 0x32
    2ee8:	8b a9       	ldd	r24, Y+51	; 0x33
    2eea:	9c a9       	ldd	r25, Y+52	; 0x34
    2eec:	20 e0       	ldi	r18, 0x00	; 0
    2eee:	30 e0       	ldi	r19, 0x00	; 0
    2ef0:	40 e8       	ldi	r20, 0x80	; 128
    2ef2:	5f e3       	ldi	r21, 0x3F	; 63
    2ef4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ef8:	88 23       	and	r24, r24
    2efa:	2c f4       	brge	.+10     	; 0x2f06 <MODE_4+0x5f8>
		__ticks = 1;
    2efc:	81 e0       	ldi	r24, 0x01	; 1
    2efe:	90 e0       	ldi	r25, 0x00	; 0
    2f00:	98 ab       	std	Y+48, r25	; 0x30
    2f02:	8f a7       	std	Y+47, r24	; 0x2f
    2f04:	3f c0       	rjmp	.+126    	; 0x2f84 <MODE_4+0x676>
	else if (__tmp > 65535)
    2f06:	69 a9       	ldd	r22, Y+49	; 0x31
    2f08:	7a a9       	ldd	r23, Y+50	; 0x32
    2f0a:	8b a9       	ldd	r24, Y+51	; 0x33
    2f0c:	9c a9       	ldd	r25, Y+52	; 0x34
    2f0e:	20 e0       	ldi	r18, 0x00	; 0
    2f10:	3f ef       	ldi	r19, 0xFF	; 255
    2f12:	4f e7       	ldi	r20, 0x7F	; 127
    2f14:	57 e4       	ldi	r21, 0x47	; 71
    2f16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f1a:	18 16       	cp	r1, r24
    2f1c:	4c f5       	brge	.+82     	; 0x2f70 <MODE_4+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f1e:	6d a9       	ldd	r22, Y+53	; 0x35
    2f20:	7e a9       	ldd	r23, Y+54	; 0x36
    2f22:	8f a9       	ldd	r24, Y+55	; 0x37
    2f24:	98 ad       	ldd	r25, Y+56	; 0x38
    2f26:	20 e0       	ldi	r18, 0x00	; 0
    2f28:	30 e0       	ldi	r19, 0x00	; 0
    2f2a:	40 e2       	ldi	r20, 0x20	; 32
    2f2c:	51 e4       	ldi	r21, 0x41	; 65
    2f2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f32:	dc 01       	movw	r26, r24
    2f34:	cb 01       	movw	r24, r22
    2f36:	bc 01       	movw	r22, r24
    2f38:	cd 01       	movw	r24, r26
    2f3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f3e:	dc 01       	movw	r26, r24
    2f40:	cb 01       	movw	r24, r22
    2f42:	98 ab       	std	Y+48, r25	; 0x30
    2f44:	8f a7       	std	Y+47, r24	; 0x2f
    2f46:	0f c0       	rjmp	.+30     	; 0x2f66 <MODE_4+0x658>
    2f48:	88 ec       	ldi	r24, 0xC8	; 200
    2f4a:	90 e0       	ldi	r25, 0x00	; 0
    2f4c:	9e a7       	std	Y+46, r25	; 0x2e
    2f4e:	8d a7       	std	Y+45, r24	; 0x2d
    2f50:	8d a5       	ldd	r24, Y+45	; 0x2d
    2f52:	9e a5       	ldd	r25, Y+46	; 0x2e
    2f54:	01 97       	sbiw	r24, 0x01	; 1
    2f56:	f1 f7       	brne	.-4      	; 0x2f54 <MODE_4+0x646>
    2f58:	9e a7       	std	Y+46, r25	; 0x2e
    2f5a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f5c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f5e:	98 a9       	ldd	r25, Y+48	; 0x30
    2f60:	01 97       	sbiw	r24, 0x01	; 1
    2f62:	98 ab       	std	Y+48, r25	; 0x30
    2f64:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f66:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f68:	98 a9       	ldd	r25, Y+48	; 0x30
    2f6a:	00 97       	sbiw	r24, 0x00	; 0
    2f6c:	69 f7       	brne	.-38     	; 0x2f48 <MODE_4+0x63a>
    2f6e:	14 c0       	rjmp	.+40     	; 0x2f98 <MODE_4+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f70:	69 a9       	ldd	r22, Y+49	; 0x31
    2f72:	7a a9       	ldd	r23, Y+50	; 0x32
    2f74:	8b a9       	ldd	r24, Y+51	; 0x33
    2f76:	9c a9       	ldd	r25, Y+52	; 0x34
    2f78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f7c:	dc 01       	movw	r26, r24
    2f7e:	cb 01       	movw	r24, r22
    2f80:	98 ab       	std	Y+48, r25	; 0x30
    2f82:	8f a7       	std	Y+47, r24	; 0x2f
    2f84:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f86:	98 a9       	ldd	r25, Y+48	; 0x30
    2f88:	9c a7       	std	Y+44, r25	; 0x2c
    2f8a:	8b a7       	std	Y+43, r24	; 0x2b
    2f8c:	8b a5       	ldd	r24, Y+43	; 0x2b
    2f8e:	9c a5       	ldd	r25, Y+44	; 0x2c
    2f90:	01 97       	sbiw	r24, 0x01	; 1
    2f92:	f1 f7       	brne	.-4      	; 0x2f90 <MODE_4+0x682>
    2f94:	9c a7       	std	Y+44, r25	; 0x2c
    2f96:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, OFF);
    2f98:	82 e0       	ldi	r24, 0x02	; 2
    2f9a:	60 e0       	ldi	r22, 0x00	; 0
    2f9c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED6, OFF);
    2fa0:	85 e0       	ldi	r24, 0x05	; 5
    2fa2:	60 e0       	ldi	r22, 0x00	; 0
    2fa4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    2fa8:	80 e0       	ldi	r24, 0x00	; 0
    2faa:	90 e0       	ldi	r25, 0x00	; 0
    2fac:	a8 e4       	ldi	r26, 0x48	; 72
    2fae:	b2 e4       	ldi	r27, 0x42	; 66
    2fb0:	8f a3       	std	Y+39, r24	; 0x27
    2fb2:	98 a7       	std	Y+40, r25	; 0x28
    2fb4:	a9 a7       	std	Y+41, r26	; 0x29
    2fb6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fb8:	6f a1       	ldd	r22, Y+39	; 0x27
    2fba:	78 a5       	ldd	r23, Y+40	; 0x28
    2fbc:	89 a5       	ldd	r24, Y+41	; 0x29
    2fbe:	9a a5       	ldd	r25, Y+42	; 0x2a
    2fc0:	20 e0       	ldi	r18, 0x00	; 0
    2fc2:	30 e0       	ldi	r19, 0x00	; 0
    2fc4:	4a ef       	ldi	r20, 0xFA	; 250
    2fc6:	54 e4       	ldi	r21, 0x44	; 68
    2fc8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fcc:	dc 01       	movw	r26, r24
    2fce:	cb 01       	movw	r24, r22
    2fd0:	8b a3       	std	Y+35, r24	; 0x23
    2fd2:	9c a3       	std	Y+36, r25	; 0x24
    2fd4:	ad a3       	std	Y+37, r26	; 0x25
    2fd6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2fd8:	6b a1       	ldd	r22, Y+35	; 0x23
    2fda:	7c a1       	ldd	r23, Y+36	; 0x24
    2fdc:	8d a1       	ldd	r24, Y+37	; 0x25
    2fde:	9e a1       	ldd	r25, Y+38	; 0x26
    2fe0:	20 e0       	ldi	r18, 0x00	; 0
    2fe2:	30 e0       	ldi	r19, 0x00	; 0
    2fe4:	40 e8       	ldi	r20, 0x80	; 128
    2fe6:	5f e3       	ldi	r21, 0x3F	; 63
    2fe8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fec:	88 23       	and	r24, r24
    2fee:	2c f4       	brge	.+10     	; 0x2ffa <MODE_4+0x6ec>
		__ticks = 1;
    2ff0:	81 e0       	ldi	r24, 0x01	; 1
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	9a a3       	std	Y+34, r25	; 0x22
    2ff6:	89 a3       	std	Y+33, r24	; 0x21
    2ff8:	3f c0       	rjmp	.+126    	; 0x3078 <MODE_4+0x76a>
	else if (__tmp > 65535)
    2ffa:	6b a1       	ldd	r22, Y+35	; 0x23
    2ffc:	7c a1       	ldd	r23, Y+36	; 0x24
    2ffe:	8d a1       	ldd	r24, Y+37	; 0x25
    3000:	9e a1       	ldd	r25, Y+38	; 0x26
    3002:	20 e0       	ldi	r18, 0x00	; 0
    3004:	3f ef       	ldi	r19, 0xFF	; 255
    3006:	4f e7       	ldi	r20, 0x7F	; 127
    3008:	57 e4       	ldi	r21, 0x47	; 71
    300a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    300e:	18 16       	cp	r1, r24
    3010:	4c f5       	brge	.+82     	; 0x3064 <MODE_4+0x756>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3012:	6f a1       	ldd	r22, Y+39	; 0x27
    3014:	78 a5       	ldd	r23, Y+40	; 0x28
    3016:	89 a5       	ldd	r24, Y+41	; 0x29
    3018:	9a a5       	ldd	r25, Y+42	; 0x2a
    301a:	20 e0       	ldi	r18, 0x00	; 0
    301c:	30 e0       	ldi	r19, 0x00	; 0
    301e:	40 e2       	ldi	r20, 0x20	; 32
    3020:	51 e4       	ldi	r21, 0x41	; 65
    3022:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3026:	dc 01       	movw	r26, r24
    3028:	cb 01       	movw	r24, r22
    302a:	bc 01       	movw	r22, r24
    302c:	cd 01       	movw	r24, r26
    302e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3032:	dc 01       	movw	r26, r24
    3034:	cb 01       	movw	r24, r22
    3036:	9a a3       	std	Y+34, r25	; 0x22
    3038:	89 a3       	std	Y+33, r24	; 0x21
    303a:	0f c0       	rjmp	.+30     	; 0x305a <MODE_4+0x74c>
    303c:	88 ec       	ldi	r24, 0xC8	; 200
    303e:	90 e0       	ldi	r25, 0x00	; 0
    3040:	98 a3       	std	Y+32, r25	; 0x20
    3042:	8f 8f       	std	Y+31, r24	; 0x1f
    3044:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3046:	98 a1       	ldd	r25, Y+32	; 0x20
    3048:	01 97       	sbiw	r24, 0x01	; 1
    304a:	f1 f7       	brne	.-4      	; 0x3048 <MODE_4+0x73a>
    304c:	98 a3       	std	Y+32, r25	; 0x20
    304e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3050:	89 a1       	ldd	r24, Y+33	; 0x21
    3052:	9a a1       	ldd	r25, Y+34	; 0x22
    3054:	01 97       	sbiw	r24, 0x01	; 1
    3056:	9a a3       	std	Y+34, r25	; 0x22
    3058:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    305a:	89 a1       	ldd	r24, Y+33	; 0x21
    305c:	9a a1       	ldd	r25, Y+34	; 0x22
    305e:	00 97       	sbiw	r24, 0x00	; 0
    3060:	69 f7       	brne	.-38     	; 0x303c <MODE_4+0x72e>
    3062:	14 c0       	rjmp	.+40     	; 0x308c <MODE_4+0x77e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3064:	6b a1       	ldd	r22, Y+35	; 0x23
    3066:	7c a1       	ldd	r23, Y+36	; 0x24
    3068:	8d a1       	ldd	r24, Y+37	; 0x25
    306a:	9e a1       	ldd	r25, Y+38	; 0x26
    306c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3070:	dc 01       	movw	r26, r24
    3072:	cb 01       	movw	r24, r22
    3074:	9a a3       	std	Y+34, r25	; 0x22
    3076:	89 a3       	std	Y+33, r24	; 0x21
    3078:	89 a1       	ldd	r24, Y+33	; 0x21
    307a:	9a a1       	ldd	r25, Y+34	; 0x22
    307c:	9e 8f       	std	Y+30, r25	; 0x1e
    307e:	8d 8f       	std	Y+29, r24	; 0x1d
    3080:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3082:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3084:	01 97       	sbiw	r24, 0x01	; 1
    3086:	f1 f7       	brne	.-4      	; 0x3084 <MODE_4+0x776>
    3088:	9e 8f       	std	Y+30, r25	; 0x1e
    308a:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED4, ON);
    308c:	83 e0       	ldi	r24, 0x03	; 3
    308e:	61 e0       	ldi	r22, 0x01	; 1
    3090:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED5, ON);
    3094:	84 e0       	ldi	r24, 0x04	; 4
    3096:	61 e0       	ldi	r22, 0x01	; 1
    3098:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    309c:	80 e0       	ldi	r24, 0x00	; 0
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	a8 e4       	ldi	r26, 0x48	; 72
    30a2:	b2 e4       	ldi	r27, 0x42	; 66
    30a4:	89 8f       	std	Y+25, r24	; 0x19
    30a6:	9a 8f       	std	Y+26, r25	; 0x1a
    30a8:	ab 8f       	std	Y+27, r26	; 0x1b
    30aa:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30ac:	69 8d       	ldd	r22, Y+25	; 0x19
    30ae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    30b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    30b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    30b4:	20 e0       	ldi	r18, 0x00	; 0
    30b6:	30 e0       	ldi	r19, 0x00	; 0
    30b8:	4a ef       	ldi	r20, 0xFA	; 250
    30ba:	54 e4       	ldi	r21, 0x44	; 68
    30bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30c0:	dc 01       	movw	r26, r24
    30c2:	cb 01       	movw	r24, r22
    30c4:	8d 8b       	std	Y+21, r24	; 0x15
    30c6:	9e 8b       	std	Y+22, r25	; 0x16
    30c8:	af 8b       	std	Y+23, r26	; 0x17
    30ca:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    30cc:	6d 89       	ldd	r22, Y+21	; 0x15
    30ce:	7e 89       	ldd	r23, Y+22	; 0x16
    30d0:	8f 89       	ldd	r24, Y+23	; 0x17
    30d2:	98 8d       	ldd	r25, Y+24	; 0x18
    30d4:	20 e0       	ldi	r18, 0x00	; 0
    30d6:	30 e0       	ldi	r19, 0x00	; 0
    30d8:	40 e8       	ldi	r20, 0x80	; 128
    30da:	5f e3       	ldi	r21, 0x3F	; 63
    30dc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    30e0:	88 23       	and	r24, r24
    30e2:	2c f4       	brge	.+10     	; 0x30ee <MODE_4+0x7e0>
		__ticks = 1;
    30e4:	81 e0       	ldi	r24, 0x01	; 1
    30e6:	90 e0       	ldi	r25, 0x00	; 0
    30e8:	9c 8b       	std	Y+20, r25	; 0x14
    30ea:	8b 8b       	std	Y+19, r24	; 0x13
    30ec:	3f c0       	rjmp	.+126    	; 0x316c <MODE_4+0x85e>
	else if (__tmp > 65535)
    30ee:	6d 89       	ldd	r22, Y+21	; 0x15
    30f0:	7e 89       	ldd	r23, Y+22	; 0x16
    30f2:	8f 89       	ldd	r24, Y+23	; 0x17
    30f4:	98 8d       	ldd	r25, Y+24	; 0x18
    30f6:	20 e0       	ldi	r18, 0x00	; 0
    30f8:	3f ef       	ldi	r19, 0xFF	; 255
    30fa:	4f e7       	ldi	r20, 0x7F	; 127
    30fc:	57 e4       	ldi	r21, 0x47	; 71
    30fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3102:	18 16       	cp	r1, r24
    3104:	4c f5       	brge	.+82     	; 0x3158 <MODE_4+0x84a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3106:	69 8d       	ldd	r22, Y+25	; 0x19
    3108:	7a 8d       	ldd	r23, Y+26	; 0x1a
    310a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    310c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    310e:	20 e0       	ldi	r18, 0x00	; 0
    3110:	30 e0       	ldi	r19, 0x00	; 0
    3112:	40 e2       	ldi	r20, 0x20	; 32
    3114:	51 e4       	ldi	r21, 0x41	; 65
    3116:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    311a:	dc 01       	movw	r26, r24
    311c:	cb 01       	movw	r24, r22
    311e:	bc 01       	movw	r22, r24
    3120:	cd 01       	movw	r24, r26
    3122:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3126:	dc 01       	movw	r26, r24
    3128:	cb 01       	movw	r24, r22
    312a:	9c 8b       	std	Y+20, r25	; 0x14
    312c:	8b 8b       	std	Y+19, r24	; 0x13
    312e:	0f c0       	rjmp	.+30     	; 0x314e <MODE_4+0x840>
    3130:	88 ec       	ldi	r24, 0xC8	; 200
    3132:	90 e0       	ldi	r25, 0x00	; 0
    3134:	9a 8b       	std	Y+18, r25	; 0x12
    3136:	89 8b       	std	Y+17, r24	; 0x11
    3138:	89 89       	ldd	r24, Y+17	; 0x11
    313a:	9a 89       	ldd	r25, Y+18	; 0x12
    313c:	01 97       	sbiw	r24, 0x01	; 1
    313e:	f1 f7       	brne	.-4      	; 0x313c <MODE_4+0x82e>
    3140:	9a 8b       	std	Y+18, r25	; 0x12
    3142:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3144:	8b 89       	ldd	r24, Y+19	; 0x13
    3146:	9c 89       	ldd	r25, Y+20	; 0x14
    3148:	01 97       	sbiw	r24, 0x01	; 1
    314a:	9c 8b       	std	Y+20, r25	; 0x14
    314c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    314e:	8b 89       	ldd	r24, Y+19	; 0x13
    3150:	9c 89       	ldd	r25, Y+20	; 0x14
    3152:	00 97       	sbiw	r24, 0x00	; 0
    3154:	69 f7       	brne	.-38     	; 0x3130 <MODE_4+0x822>
    3156:	14 c0       	rjmp	.+40     	; 0x3180 <MODE_4+0x872>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3158:	6d 89       	ldd	r22, Y+21	; 0x15
    315a:	7e 89       	ldd	r23, Y+22	; 0x16
    315c:	8f 89       	ldd	r24, Y+23	; 0x17
    315e:	98 8d       	ldd	r25, Y+24	; 0x18
    3160:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3164:	dc 01       	movw	r26, r24
    3166:	cb 01       	movw	r24, r22
    3168:	9c 8b       	std	Y+20, r25	; 0x14
    316a:	8b 8b       	std	Y+19, r24	; 0x13
    316c:	8b 89       	ldd	r24, Y+19	; 0x13
    316e:	9c 89       	ldd	r25, Y+20	; 0x14
    3170:	98 8b       	std	Y+16, r25	; 0x10
    3172:	8f 87       	std	Y+15, r24	; 0x0f
    3174:	8f 85       	ldd	r24, Y+15	; 0x0f
    3176:	98 89       	ldd	r25, Y+16	; 0x10
    3178:	01 97       	sbiw	r24, 0x01	; 1
    317a:	f1 f7       	brne	.-4      	; 0x3178 <MODE_4+0x86a>
    317c:	98 8b       	std	Y+16, r25	; 0x10
    317e:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED4, OFF);
    3180:	83 e0       	ldi	r24, 0x03	; 3
    3182:	60 e0       	ldi	r22, 0x00	; 0
    3184:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED5, OFF);
    3188:	84 e0       	ldi	r24, 0x04	; 4
    318a:	60 e0       	ldi	r22, 0x00	; 0
    318c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3190:	80 e0       	ldi	r24, 0x00	; 0
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	a6 e9       	ldi	r26, 0x96	; 150
    3196:	b3 e4       	ldi	r27, 0x43	; 67
    3198:	8b 87       	std	Y+11, r24	; 0x0b
    319a:	9c 87       	std	Y+12, r25	; 0x0c
    319c:	ad 87       	std	Y+13, r26	; 0x0d
    319e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    31a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    31a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    31a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    31a8:	20 e0       	ldi	r18, 0x00	; 0
    31aa:	30 e0       	ldi	r19, 0x00	; 0
    31ac:	4a ef       	ldi	r20, 0xFA	; 250
    31ae:	54 e4       	ldi	r21, 0x44	; 68
    31b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31b4:	dc 01       	movw	r26, r24
    31b6:	cb 01       	movw	r24, r22
    31b8:	8f 83       	std	Y+7, r24	; 0x07
    31ba:	98 87       	std	Y+8, r25	; 0x08
    31bc:	a9 87       	std	Y+9, r26	; 0x09
    31be:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    31c0:	6f 81       	ldd	r22, Y+7	; 0x07
    31c2:	78 85       	ldd	r23, Y+8	; 0x08
    31c4:	89 85       	ldd	r24, Y+9	; 0x09
    31c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    31c8:	20 e0       	ldi	r18, 0x00	; 0
    31ca:	30 e0       	ldi	r19, 0x00	; 0
    31cc:	40 e8       	ldi	r20, 0x80	; 128
    31ce:	5f e3       	ldi	r21, 0x3F	; 63
    31d0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    31d4:	88 23       	and	r24, r24
    31d6:	2c f4       	brge	.+10     	; 0x31e2 <MODE_4+0x8d4>
		__ticks = 1;
    31d8:	81 e0       	ldi	r24, 0x01	; 1
    31da:	90 e0       	ldi	r25, 0x00	; 0
    31dc:	9e 83       	std	Y+6, r25	; 0x06
    31de:	8d 83       	std	Y+5, r24	; 0x05
    31e0:	3f c0       	rjmp	.+126    	; 0x3260 <MODE_4+0x952>
	else if (__tmp > 65535)
    31e2:	6f 81       	ldd	r22, Y+7	; 0x07
    31e4:	78 85       	ldd	r23, Y+8	; 0x08
    31e6:	89 85       	ldd	r24, Y+9	; 0x09
    31e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	3f ef       	ldi	r19, 0xFF	; 255
    31ee:	4f e7       	ldi	r20, 0x7F	; 127
    31f0:	57 e4       	ldi	r21, 0x47	; 71
    31f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    31f6:	18 16       	cp	r1, r24
    31f8:	4c f5       	brge	.+82     	; 0x324c <MODE_4+0x93e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31fa:	6b 85       	ldd	r22, Y+11	; 0x0b
    31fc:	7c 85       	ldd	r23, Y+12	; 0x0c
    31fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    3200:	9e 85       	ldd	r25, Y+14	; 0x0e
    3202:	20 e0       	ldi	r18, 0x00	; 0
    3204:	30 e0       	ldi	r19, 0x00	; 0
    3206:	40 e2       	ldi	r20, 0x20	; 32
    3208:	51 e4       	ldi	r21, 0x41	; 65
    320a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    320e:	dc 01       	movw	r26, r24
    3210:	cb 01       	movw	r24, r22
    3212:	bc 01       	movw	r22, r24
    3214:	cd 01       	movw	r24, r26
    3216:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    321a:	dc 01       	movw	r26, r24
    321c:	cb 01       	movw	r24, r22
    321e:	9e 83       	std	Y+6, r25	; 0x06
    3220:	8d 83       	std	Y+5, r24	; 0x05
    3222:	0f c0       	rjmp	.+30     	; 0x3242 <MODE_4+0x934>
    3224:	88 ec       	ldi	r24, 0xC8	; 200
    3226:	90 e0       	ldi	r25, 0x00	; 0
    3228:	9c 83       	std	Y+4, r25	; 0x04
    322a:	8b 83       	std	Y+3, r24	; 0x03
    322c:	8b 81       	ldd	r24, Y+3	; 0x03
    322e:	9c 81       	ldd	r25, Y+4	; 0x04
    3230:	01 97       	sbiw	r24, 0x01	; 1
    3232:	f1 f7       	brne	.-4      	; 0x3230 <MODE_4+0x922>
    3234:	9c 83       	std	Y+4, r25	; 0x04
    3236:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3238:	8d 81       	ldd	r24, Y+5	; 0x05
    323a:	9e 81       	ldd	r25, Y+6	; 0x06
    323c:	01 97       	sbiw	r24, 0x01	; 1
    323e:	9e 83       	std	Y+6, r25	; 0x06
    3240:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3242:	8d 81       	ldd	r24, Y+5	; 0x05
    3244:	9e 81       	ldd	r25, Y+6	; 0x06
    3246:	00 97       	sbiw	r24, 0x00	; 0
    3248:	69 f7       	brne	.-38     	; 0x3224 <MODE_4+0x916>
    324a:	14 c0       	rjmp	.+40     	; 0x3274 <MODE_4+0x966>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    324c:	6f 81       	ldd	r22, Y+7	; 0x07
    324e:	78 85       	ldd	r23, Y+8	; 0x08
    3250:	89 85       	ldd	r24, Y+9	; 0x09
    3252:	9a 85       	ldd	r25, Y+10	; 0x0a
    3254:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3258:	dc 01       	movw	r26, r24
    325a:	cb 01       	movw	r24, r22
    325c:	9e 83       	std	Y+6, r25	; 0x06
    325e:	8d 83       	std	Y+5, r24	; 0x05
    3260:	8d 81       	ldd	r24, Y+5	; 0x05
    3262:	9e 81       	ldd	r25, Y+6	; 0x06
    3264:	9a 83       	std	Y+2, r25	; 0x02
    3266:	89 83       	std	Y+1, r24	; 0x01
    3268:	89 81       	ldd	r24, Y+1	; 0x01
    326a:	9a 81       	ldd	r25, Y+2	; 0x02
    326c:	01 97       	sbiw	r24, 0x01	; 1
    326e:	f1 f7       	brne	.-4      	; 0x326c <MODE_4+0x95e>
    3270:	9a 83       	std	Y+2, r25	; 0x02
    3272:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_4 */
    3274:	c0 59       	subi	r28, 0x90	; 144
    3276:	df 4f       	sbci	r29, 0xFF	; 255
    3278:	0f b6       	in	r0, 0x3f	; 63
    327a:	f8 94       	cli
    327c:	de bf       	out	0x3e, r29	; 62
    327e:	0f be       	out	0x3f, r0	; 63
    3280:	cd bf       	out	0x3d, r28	; 61
    3282:	cf 91       	pop	r28
    3284:	df 91       	pop	r29
    3286:	1f 91       	pop	r17
    3288:	0f 91       	pop	r16
    328a:	08 95       	ret

0000328c <MODE_5>:
/**
 * @brief function to implement mode 5
 */
static void MODE_5(void)
{
    328c:	0f 93       	push	r16
    328e:	1f 93       	push	r17
    3290:	df 93       	push	r29
    3292:	cf 93       	push	r28
    3294:	cd b7       	in	r28, 0x3d	; 61
    3296:	de b7       	in	r29, 0x3e	; 62
    3298:	c0 57       	subi	r28, 0x70	; 112
    329a:	d0 40       	sbci	r29, 0x00	; 0
    329c:	0f b6       	in	r0, 0x3f	; 63
    329e:	f8 94       	cli
    32a0:	de bf       	out	0x3e, r29	; 62
    32a2:	0f be       	out	0x3f, r0	; 63
    32a4:	cd bf       	out	0x3d, r28	; 61
	LED_CTRL(LED4, ON);
    32a6:	83 e0       	ldi	r24, 0x03	; 3
    32a8:	61 e0       	ldi	r22, 0x01	; 1
    32aa:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED5, ON);
    32ae:	84 e0       	ldi	r24, 0x04	; 4
    32b0:	61 e0       	ldi	r22, 0x01	; 1
    32b2:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    32b6:	fe 01       	movw	r30, r28
    32b8:	e3 59       	subi	r30, 0x93	; 147
    32ba:	ff 4f       	sbci	r31, 0xFF	; 255
    32bc:	80 e0       	ldi	r24, 0x00	; 0
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	a8 e4       	ldi	r26, 0x48	; 72
    32c2:	b2 e4       	ldi	r27, 0x42	; 66
    32c4:	80 83       	st	Z, r24
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	a2 83       	std	Z+2, r26	; 0x02
    32ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32cc:	8e 01       	movw	r16, r28
    32ce:	07 59       	subi	r16, 0x97	; 151
    32d0:	1f 4f       	sbci	r17, 0xFF	; 255
    32d2:	fe 01       	movw	r30, r28
    32d4:	e3 59       	subi	r30, 0x93	; 147
    32d6:	ff 4f       	sbci	r31, 0xFF	; 255
    32d8:	60 81       	ld	r22, Z
    32da:	71 81       	ldd	r23, Z+1	; 0x01
    32dc:	82 81       	ldd	r24, Z+2	; 0x02
    32de:	93 81       	ldd	r25, Z+3	; 0x03
    32e0:	20 e0       	ldi	r18, 0x00	; 0
    32e2:	30 e0       	ldi	r19, 0x00	; 0
    32e4:	4a ef       	ldi	r20, 0xFA	; 250
    32e6:	54 e4       	ldi	r21, 0x44	; 68
    32e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32ec:	dc 01       	movw	r26, r24
    32ee:	cb 01       	movw	r24, r22
    32f0:	f8 01       	movw	r30, r16
    32f2:	80 83       	st	Z, r24
    32f4:	91 83       	std	Z+1, r25	; 0x01
    32f6:	a2 83       	std	Z+2, r26	; 0x02
    32f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32fa:	fe 01       	movw	r30, r28
    32fc:	e7 59       	subi	r30, 0x97	; 151
    32fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3300:	60 81       	ld	r22, Z
    3302:	71 81       	ldd	r23, Z+1	; 0x01
    3304:	82 81       	ldd	r24, Z+2	; 0x02
    3306:	93 81       	ldd	r25, Z+3	; 0x03
    3308:	20 e0       	ldi	r18, 0x00	; 0
    330a:	30 e0       	ldi	r19, 0x00	; 0
    330c:	40 e8       	ldi	r20, 0x80	; 128
    330e:	5f e3       	ldi	r21, 0x3F	; 63
    3310:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3314:	88 23       	and	r24, r24
    3316:	44 f4       	brge	.+16     	; 0x3328 <MODE_5+0x9c>
		__ticks = 1;
    3318:	fe 01       	movw	r30, r28
    331a:	e9 59       	subi	r30, 0x99	; 153
    331c:	ff 4f       	sbci	r31, 0xFF	; 255
    331e:	81 e0       	ldi	r24, 0x01	; 1
    3320:	90 e0       	ldi	r25, 0x00	; 0
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	64 c0       	rjmp	.+200    	; 0x33f0 <MODE_5+0x164>
	else if (__tmp > 65535)
    3328:	fe 01       	movw	r30, r28
    332a:	e7 59       	subi	r30, 0x97	; 151
    332c:	ff 4f       	sbci	r31, 0xFF	; 255
    332e:	60 81       	ld	r22, Z
    3330:	71 81       	ldd	r23, Z+1	; 0x01
    3332:	82 81       	ldd	r24, Z+2	; 0x02
    3334:	93 81       	ldd	r25, Z+3	; 0x03
    3336:	20 e0       	ldi	r18, 0x00	; 0
    3338:	3f ef       	ldi	r19, 0xFF	; 255
    333a:	4f e7       	ldi	r20, 0x7F	; 127
    333c:	57 e4       	ldi	r21, 0x47	; 71
    333e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3342:	18 16       	cp	r1, r24
    3344:	0c f0       	brlt	.+2      	; 0x3348 <MODE_5+0xbc>
    3346:	43 c0       	rjmp	.+134    	; 0x33ce <MODE_5+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3348:	fe 01       	movw	r30, r28
    334a:	e3 59       	subi	r30, 0x93	; 147
    334c:	ff 4f       	sbci	r31, 0xFF	; 255
    334e:	60 81       	ld	r22, Z
    3350:	71 81       	ldd	r23, Z+1	; 0x01
    3352:	82 81       	ldd	r24, Z+2	; 0x02
    3354:	93 81       	ldd	r25, Z+3	; 0x03
    3356:	20 e0       	ldi	r18, 0x00	; 0
    3358:	30 e0       	ldi	r19, 0x00	; 0
    335a:	40 e2       	ldi	r20, 0x20	; 32
    335c:	51 e4       	ldi	r21, 0x41	; 65
    335e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3362:	dc 01       	movw	r26, r24
    3364:	cb 01       	movw	r24, r22
    3366:	8e 01       	movw	r16, r28
    3368:	09 59       	subi	r16, 0x99	; 153
    336a:	1f 4f       	sbci	r17, 0xFF	; 255
    336c:	bc 01       	movw	r22, r24
    336e:	cd 01       	movw	r24, r26
    3370:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3374:	dc 01       	movw	r26, r24
    3376:	cb 01       	movw	r24, r22
    3378:	f8 01       	movw	r30, r16
    337a:	91 83       	std	Z+1, r25	; 0x01
    337c:	80 83       	st	Z, r24
    337e:	1f c0       	rjmp	.+62     	; 0x33be <MODE_5+0x132>
    3380:	fe 01       	movw	r30, r28
    3382:	eb 59       	subi	r30, 0x9B	; 155
    3384:	ff 4f       	sbci	r31, 0xFF	; 255
    3386:	88 ec       	ldi	r24, 0xC8	; 200
    3388:	90 e0       	ldi	r25, 0x00	; 0
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
    338e:	fe 01       	movw	r30, r28
    3390:	eb 59       	subi	r30, 0x9B	; 155
    3392:	ff 4f       	sbci	r31, 0xFF	; 255
    3394:	80 81       	ld	r24, Z
    3396:	91 81       	ldd	r25, Z+1	; 0x01
    3398:	01 97       	sbiw	r24, 0x01	; 1
    339a:	f1 f7       	brne	.-4      	; 0x3398 <MODE_5+0x10c>
    339c:	fe 01       	movw	r30, r28
    339e:	eb 59       	subi	r30, 0x9B	; 155
    33a0:	ff 4f       	sbci	r31, 0xFF	; 255
    33a2:	91 83       	std	Z+1, r25	; 0x01
    33a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33a6:	de 01       	movw	r26, r28
    33a8:	a9 59       	subi	r26, 0x99	; 153
    33aa:	bf 4f       	sbci	r27, 0xFF	; 255
    33ac:	fe 01       	movw	r30, r28
    33ae:	e9 59       	subi	r30, 0x99	; 153
    33b0:	ff 4f       	sbci	r31, 0xFF	; 255
    33b2:	80 81       	ld	r24, Z
    33b4:	91 81       	ldd	r25, Z+1	; 0x01
    33b6:	01 97       	sbiw	r24, 0x01	; 1
    33b8:	11 96       	adiw	r26, 0x01	; 1
    33ba:	9c 93       	st	X, r25
    33bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33be:	fe 01       	movw	r30, r28
    33c0:	e9 59       	subi	r30, 0x99	; 153
    33c2:	ff 4f       	sbci	r31, 0xFF	; 255
    33c4:	80 81       	ld	r24, Z
    33c6:	91 81       	ldd	r25, Z+1	; 0x01
    33c8:	00 97       	sbiw	r24, 0x00	; 0
    33ca:	d1 f6       	brne	.-76     	; 0x3380 <MODE_5+0xf4>
    33cc:	27 c0       	rjmp	.+78     	; 0x341c <MODE_5+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33ce:	8e 01       	movw	r16, r28
    33d0:	09 59       	subi	r16, 0x99	; 153
    33d2:	1f 4f       	sbci	r17, 0xFF	; 255
    33d4:	fe 01       	movw	r30, r28
    33d6:	e7 59       	subi	r30, 0x97	; 151
    33d8:	ff 4f       	sbci	r31, 0xFF	; 255
    33da:	60 81       	ld	r22, Z
    33dc:	71 81       	ldd	r23, Z+1	; 0x01
    33de:	82 81       	ldd	r24, Z+2	; 0x02
    33e0:	93 81       	ldd	r25, Z+3	; 0x03
    33e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	f8 01       	movw	r30, r16
    33ec:	91 83       	std	Z+1, r25	; 0x01
    33ee:	80 83       	st	Z, r24
    33f0:	de 01       	movw	r26, r28
    33f2:	ad 59       	subi	r26, 0x9D	; 157
    33f4:	bf 4f       	sbci	r27, 0xFF	; 255
    33f6:	fe 01       	movw	r30, r28
    33f8:	e9 59       	subi	r30, 0x99	; 153
    33fa:	ff 4f       	sbci	r31, 0xFF	; 255
    33fc:	80 81       	ld	r24, Z
    33fe:	91 81       	ldd	r25, Z+1	; 0x01
    3400:	8d 93       	st	X+, r24
    3402:	9c 93       	st	X, r25
    3404:	fe 01       	movw	r30, r28
    3406:	ed 59       	subi	r30, 0x9D	; 157
    3408:	ff 4f       	sbci	r31, 0xFF	; 255
    340a:	80 81       	ld	r24, Z
    340c:	91 81       	ldd	r25, Z+1	; 0x01
    340e:	01 97       	sbiw	r24, 0x01	; 1
    3410:	f1 f7       	brne	.-4      	; 0x340e <MODE_5+0x182>
    3412:	fe 01       	movw	r30, r28
    3414:	ed 59       	subi	r30, 0x9D	; 157
    3416:	ff 4f       	sbci	r31, 0xFF	; 255
    3418:	91 83       	std	Z+1, r25	; 0x01
    341a:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED4, OFF);
    341c:	83 e0       	ldi	r24, 0x03	; 3
    341e:	60 e0       	ldi	r22, 0x00	; 0
    3420:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED5, OFF);
    3424:	84 e0       	ldi	r24, 0x04	; 4
    3426:	60 e0       	ldi	r22, 0x00	; 0
    3428:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    342c:	fe 01       	movw	r30, r28
    342e:	e1 5a       	subi	r30, 0xA1	; 161
    3430:	ff 4f       	sbci	r31, 0xFF	; 255
    3432:	80 e0       	ldi	r24, 0x00	; 0
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	a8 e4       	ldi	r26, 0x48	; 72
    3438:	b2 e4       	ldi	r27, 0x42	; 66
    343a:	80 83       	st	Z, r24
    343c:	91 83       	std	Z+1, r25	; 0x01
    343e:	a2 83       	std	Z+2, r26	; 0x02
    3440:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3442:	8e 01       	movw	r16, r28
    3444:	05 5a       	subi	r16, 0xA5	; 165
    3446:	1f 4f       	sbci	r17, 0xFF	; 255
    3448:	fe 01       	movw	r30, r28
    344a:	e1 5a       	subi	r30, 0xA1	; 161
    344c:	ff 4f       	sbci	r31, 0xFF	; 255
    344e:	60 81       	ld	r22, Z
    3450:	71 81       	ldd	r23, Z+1	; 0x01
    3452:	82 81       	ldd	r24, Z+2	; 0x02
    3454:	93 81       	ldd	r25, Z+3	; 0x03
    3456:	20 e0       	ldi	r18, 0x00	; 0
    3458:	30 e0       	ldi	r19, 0x00	; 0
    345a:	4a ef       	ldi	r20, 0xFA	; 250
    345c:	54 e4       	ldi	r21, 0x44	; 68
    345e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3462:	dc 01       	movw	r26, r24
    3464:	cb 01       	movw	r24, r22
    3466:	f8 01       	movw	r30, r16
    3468:	80 83       	st	Z, r24
    346a:	91 83       	std	Z+1, r25	; 0x01
    346c:	a2 83       	std	Z+2, r26	; 0x02
    346e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3470:	fe 01       	movw	r30, r28
    3472:	e5 5a       	subi	r30, 0xA5	; 165
    3474:	ff 4f       	sbci	r31, 0xFF	; 255
    3476:	60 81       	ld	r22, Z
    3478:	71 81       	ldd	r23, Z+1	; 0x01
    347a:	82 81       	ldd	r24, Z+2	; 0x02
    347c:	93 81       	ldd	r25, Z+3	; 0x03
    347e:	20 e0       	ldi	r18, 0x00	; 0
    3480:	30 e0       	ldi	r19, 0x00	; 0
    3482:	40 e8       	ldi	r20, 0x80	; 128
    3484:	5f e3       	ldi	r21, 0x3F	; 63
    3486:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    348a:	88 23       	and	r24, r24
    348c:	44 f4       	brge	.+16     	; 0x349e <MODE_5+0x212>
		__ticks = 1;
    348e:	fe 01       	movw	r30, r28
    3490:	e7 5a       	subi	r30, 0xA7	; 167
    3492:	ff 4f       	sbci	r31, 0xFF	; 255
    3494:	81 e0       	ldi	r24, 0x01	; 1
    3496:	90 e0       	ldi	r25, 0x00	; 0
    3498:	91 83       	std	Z+1, r25	; 0x01
    349a:	80 83       	st	Z, r24
    349c:	64 c0       	rjmp	.+200    	; 0x3566 <MODE_5+0x2da>
	else if (__tmp > 65535)
    349e:	fe 01       	movw	r30, r28
    34a0:	e5 5a       	subi	r30, 0xA5	; 165
    34a2:	ff 4f       	sbci	r31, 0xFF	; 255
    34a4:	60 81       	ld	r22, Z
    34a6:	71 81       	ldd	r23, Z+1	; 0x01
    34a8:	82 81       	ldd	r24, Z+2	; 0x02
    34aa:	93 81       	ldd	r25, Z+3	; 0x03
    34ac:	20 e0       	ldi	r18, 0x00	; 0
    34ae:	3f ef       	ldi	r19, 0xFF	; 255
    34b0:	4f e7       	ldi	r20, 0x7F	; 127
    34b2:	57 e4       	ldi	r21, 0x47	; 71
    34b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34b8:	18 16       	cp	r1, r24
    34ba:	0c f0       	brlt	.+2      	; 0x34be <MODE_5+0x232>
    34bc:	43 c0       	rjmp	.+134    	; 0x3544 <MODE_5+0x2b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34be:	fe 01       	movw	r30, r28
    34c0:	e1 5a       	subi	r30, 0xA1	; 161
    34c2:	ff 4f       	sbci	r31, 0xFF	; 255
    34c4:	60 81       	ld	r22, Z
    34c6:	71 81       	ldd	r23, Z+1	; 0x01
    34c8:	82 81       	ldd	r24, Z+2	; 0x02
    34ca:	93 81       	ldd	r25, Z+3	; 0x03
    34cc:	20 e0       	ldi	r18, 0x00	; 0
    34ce:	30 e0       	ldi	r19, 0x00	; 0
    34d0:	40 e2       	ldi	r20, 0x20	; 32
    34d2:	51 e4       	ldi	r21, 0x41	; 65
    34d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34d8:	dc 01       	movw	r26, r24
    34da:	cb 01       	movw	r24, r22
    34dc:	8e 01       	movw	r16, r28
    34de:	07 5a       	subi	r16, 0xA7	; 167
    34e0:	1f 4f       	sbci	r17, 0xFF	; 255
    34e2:	bc 01       	movw	r22, r24
    34e4:	cd 01       	movw	r24, r26
    34e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34ea:	dc 01       	movw	r26, r24
    34ec:	cb 01       	movw	r24, r22
    34ee:	f8 01       	movw	r30, r16
    34f0:	91 83       	std	Z+1, r25	; 0x01
    34f2:	80 83       	st	Z, r24
    34f4:	1f c0       	rjmp	.+62     	; 0x3534 <MODE_5+0x2a8>
    34f6:	fe 01       	movw	r30, r28
    34f8:	e9 5a       	subi	r30, 0xA9	; 169
    34fa:	ff 4f       	sbci	r31, 0xFF	; 255
    34fc:	88 ec       	ldi	r24, 0xC8	; 200
    34fe:	90 e0       	ldi	r25, 0x00	; 0
    3500:	91 83       	std	Z+1, r25	; 0x01
    3502:	80 83       	st	Z, r24
    3504:	fe 01       	movw	r30, r28
    3506:	e9 5a       	subi	r30, 0xA9	; 169
    3508:	ff 4f       	sbci	r31, 0xFF	; 255
    350a:	80 81       	ld	r24, Z
    350c:	91 81       	ldd	r25, Z+1	; 0x01
    350e:	01 97       	sbiw	r24, 0x01	; 1
    3510:	f1 f7       	brne	.-4      	; 0x350e <MODE_5+0x282>
    3512:	fe 01       	movw	r30, r28
    3514:	e9 5a       	subi	r30, 0xA9	; 169
    3516:	ff 4f       	sbci	r31, 0xFF	; 255
    3518:	91 83       	std	Z+1, r25	; 0x01
    351a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    351c:	de 01       	movw	r26, r28
    351e:	a7 5a       	subi	r26, 0xA7	; 167
    3520:	bf 4f       	sbci	r27, 0xFF	; 255
    3522:	fe 01       	movw	r30, r28
    3524:	e7 5a       	subi	r30, 0xA7	; 167
    3526:	ff 4f       	sbci	r31, 0xFF	; 255
    3528:	80 81       	ld	r24, Z
    352a:	91 81       	ldd	r25, Z+1	; 0x01
    352c:	01 97       	sbiw	r24, 0x01	; 1
    352e:	11 96       	adiw	r26, 0x01	; 1
    3530:	9c 93       	st	X, r25
    3532:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3534:	fe 01       	movw	r30, r28
    3536:	e7 5a       	subi	r30, 0xA7	; 167
    3538:	ff 4f       	sbci	r31, 0xFF	; 255
    353a:	80 81       	ld	r24, Z
    353c:	91 81       	ldd	r25, Z+1	; 0x01
    353e:	00 97       	sbiw	r24, 0x00	; 0
    3540:	d1 f6       	brne	.-76     	; 0x34f6 <MODE_5+0x26a>
    3542:	27 c0       	rjmp	.+78     	; 0x3592 <MODE_5+0x306>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3544:	8e 01       	movw	r16, r28
    3546:	07 5a       	subi	r16, 0xA7	; 167
    3548:	1f 4f       	sbci	r17, 0xFF	; 255
    354a:	fe 01       	movw	r30, r28
    354c:	e5 5a       	subi	r30, 0xA5	; 165
    354e:	ff 4f       	sbci	r31, 0xFF	; 255
    3550:	60 81       	ld	r22, Z
    3552:	71 81       	ldd	r23, Z+1	; 0x01
    3554:	82 81       	ldd	r24, Z+2	; 0x02
    3556:	93 81       	ldd	r25, Z+3	; 0x03
    3558:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    355c:	dc 01       	movw	r26, r24
    355e:	cb 01       	movw	r24, r22
    3560:	f8 01       	movw	r30, r16
    3562:	91 83       	std	Z+1, r25	; 0x01
    3564:	80 83       	st	Z, r24
    3566:	de 01       	movw	r26, r28
    3568:	ab 5a       	subi	r26, 0xAB	; 171
    356a:	bf 4f       	sbci	r27, 0xFF	; 255
    356c:	fe 01       	movw	r30, r28
    356e:	e7 5a       	subi	r30, 0xA7	; 167
    3570:	ff 4f       	sbci	r31, 0xFF	; 255
    3572:	80 81       	ld	r24, Z
    3574:	91 81       	ldd	r25, Z+1	; 0x01
    3576:	8d 93       	st	X+, r24
    3578:	9c 93       	st	X, r25
    357a:	fe 01       	movw	r30, r28
    357c:	eb 5a       	subi	r30, 0xAB	; 171
    357e:	ff 4f       	sbci	r31, 0xFF	; 255
    3580:	80 81       	ld	r24, Z
    3582:	91 81       	ldd	r25, Z+1	; 0x01
    3584:	01 97       	sbiw	r24, 0x01	; 1
    3586:	f1 f7       	brne	.-4      	; 0x3584 <MODE_5+0x2f8>
    3588:	fe 01       	movw	r30, r28
    358a:	eb 5a       	subi	r30, 0xAB	; 171
    358c:	ff 4f       	sbci	r31, 0xFF	; 255
    358e:	91 83       	std	Z+1, r25	; 0x01
    3590:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, ON);
    3592:	82 e0       	ldi	r24, 0x02	; 2
    3594:	61 e0       	ldi	r22, 0x01	; 1
    3596:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED6, ON);
    359a:	85 e0       	ldi	r24, 0x05	; 5
    359c:	61 e0       	ldi	r22, 0x01	; 1
    359e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    35a2:	fe 01       	movw	r30, r28
    35a4:	ef 5a       	subi	r30, 0xAF	; 175
    35a6:	ff 4f       	sbci	r31, 0xFF	; 255
    35a8:	80 e0       	ldi	r24, 0x00	; 0
    35aa:	90 e0       	ldi	r25, 0x00	; 0
    35ac:	a8 e4       	ldi	r26, 0x48	; 72
    35ae:	b2 e4       	ldi	r27, 0x42	; 66
    35b0:	80 83       	st	Z, r24
    35b2:	91 83       	std	Z+1, r25	; 0x01
    35b4:	a2 83       	std	Z+2, r26	; 0x02
    35b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35b8:	8e 01       	movw	r16, r28
    35ba:	03 5b       	subi	r16, 0xB3	; 179
    35bc:	1f 4f       	sbci	r17, 0xFF	; 255
    35be:	fe 01       	movw	r30, r28
    35c0:	ef 5a       	subi	r30, 0xAF	; 175
    35c2:	ff 4f       	sbci	r31, 0xFF	; 255
    35c4:	60 81       	ld	r22, Z
    35c6:	71 81       	ldd	r23, Z+1	; 0x01
    35c8:	82 81       	ldd	r24, Z+2	; 0x02
    35ca:	93 81       	ldd	r25, Z+3	; 0x03
    35cc:	20 e0       	ldi	r18, 0x00	; 0
    35ce:	30 e0       	ldi	r19, 0x00	; 0
    35d0:	4a ef       	ldi	r20, 0xFA	; 250
    35d2:	54 e4       	ldi	r21, 0x44	; 68
    35d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35d8:	dc 01       	movw	r26, r24
    35da:	cb 01       	movw	r24, r22
    35dc:	f8 01       	movw	r30, r16
    35de:	80 83       	st	Z, r24
    35e0:	91 83       	std	Z+1, r25	; 0x01
    35e2:	a2 83       	std	Z+2, r26	; 0x02
    35e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35e6:	fe 01       	movw	r30, r28
    35e8:	e3 5b       	subi	r30, 0xB3	; 179
    35ea:	ff 4f       	sbci	r31, 0xFF	; 255
    35ec:	60 81       	ld	r22, Z
    35ee:	71 81       	ldd	r23, Z+1	; 0x01
    35f0:	82 81       	ldd	r24, Z+2	; 0x02
    35f2:	93 81       	ldd	r25, Z+3	; 0x03
    35f4:	20 e0       	ldi	r18, 0x00	; 0
    35f6:	30 e0       	ldi	r19, 0x00	; 0
    35f8:	40 e8       	ldi	r20, 0x80	; 128
    35fa:	5f e3       	ldi	r21, 0x3F	; 63
    35fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3600:	88 23       	and	r24, r24
    3602:	44 f4       	brge	.+16     	; 0x3614 <MODE_5+0x388>
		__ticks = 1;
    3604:	fe 01       	movw	r30, r28
    3606:	e5 5b       	subi	r30, 0xB5	; 181
    3608:	ff 4f       	sbci	r31, 0xFF	; 255
    360a:	81 e0       	ldi	r24, 0x01	; 1
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	91 83       	std	Z+1, r25	; 0x01
    3610:	80 83       	st	Z, r24
    3612:	64 c0       	rjmp	.+200    	; 0x36dc <MODE_5+0x450>
	else if (__tmp > 65535)
    3614:	fe 01       	movw	r30, r28
    3616:	e3 5b       	subi	r30, 0xB3	; 179
    3618:	ff 4f       	sbci	r31, 0xFF	; 255
    361a:	60 81       	ld	r22, Z
    361c:	71 81       	ldd	r23, Z+1	; 0x01
    361e:	82 81       	ldd	r24, Z+2	; 0x02
    3620:	93 81       	ldd	r25, Z+3	; 0x03
    3622:	20 e0       	ldi	r18, 0x00	; 0
    3624:	3f ef       	ldi	r19, 0xFF	; 255
    3626:	4f e7       	ldi	r20, 0x7F	; 127
    3628:	57 e4       	ldi	r21, 0x47	; 71
    362a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    362e:	18 16       	cp	r1, r24
    3630:	0c f0       	brlt	.+2      	; 0x3634 <MODE_5+0x3a8>
    3632:	43 c0       	rjmp	.+134    	; 0x36ba <MODE_5+0x42e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3634:	fe 01       	movw	r30, r28
    3636:	ef 5a       	subi	r30, 0xAF	; 175
    3638:	ff 4f       	sbci	r31, 0xFF	; 255
    363a:	60 81       	ld	r22, Z
    363c:	71 81       	ldd	r23, Z+1	; 0x01
    363e:	82 81       	ldd	r24, Z+2	; 0x02
    3640:	93 81       	ldd	r25, Z+3	; 0x03
    3642:	20 e0       	ldi	r18, 0x00	; 0
    3644:	30 e0       	ldi	r19, 0x00	; 0
    3646:	40 e2       	ldi	r20, 0x20	; 32
    3648:	51 e4       	ldi	r21, 0x41	; 65
    364a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    364e:	dc 01       	movw	r26, r24
    3650:	cb 01       	movw	r24, r22
    3652:	8e 01       	movw	r16, r28
    3654:	05 5b       	subi	r16, 0xB5	; 181
    3656:	1f 4f       	sbci	r17, 0xFF	; 255
    3658:	bc 01       	movw	r22, r24
    365a:	cd 01       	movw	r24, r26
    365c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3660:	dc 01       	movw	r26, r24
    3662:	cb 01       	movw	r24, r22
    3664:	f8 01       	movw	r30, r16
    3666:	91 83       	std	Z+1, r25	; 0x01
    3668:	80 83       	st	Z, r24
    366a:	1f c0       	rjmp	.+62     	; 0x36aa <MODE_5+0x41e>
    366c:	fe 01       	movw	r30, r28
    366e:	e7 5b       	subi	r30, 0xB7	; 183
    3670:	ff 4f       	sbci	r31, 0xFF	; 255
    3672:	88 ec       	ldi	r24, 0xC8	; 200
    3674:	90 e0       	ldi	r25, 0x00	; 0
    3676:	91 83       	std	Z+1, r25	; 0x01
    3678:	80 83       	st	Z, r24
    367a:	fe 01       	movw	r30, r28
    367c:	e7 5b       	subi	r30, 0xB7	; 183
    367e:	ff 4f       	sbci	r31, 0xFF	; 255
    3680:	80 81       	ld	r24, Z
    3682:	91 81       	ldd	r25, Z+1	; 0x01
    3684:	01 97       	sbiw	r24, 0x01	; 1
    3686:	f1 f7       	brne	.-4      	; 0x3684 <MODE_5+0x3f8>
    3688:	fe 01       	movw	r30, r28
    368a:	e7 5b       	subi	r30, 0xB7	; 183
    368c:	ff 4f       	sbci	r31, 0xFF	; 255
    368e:	91 83       	std	Z+1, r25	; 0x01
    3690:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3692:	de 01       	movw	r26, r28
    3694:	a5 5b       	subi	r26, 0xB5	; 181
    3696:	bf 4f       	sbci	r27, 0xFF	; 255
    3698:	fe 01       	movw	r30, r28
    369a:	e5 5b       	subi	r30, 0xB5	; 181
    369c:	ff 4f       	sbci	r31, 0xFF	; 255
    369e:	80 81       	ld	r24, Z
    36a0:	91 81       	ldd	r25, Z+1	; 0x01
    36a2:	01 97       	sbiw	r24, 0x01	; 1
    36a4:	11 96       	adiw	r26, 0x01	; 1
    36a6:	9c 93       	st	X, r25
    36a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36aa:	fe 01       	movw	r30, r28
    36ac:	e5 5b       	subi	r30, 0xB5	; 181
    36ae:	ff 4f       	sbci	r31, 0xFF	; 255
    36b0:	80 81       	ld	r24, Z
    36b2:	91 81       	ldd	r25, Z+1	; 0x01
    36b4:	00 97       	sbiw	r24, 0x00	; 0
    36b6:	d1 f6       	brne	.-76     	; 0x366c <MODE_5+0x3e0>
    36b8:	27 c0       	rjmp	.+78     	; 0x3708 <MODE_5+0x47c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36ba:	8e 01       	movw	r16, r28
    36bc:	05 5b       	subi	r16, 0xB5	; 181
    36be:	1f 4f       	sbci	r17, 0xFF	; 255
    36c0:	fe 01       	movw	r30, r28
    36c2:	e3 5b       	subi	r30, 0xB3	; 179
    36c4:	ff 4f       	sbci	r31, 0xFF	; 255
    36c6:	60 81       	ld	r22, Z
    36c8:	71 81       	ldd	r23, Z+1	; 0x01
    36ca:	82 81       	ldd	r24, Z+2	; 0x02
    36cc:	93 81       	ldd	r25, Z+3	; 0x03
    36ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36d2:	dc 01       	movw	r26, r24
    36d4:	cb 01       	movw	r24, r22
    36d6:	f8 01       	movw	r30, r16
    36d8:	91 83       	std	Z+1, r25	; 0x01
    36da:	80 83       	st	Z, r24
    36dc:	de 01       	movw	r26, r28
    36de:	a9 5b       	subi	r26, 0xB9	; 185
    36e0:	bf 4f       	sbci	r27, 0xFF	; 255
    36e2:	fe 01       	movw	r30, r28
    36e4:	e5 5b       	subi	r30, 0xB5	; 181
    36e6:	ff 4f       	sbci	r31, 0xFF	; 255
    36e8:	80 81       	ld	r24, Z
    36ea:	91 81       	ldd	r25, Z+1	; 0x01
    36ec:	8d 93       	st	X+, r24
    36ee:	9c 93       	st	X, r25
    36f0:	fe 01       	movw	r30, r28
    36f2:	e9 5b       	subi	r30, 0xB9	; 185
    36f4:	ff 4f       	sbci	r31, 0xFF	; 255
    36f6:	80 81       	ld	r24, Z
    36f8:	91 81       	ldd	r25, Z+1	; 0x01
    36fa:	01 97       	sbiw	r24, 0x01	; 1
    36fc:	f1 f7       	brne	.-4      	; 0x36fa <MODE_5+0x46e>
    36fe:	fe 01       	movw	r30, r28
    3700:	e9 5b       	subi	r30, 0xB9	; 185
    3702:	ff 4f       	sbci	r31, 0xFF	; 255
    3704:	91 83       	std	Z+1, r25	; 0x01
    3706:	80 83       	st	Z, r24

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED3, OFF);
    3708:	82 e0       	ldi	r24, 0x02	; 2
    370a:	60 e0       	ldi	r22, 0x00	; 0
    370c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED6, OFF);
    3710:	85 e0       	ldi	r24, 0x05	; 5
    3712:	60 e0       	ldi	r22, 0x00	; 0
    3714:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3718:	fe 01       	movw	r30, r28
    371a:	ed 5b       	subi	r30, 0xBD	; 189
    371c:	ff 4f       	sbci	r31, 0xFF	; 255
    371e:	80 e0       	ldi	r24, 0x00	; 0
    3720:	90 e0       	ldi	r25, 0x00	; 0
    3722:	a8 e4       	ldi	r26, 0x48	; 72
    3724:	b2 e4       	ldi	r27, 0x42	; 66
    3726:	80 83       	st	Z, r24
    3728:	91 83       	std	Z+1, r25	; 0x01
    372a:	a2 83       	std	Z+2, r26	; 0x02
    372c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    372e:	8e 01       	movw	r16, r28
    3730:	01 5c       	subi	r16, 0xC1	; 193
    3732:	1f 4f       	sbci	r17, 0xFF	; 255
    3734:	fe 01       	movw	r30, r28
    3736:	ed 5b       	subi	r30, 0xBD	; 189
    3738:	ff 4f       	sbci	r31, 0xFF	; 255
    373a:	60 81       	ld	r22, Z
    373c:	71 81       	ldd	r23, Z+1	; 0x01
    373e:	82 81       	ldd	r24, Z+2	; 0x02
    3740:	93 81       	ldd	r25, Z+3	; 0x03
    3742:	20 e0       	ldi	r18, 0x00	; 0
    3744:	30 e0       	ldi	r19, 0x00	; 0
    3746:	4a ef       	ldi	r20, 0xFA	; 250
    3748:	54 e4       	ldi	r21, 0x44	; 68
    374a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    374e:	dc 01       	movw	r26, r24
    3750:	cb 01       	movw	r24, r22
    3752:	f8 01       	movw	r30, r16
    3754:	80 83       	st	Z, r24
    3756:	91 83       	std	Z+1, r25	; 0x01
    3758:	a2 83       	std	Z+2, r26	; 0x02
    375a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    375c:	fe 01       	movw	r30, r28
    375e:	ff 96       	adiw	r30, 0x3f	; 63
    3760:	60 81       	ld	r22, Z
    3762:	71 81       	ldd	r23, Z+1	; 0x01
    3764:	82 81       	ldd	r24, Z+2	; 0x02
    3766:	93 81       	ldd	r25, Z+3	; 0x03
    3768:	20 e0       	ldi	r18, 0x00	; 0
    376a:	30 e0       	ldi	r19, 0x00	; 0
    376c:	40 e8       	ldi	r20, 0x80	; 128
    376e:	5f e3       	ldi	r21, 0x3F	; 63
    3770:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3774:	88 23       	and	r24, r24
    3776:	2c f4       	brge	.+10     	; 0x3782 <MODE_5+0x4f6>
		__ticks = 1;
    3778:	81 e0       	ldi	r24, 0x01	; 1
    377a:	90 e0       	ldi	r25, 0x00	; 0
    377c:	9e af       	std	Y+62, r25	; 0x3e
    377e:	8d af       	std	Y+61, r24	; 0x3d
    3780:	46 c0       	rjmp	.+140    	; 0x380e <MODE_5+0x582>
	else if (__tmp > 65535)
    3782:	fe 01       	movw	r30, r28
    3784:	ff 96       	adiw	r30, 0x3f	; 63
    3786:	60 81       	ld	r22, Z
    3788:	71 81       	ldd	r23, Z+1	; 0x01
    378a:	82 81       	ldd	r24, Z+2	; 0x02
    378c:	93 81       	ldd	r25, Z+3	; 0x03
    378e:	20 e0       	ldi	r18, 0x00	; 0
    3790:	3f ef       	ldi	r19, 0xFF	; 255
    3792:	4f e7       	ldi	r20, 0x7F	; 127
    3794:	57 e4       	ldi	r21, 0x47	; 71
    3796:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    379a:	18 16       	cp	r1, r24
    379c:	64 f5       	brge	.+88     	; 0x37f6 <MODE_5+0x56a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    379e:	fe 01       	movw	r30, r28
    37a0:	ed 5b       	subi	r30, 0xBD	; 189
    37a2:	ff 4f       	sbci	r31, 0xFF	; 255
    37a4:	60 81       	ld	r22, Z
    37a6:	71 81       	ldd	r23, Z+1	; 0x01
    37a8:	82 81       	ldd	r24, Z+2	; 0x02
    37aa:	93 81       	ldd	r25, Z+3	; 0x03
    37ac:	20 e0       	ldi	r18, 0x00	; 0
    37ae:	30 e0       	ldi	r19, 0x00	; 0
    37b0:	40 e2       	ldi	r20, 0x20	; 32
    37b2:	51 e4       	ldi	r21, 0x41	; 65
    37b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37b8:	dc 01       	movw	r26, r24
    37ba:	cb 01       	movw	r24, r22
    37bc:	bc 01       	movw	r22, r24
    37be:	cd 01       	movw	r24, r26
    37c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37c4:	dc 01       	movw	r26, r24
    37c6:	cb 01       	movw	r24, r22
    37c8:	9e af       	std	Y+62, r25	; 0x3e
    37ca:	8d af       	std	Y+61, r24	; 0x3d
    37cc:	0f c0       	rjmp	.+30     	; 0x37ec <MODE_5+0x560>
    37ce:	88 ec       	ldi	r24, 0xC8	; 200
    37d0:	90 e0       	ldi	r25, 0x00	; 0
    37d2:	9c af       	std	Y+60, r25	; 0x3c
    37d4:	8b af       	std	Y+59, r24	; 0x3b
    37d6:	8b ad       	ldd	r24, Y+59	; 0x3b
    37d8:	9c ad       	ldd	r25, Y+60	; 0x3c
    37da:	01 97       	sbiw	r24, 0x01	; 1
    37dc:	f1 f7       	brne	.-4      	; 0x37da <MODE_5+0x54e>
    37de:	9c af       	std	Y+60, r25	; 0x3c
    37e0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37e2:	8d ad       	ldd	r24, Y+61	; 0x3d
    37e4:	9e ad       	ldd	r25, Y+62	; 0x3e
    37e6:	01 97       	sbiw	r24, 0x01	; 1
    37e8:	9e af       	std	Y+62, r25	; 0x3e
    37ea:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37ec:	8d ad       	ldd	r24, Y+61	; 0x3d
    37ee:	9e ad       	ldd	r25, Y+62	; 0x3e
    37f0:	00 97       	sbiw	r24, 0x00	; 0
    37f2:	69 f7       	brne	.-38     	; 0x37ce <MODE_5+0x542>
    37f4:	16 c0       	rjmp	.+44     	; 0x3822 <MODE_5+0x596>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37f6:	fe 01       	movw	r30, r28
    37f8:	ff 96       	adiw	r30, 0x3f	; 63
    37fa:	60 81       	ld	r22, Z
    37fc:	71 81       	ldd	r23, Z+1	; 0x01
    37fe:	82 81       	ldd	r24, Z+2	; 0x02
    3800:	93 81       	ldd	r25, Z+3	; 0x03
    3802:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3806:	dc 01       	movw	r26, r24
    3808:	cb 01       	movw	r24, r22
    380a:	9e af       	std	Y+62, r25	; 0x3e
    380c:	8d af       	std	Y+61, r24	; 0x3d
    380e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3810:	9e ad       	ldd	r25, Y+62	; 0x3e
    3812:	9a af       	std	Y+58, r25	; 0x3a
    3814:	89 af       	std	Y+57, r24	; 0x39
    3816:	89 ad       	ldd	r24, Y+57	; 0x39
    3818:	9a ad       	ldd	r25, Y+58	; 0x3a
    381a:	01 97       	sbiw	r24, 0x01	; 1
    381c:	f1 f7       	brne	.-4      	; 0x381a <MODE_5+0x58e>
    381e:	9a af       	std	Y+58, r25	; 0x3a
    3820:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, ON);
    3822:	81 e0       	ldi	r24, 0x01	; 1
    3824:	61 e0       	ldi	r22, 0x01	; 1
    3826:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED7, ON);
    382a:	86 e0       	ldi	r24, 0x06	; 6
    382c:	61 e0       	ldi	r22, 0x01	; 1
    382e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3832:	80 e0       	ldi	r24, 0x00	; 0
    3834:	90 e0       	ldi	r25, 0x00	; 0
    3836:	a8 e4       	ldi	r26, 0x48	; 72
    3838:	b2 e4       	ldi	r27, 0x42	; 66
    383a:	8d ab       	std	Y+53, r24	; 0x35
    383c:	9e ab       	std	Y+54, r25	; 0x36
    383e:	af ab       	std	Y+55, r26	; 0x37
    3840:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3842:	6d a9       	ldd	r22, Y+53	; 0x35
    3844:	7e a9       	ldd	r23, Y+54	; 0x36
    3846:	8f a9       	ldd	r24, Y+55	; 0x37
    3848:	98 ad       	ldd	r25, Y+56	; 0x38
    384a:	20 e0       	ldi	r18, 0x00	; 0
    384c:	30 e0       	ldi	r19, 0x00	; 0
    384e:	4a ef       	ldi	r20, 0xFA	; 250
    3850:	54 e4       	ldi	r21, 0x44	; 68
    3852:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3856:	dc 01       	movw	r26, r24
    3858:	cb 01       	movw	r24, r22
    385a:	89 ab       	std	Y+49, r24	; 0x31
    385c:	9a ab       	std	Y+50, r25	; 0x32
    385e:	ab ab       	std	Y+51, r26	; 0x33
    3860:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3862:	69 a9       	ldd	r22, Y+49	; 0x31
    3864:	7a a9       	ldd	r23, Y+50	; 0x32
    3866:	8b a9       	ldd	r24, Y+51	; 0x33
    3868:	9c a9       	ldd	r25, Y+52	; 0x34
    386a:	20 e0       	ldi	r18, 0x00	; 0
    386c:	30 e0       	ldi	r19, 0x00	; 0
    386e:	40 e8       	ldi	r20, 0x80	; 128
    3870:	5f e3       	ldi	r21, 0x3F	; 63
    3872:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3876:	88 23       	and	r24, r24
    3878:	2c f4       	brge	.+10     	; 0x3884 <MODE_5+0x5f8>
		__ticks = 1;
    387a:	81 e0       	ldi	r24, 0x01	; 1
    387c:	90 e0       	ldi	r25, 0x00	; 0
    387e:	98 ab       	std	Y+48, r25	; 0x30
    3880:	8f a7       	std	Y+47, r24	; 0x2f
    3882:	3f c0       	rjmp	.+126    	; 0x3902 <MODE_5+0x676>
	else if (__tmp > 65535)
    3884:	69 a9       	ldd	r22, Y+49	; 0x31
    3886:	7a a9       	ldd	r23, Y+50	; 0x32
    3888:	8b a9       	ldd	r24, Y+51	; 0x33
    388a:	9c a9       	ldd	r25, Y+52	; 0x34
    388c:	20 e0       	ldi	r18, 0x00	; 0
    388e:	3f ef       	ldi	r19, 0xFF	; 255
    3890:	4f e7       	ldi	r20, 0x7F	; 127
    3892:	57 e4       	ldi	r21, 0x47	; 71
    3894:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3898:	18 16       	cp	r1, r24
    389a:	4c f5       	brge	.+82     	; 0x38ee <MODE_5+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    389c:	6d a9       	ldd	r22, Y+53	; 0x35
    389e:	7e a9       	ldd	r23, Y+54	; 0x36
    38a0:	8f a9       	ldd	r24, Y+55	; 0x37
    38a2:	98 ad       	ldd	r25, Y+56	; 0x38
    38a4:	20 e0       	ldi	r18, 0x00	; 0
    38a6:	30 e0       	ldi	r19, 0x00	; 0
    38a8:	40 e2       	ldi	r20, 0x20	; 32
    38aa:	51 e4       	ldi	r21, 0x41	; 65
    38ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38b0:	dc 01       	movw	r26, r24
    38b2:	cb 01       	movw	r24, r22
    38b4:	bc 01       	movw	r22, r24
    38b6:	cd 01       	movw	r24, r26
    38b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38bc:	dc 01       	movw	r26, r24
    38be:	cb 01       	movw	r24, r22
    38c0:	98 ab       	std	Y+48, r25	; 0x30
    38c2:	8f a7       	std	Y+47, r24	; 0x2f
    38c4:	0f c0       	rjmp	.+30     	; 0x38e4 <MODE_5+0x658>
    38c6:	88 ec       	ldi	r24, 0xC8	; 200
    38c8:	90 e0       	ldi	r25, 0x00	; 0
    38ca:	9e a7       	std	Y+46, r25	; 0x2e
    38cc:	8d a7       	std	Y+45, r24	; 0x2d
    38ce:	8d a5       	ldd	r24, Y+45	; 0x2d
    38d0:	9e a5       	ldd	r25, Y+46	; 0x2e
    38d2:	01 97       	sbiw	r24, 0x01	; 1
    38d4:	f1 f7       	brne	.-4      	; 0x38d2 <MODE_5+0x646>
    38d6:	9e a7       	std	Y+46, r25	; 0x2e
    38d8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38da:	8f a5       	ldd	r24, Y+47	; 0x2f
    38dc:	98 a9       	ldd	r25, Y+48	; 0x30
    38de:	01 97       	sbiw	r24, 0x01	; 1
    38e0:	98 ab       	std	Y+48, r25	; 0x30
    38e2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    38e6:	98 a9       	ldd	r25, Y+48	; 0x30
    38e8:	00 97       	sbiw	r24, 0x00	; 0
    38ea:	69 f7       	brne	.-38     	; 0x38c6 <MODE_5+0x63a>
    38ec:	14 c0       	rjmp	.+40     	; 0x3916 <MODE_5+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38ee:	69 a9       	ldd	r22, Y+49	; 0x31
    38f0:	7a a9       	ldd	r23, Y+50	; 0x32
    38f2:	8b a9       	ldd	r24, Y+51	; 0x33
    38f4:	9c a9       	ldd	r25, Y+52	; 0x34
    38f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38fa:	dc 01       	movw	r26, r24
    38fc:	cb 01       	movw	r24, r22
    38fe:	98 ab       	std	Y+48, r25	; 0x30
    3900:	8f a7       	std	Y+47, r24	; 0x2f
    3902:	8f a5       	ldd	r24, Y+47	; 0x2f
    3904:	98 a9       	ldd	r25, Y+48	; 0x30
    3906:	9c a7       	std	Y+44, r25	; 0x2c
    3908:	8b a7       	std	Y+43, r24	; 0x2b
    390a:	8b a5       	ldd	r24, Y+43	; 0x2b
    390c:	9c a5       	ldd	r25, Y+44	; 0x2c
    390e:	01 97       	sbiw	r24, 0x01	; 1
    3910:	f1 f7       	brne	.-4      	; 0x390e <MODE_5+0x682>
    3912:	9c a7       	std	Y+44, r25	; 0x2c
    3914:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED2, OFF);
    3916:	81 e0       	ldi	r24, 0x01	; 1
    3918:	60 e0       	ldi	r22, 0x00	; 0
    391a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED7, OFF);
    391e:	86 e0       	ldi	r24, 0x06	; 6
    3920:	60 e0       	ldi	r22, 0x00	; 0
    3922:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3926:	80 e0       	ldi	r24, 0x00	; 0
    3928:	90 e0       	ldi	r25, 0x00	; 0
    392a:	a8 e4       	ldi	r26, 0x48	; 72
    392c:	b2 e4       	ldi	r27, 0x42	; 66
    392e:	8f a3       	std	Y+39, r24	; 0x27
    3930:	98 a7       	std	Y+40, r25	; 0x28
    3932:	a9 a7       	std	Y+41, r26	; 0x29
    3934:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3936:	6f a1       	ldd	r22, Y+39	; 0x27
    3938:	78 a5       	ldd	r23, Y+40	; 0x28
    393a:	89 a5       	ldd	r24, Y+41	; 0x29
    393c:	9a a5       	ldd	r25, Y+42	; 0x2a
    393e:	20 e0       	ldi	r18, 0x00	; 0
    3940:	30 e0       	ldi	r19, 0x00	; 0
    3942:	4a ef       	ldi	r20, 0xFA	; 250
    3944:	54 e4       	ldi	r21, 0x44	; 68
    3946:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    394a:	dc 01       	movw	r26, r24
    394c:	cb 01       	movw	r24, r22
    394e:	8b a3       	std	Y+35, r24	; 0x23
    3950:	9c a3       	std	Y+36, r25	; 0x24
    3952:	ad a3       	std	Y+37, r26	; 0x25
    3954:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3956:	6b a1       	ldd	r22, Y+35	; 0x23
    3958:	7c a1       	ldd	r23, Y+36	; 0x24
    395a:	8d a1       	ldd	r24, Y+37	; 0x25
    395c:	9e a1       	ldd	r25, Y+38	; 0x26
    395e:	20 e0       	ldi	r18, 0x00	; 0
    3960:	30 e0       	ldi	r19, 0x00	; 0
    3962:	40 e8       	ldi	r20, 0x80	; 128
    3964:	5f e3       	ldi	r21, 0x3F	; 63
    3966:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    396a:	88 23       	and	r24, r24
    396c:	2c f4       	brge	.+10     	; 0x3978 <MODE_5+0x6ec>
		__ticks = 1;
    396e:	81 e0       	ldi	r24, 0x01	; 1
    3970:	90 e0       	ldi	r25, 0x00	; 0
    3972:	9a a3       	std	Y+34, r25	; 0x22
    3974:	89 a3       	std	Y+33, r24	; 0x21
    3976:	3f c0       	rjmp	.+126    	; 0x39f6 <MODE_5+0x76a>
	else if (__tmp > 65535)
    3978:	6b a1       	ldd	r22, Y+35	; 0x23
    397a:	7c a1       	ldd	r23, Y+36	; 0x24
    397c:	8d a1       	ldd	r24, Y+37	; 0x25
    397e:	9e a1       	ldd	r25, Y+38	; 0x26
    3980:	20 e0       	ldi	r18, 0x00	; 0
    3982:	3f ef       	ldi	r19, 0xFF	; 255
    3984:	4f e7       	ldi	r20, 0x7F	; 127
    3986:	57 e4       	ldi	r21, 0x47	; 71
    3988:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    398c:	18 16       	cp	r1, r24
    398e:	4c f5       	brge	.+82     	; 0x39e2 <MODE_5+0x756>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3990:	6f a1       	ldd	r22, Y+39	; 0x27
    3992:	78 a5       	ldd	r23, Y+40	; 0x28
    3994:	89 a5       	ldd	r24, Y+41	; 0x29
    3996:	9a a5       	ldd	r25, Y+42	; 0x2a
    3998:	20 e0       	ldi	r18, 0x00	; 0
    399a:	30 e0       	ldi	r19, 0x00	; 0
    399c:	40 e2       	ldi	r20, 0x20	; 32
    399e:	51 e4       	ldi	r21, 0x41	; 65
    39a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39a4:	dc 01       	movw	r26, r24
    39a6:	cb 01       	movw	r24, r22
    39a8:	bc 01       	movw	r22, r24
    39aa:	cd 01       	movw	r24, r26
    39ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39b0:	dc 01       	movw	r26, r24
    39b2:	cb 01       	movw	r24, r22
    39b4:	9a a3       	std	Y+34, r25	; 0x22
    39b6:	89 a3       	std	Y+33, r24	; 0x21
    39b8:	0f c0       	rjmp	.+30     	; 0x39d8 <MODE_5+0x74c>
    39ba:	88 ec       	ldi	r24, 0xC8	; 200
    39bc:	90 e0       	ldi	r25, 0x00	; 0
    39be:	98 a3       	std	Y+32, r25	; 0x20
    39c0:	8f 8f       	std	Y+31, r24	; 0x1f
    39c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    39c4:	98 a1       	ldd	r25, Y+32	; 0x20
    39c6:	01 97       	sbiw	r24, 0x01	; 1
    39c8:	f1 f7       	brne	.-4      	; 0x39c6 <MODE_5+0x73a>
    39ca:	98 a3       	std	Y+32, r25	; 0x20
    39cc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39ce:	89 a1       	ldd	r24, Y+33	; 0x21
    39d0:	9a a1       	ldd	r25, Y+34	; 0x22
    39d2:	01 97       	sbiw	r24, 0x01	; 1
    39d4:	9a a3       	std	Y+34, r25	; 0x22
    39d6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39d8:	89 a1       	ldd	r24, Y+33	; 0x21
    39da:	9a a1       	ldd	r25, Y+34	; 0x22
    39dc:	00 97       	sbiw	r24, 0x00	; 0
    39de:	69 f7       	brne	.-38     	; 0x39ba <MODE_5+0x72e>
    39e0:	14 c0       	rjmp	.+40     	; 0x3a0a <MODE_5+0x77e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39e2:	6b a1       	ldd	r22, Y+35	; 0x23
    39e4:	7c a1       	ldd	r23, Y+36	; 0x24
    39e6:	8d a1       	ldd	r24, Y+37	; 0x25
    39e8:	9e a1       	ldd	r25, Y+38	; 0x26
    39ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39ee:	dc 01       	movw	r26, r24
    39f0:	cb 01       	movw	r24, r22
    39f2:	9a a3       	std	Y+34, r25	; 0x22
    39f4:	89 a3       	std	Y+33, r24	; 0x21
    39f6:	89 a1       	ldd	r24, Y+33	; 0x21
    39f8:	9a a1       	ldd	r25, Y+34	; 0x22
    39fa:	9e 8f       	std	Y+30, r25	; 0x1e
    39fc:	8d 8f       	std	Y+29, r24	; 0x1d
    39fe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3a00:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3a02:	01 97       	sbiw	r24, 0x01	; 1
    3a04:	f1 f7       	brne	.-4      	; 0x3a02 <MODE_5+0x776>
    3a06:	9e 8f       	std	Y+30, r25	; 0x1e
    3a08:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED1, ON);
    3a0a:	80 e0       	ldi	r24, 0x00	; 0
    3a0c:	61 e0       	ldi	r22, 0x01	; 1
    3a0e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED8, ON);
    3a12:	87 e0       	ldi	r24, 0x07	; 7
    3a14:	61 e0       	ldi	r22, 0x01	; 1
    3a16:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3a1a:	80 e0       	ldi	r24, 0x00	; 0
    3a1c:	90 e0       	ldi	r25, 0x00	; 0
    3a1e:	a8 e4       	ldi	r26, 0x48	; 72
    3a20:	b2 e4       	ldi	r27, 0x42	; 66
    3a22:	89 8f       	std	Y+25, r24	; 0x19
    3a24:	9a 8f       	std	Y+26, r25	; 0x1a
    3a26:	ab 8f       	std	Y+27, r26	; 0x1b
    3a28:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a2a:	69 8d       	ldd	r22, Y+25	; 0x19
    3a2c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a2e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a30:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a32:	20 e0       	ldi	r18, 0x00	; 0
    3a34:	30 e0       	ldi	r19, 0x00	; 0
    3a36:	4a ef       	ldi	r20, 0xFA	; 250
    3a38:	54 e4       	ldi	r21, 0x44	; 68
    3a3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a3e:	dc 01       	movw	r26, r24
    3a40:	cb 01       	movw	r24, r22
    3a42:	8d 8b       	std	Y+21, r24	; 0x15
    3a44:	9e 8b       	std	Y+22, r25	; 0x16
    3a46:	af 8b       	std	Y+23, r26	; 0x17
    3a48:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3a4a:	6d 89       	ldd	r22, Y+21	; 0x15
    3a4c:	7e 89       	ldd	r23, Y+22	; 0x16
    3a4e:	8f 89       	ldd	r24, Y+23	; 0x17
    3a50:	98 8d       	ldd	r25, Y+24	; 0x18
    3a52:	20 e0       	ldi	r18, 0x00	; 0
    3a54:	30 e0       	ldi	r19, 0x00	; 0
    3a56:	40 e8       	ldi	r20, 0x80	; 128
    3a58:	5f e3       	ldi	r21, 0x3F	; 63
    3a5a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a5e:	88 23       	and	r24, r24
    3a60:	2c f4       	brge	.+10     	; 0x3a6c <MODE_5+0x7e0>
		__ticks = 1;
    3a62:	81 e0       	ldi	r24, 0x01	; 1
    3a64:	90 e0       	ldi	r25, 0x00	; 0
    3a66:	9c 8b       	std	Y+20, r25	; 0x14
    3a68:	8b 8b       	std	Y+19, r24	; 0x13
    3a6a:	3f c0       	rjmp	.+126    	; 0x3aea <MODE_5+0x85e>
	else if (__tmp > 65535)
    3a6c:	6d 89       	ldd	r22, Y+21	; 0x15
    3a6e:	7e 89       	ldd	r23, Y+22	; 0x16
    3a70:	8f 89       	ldd	r24, Y+23	; 0x17
    3a72:	98 8d       	ldd	r25, Y+24	; 0x18
    3a74:	20 e0       	ldi	r18, 0x00	; 0
    3a76:	3f ef       	ldi	r19, 0xFF	; 255
    3a78:	4f e7       	ldi	r20, 0x7F	; 127
    3a7a:	57 e4       	ldi	r21, 0x47	; 71
    3a7c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a80:	18 16       	cp	r1, r24
    3a82:	4c f5       	brge	.+82     	; 0x3ad6 <MODE_5+0x84a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a84:	69 8d       	ldd	r22, Y+25	; 0x19
    3a86:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a88:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a8a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a8c:	20 e0       	ldi	r18, 0x00	; 0
    3a8e:	30 e0       	ldi	r19, 0x00	; 0
    3a90:	40 e2       	ldi	r20, 0x20	; 32
    3a92:	51 e4       	ldi	r21, 0x41	; 65
    3a94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a98:	dc 01       	movw	r26, r24
    3a9a:	cb 01       	movw	r24, r22
    3a9c:	bc 01       	movw	r22, r24
    3a9e:	cd 01       	movw	r24, r26
    3aa0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3aa4:	dc 01       	movw	r26, r24
    3aa6:	cb 01       	movw	r24, r22
    3aa8:	9c 8b       	std	Y+20, r25	; 0x14
    3aaa:	8b 8b       	std	Y+19, r24	; 0x13
    3aac:	0f c0       	rjmp	.+30     	; 0x3acc <MODE_5+0x840>
    3aae:	88 ec       	ldi	r24, 0xC8	; 200
    3ab0:	90 e0       	ldi	r25, 0x00	; 0
    3ab2:	9a 8b       	std	Y+18, r25	; 0x12
    3ab4:	89 8b       	std	Y+17, r24	; 0x11
    3ab6:	89 89       	ldd	r24, Y+17	; 0x11
    3ab8:	9a 89       	ldd	r25, Y+18	; 0x12
    3aba:	01 97       	sbiw	r24, 0x01	; 1
    3abc:	f1 f7       	brne	.-4      	; 0x3aba <MODE_5+0x82e>
    3abe:	9a 8b       	std	Y+18, r25	; 0x12
    3ac0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ac2:	8b 89       	ldd	r24, Y+19	; 0x13
    3ac4:	9c 89       	ldd	r25, Y+20	; 0x14
    3ac6:	01 97       	sbiw	r24, 0x01	; 1
    3ac8:	9c 8b       	std	Y+20, r25	; 0x14
    3aca:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3acc:	8b 89       	ldd	r24, Y+19	; 0x13
    3ace:	9c 89       	ldd	r25, Y+20	; 0x14
    3ad0:	00 97       	sbiw	r24, 0x00	; 0
    3ad2:	69 f7       	brne	.-38     	; 0x3aae <MODE_5+0x822>
    3ad4:	14 c0       	rjmp	.+40     	; 0x3afe <MODE_5+0x872>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ad6:	6d 89       	ldd	r22, Y+21	; 0x15
    3ad8:	7e 89       	ldd	r23, Y+22	; 0x16
    3ada:	8f 89       	ldd	r24, Y+23	; 0x17
    3adc:	98 8d       	ldd	r25, Y+24	; 0x18
    3ade:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ae2:	dc 01       	movw	r26, r24
    3ae4:	cb 01       	movw	r24, r22
    3ae6:	9c 8b       	std	Y+20, r25	; 0x14
    3ae8:	8b 8b       	std	Y+19, r24	; 0x13
    3aea:	8b 89       	ldd	r24, Y+19	; 0x13
    3aec:	9c 89       	ldd	r25, Y+20	; 0x14
    3aee:	98 8b       	std	Y+16, r25	; 0x10
    3af0:	8f 87       	std	Y+15, r24	; 0x0f
    3af2:	8f 85       	ldd	r24, Y+15	; 0x0f
    3af4:	98 89       	ldd	r25, Y+16	; 0x10
    3af6:	01 97       	sbiw	r24, 0x01	; 1
    3af8:	f1 f7       	brne	.-4      	; 0x3af6 <MODE_5+0x86a>
    3afa:	98 8b       	std	Y+16, r25	; 0x10
    3afc:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(DELAY_IN_BETWEEN);

	LED_CTRL(LED1, OFF);
    3afe:	80 e0       	ldi	r24, 0x00	; 0
    3b00:	60 e0       	ldi	r22, 0x00	; 0
    3b02:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
	LED_CTRL(LED8, OFF);
    3b06:	87 e0       	ldi	r24, 0x07	; 7
    3b08:	60 e0       	ldi	r22, 0x00	; 0
    3b0a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3b0e:	80 e0       	ldi	r24, 0x00	; 0
    3b10:	90 e0       	ldi	r25, 0x00	; 0
    3b12:	a6 e9       	ldi	r26, 0x96	; 150
    3b14:	b3 e4       	ldi	r27, 0x43	; 67
    3b16:	8b 87       	std	Y+11, r24	; 0x0b
    3b18:	9c 87       	std	Y+12, r25	; 0x0c
    3b1a:	ad 87       	std	Y+13, r26	; 0x0d
    3b1c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b1e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b20:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b22:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b24:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b26:	20 e0       	ldi	r18, 0x00	; 0
    3b28:	30 e0       	ldi	r19, 0x00	; 0
    3b2a:	4a ef       	ldi	r20, 0xFA	; 250
    3b2c:	54 e4       	ldi	r21, 0x44	; 68
    3b2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b32:	dc 01       	movw	r26, r24
    3b34:	cb 01       	movw	r24, r22
    3b36:	8f 83       	std	Y+7, r24	; 0x07
    3b38:	98 87       	std	Y+8, r25	; 0x08
    3b3a:	a9 87       	std	Y+9, r26	; 0x09
    3b3c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b3e:	6f 81       	ldd	r22, Y+7	; 0x07
    3b40:	78 85       	ldd	r23, Y+8	; 0x08
    3b42:	89 85       	ldd	r24, Y+9	; 0x09
    3b44:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b46:	20 e0       	ldi	r18, 0x00	; 0
    3b48:	30 e0       	ldi	r19, 0x00	; 0
    3b4a:	40 e8       	ldi	r20, 0x80	; 128
    3b4c:	5f e3       	ldi	r21, 0x3F	; 63
    3b4e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b52:	88 23       	and	r24, r24
    3b54:	2c f4       	brge	.+10     	; 0x3b60 <MODE_5+0x8d4>
		__ticks = 1;
    3b56:	81 e0       	ldi	r24, 0x01	; 1
    3b58:	90 e0       	ldi	r25, 0x00	; 0
    3b5a:	9e 83       	std	Y+6, r25	; 0x06
    3b5c:	8d 83       	std	Y+5, r24	; 0x05
    3b5e:	3f c0       	rjmp	.+126    	; 0x3bde <MODE_5+0x952>
	else if (__tmp > 65535)
    3b60:	6f 81       	ldd	r22, Y+7	; 0x07
    3b62:	78 85       	ldd	r23, Y+8	; 0x08
    3b64:	89 85       	ldd	r24, Y+9	; 0x09
    3b66:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b68:	20 e0       	ldi	r18, 0x00	; 0
    3b6a:	3f ef       	ldi	r19, 0xFF	; 255
    3b6c:	4f e7       	ldi	r20, 0x7F	; 127
    3b6e:	57 e4       	ldi	r21, 0x47	; 71
    3b70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b74:	18 16       	cp	r1, r24
    3b76:	4c f5       	brge	.+82     	; 0x3bca <MODE_5+0x93e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b78:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b7a:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b7e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b80:	20 e0       	ldi	r18, 0x00	; 0
    3b82:	30 e0       	ldi	r19, 0x00	; 0
    3b84:	40 e2       	ldi	r20, 0x20	; 32
    3b86:	51 e4       	ldi	r21, 0x41	; 65
    3b88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b8c:	dc 01       	movw	r26, r24
    3b8e:	cb 01       	movw	r24, r22
    3b90:	bc 01       	movw	r22, r24
    3b92:	cd 01       	movw	r24, r26
    3b94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b98:	dc 01       	movw	r26, r24
    3b9a:	cb 01       	movw	r24, r22
    3b9c:	9e 83       	std	Y+6, r25	; 0x06
    3b9e:	8d 83       	std	Y+5, r24	; 0x05
    3ba0:	0f c0       	rjmp	.+30     	; 0x3bc0 <MODE_5+0x934>
    3ba2:	88 ec       	ldi	r24, 0xC8	; 200
    3ba4:	90 e0       	ldi	r25, 0x00	; 0
    3ba6:	9c 83       	std	Y+4, r25	; 0x04
    3ba8:	8b 83       	std	Y+3, r24	; 0x03
    3baa:	8b 81       	ldd	r24, Y+3	; 0x03
    3bac:	9c 81       	ldd	r25, Y+4	; 0x04
    3bae:	01 97       	sbiw	r24, 0x01	; 1
    3bb0:	f1 f7       	brne	.-4      	; 0x3bae <MODE_5+0x922>
    3bb2:	9c 83       	std	Y+4, r25	; 0x04
    3bb4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bb6:	8d 81       	ldd	r24, Y+5	; 0x05
    3bb8:	9e 81       	ldd	r25, Y+6	; 0x06
    3bba:	01 97       	sbiw	r24, 0x01	; 1
    3bbc:	9e 83       	std	Y+6, r25	; 0x06
    3bbe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bc0:	8d 81       	ldd	r24, Y+5	; 0x05
    3bc2:	9e 81       	ldd	r25, Y+6	; 0x06
    3bc4:	00 97       	sbiw	r24, 0x00	; 0
    3bc6:	69 f7       	brne	.-38     	; 0x3ba2 <MODE_5+0x916>
    3bc8:	14 c0       	rjmp	.+40     	; 0x3bf2 <MODE_5+0x966>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bca:	6f 81       	ldd	r22, Y+7	; 0x07
    3bcc:	78 85       	ldd	r23, Y+8	; 0x08
    3bce:	89 85       	ldd	r24, Y+9	; 0x09
    3bd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bd6:	dc 01       	movw	r26, r24
    3bd8:	cb 01       	movw	r24, r22
    3bda:	9e 83       	std	Y+6, r25	; 0x06
    3bdc:	8d 83       	std	Y+5, r24	; 0x05
    3bde:	8d 81       	ldd	r24, Y+5	; 0x05
    3be0:	9e 81       	ldd	r25, Y+6	; 0x06
    3be2:	9a 83       	std	Y+2, r25	; 0x02
    3be4:	89 83       	std	Y+1, r24	; 0x01
    3be6:	89 81       	ldd	r24, Y+1	; 0x01
    3be8:	9a 81       	ldd	r25, Y+2	; 0x02
    3bea:	01 97       	sbiw	r24, 0x01	; 1
    3bec:	f1 f7       	brne	.-4      	; 0x3bea <MODE_5+0x95e>
    3bee:	9a 83       	std	Y+2, r25	; 0x02
    3bf0:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_5 */
    3bf2:	c0 59       	subi	r28, 0x90	; 144
    3bf4:	df 4f       	sbci	r29, 0xFF	; 255
    3bf6:	0f b6       	in	r0, 0x3f	; 63
    3bf8:	f8 94       	cli
    3bfa:	de bf       	out	0x3e, r29	; 62
    3bfc:	0f be       	out	0x3f, r0	; 63
    3bfe:	cd bf       	out	0x3d, r28	; 61
    3c00:	cf 91       	pop	r28
    3c02:	df 91       	pop	r29
    3c04:	1f 91       	pop	r17
    3c06:	0f 91       	pop	r16
    3c08:	08 95       	ret

00003c0a <MODE_6>:
/**
 * @brief function to implement mode 6
 */
static void MODE_6(void)
{
    3c0a:	df 93       	push	r29
    3c0c:	cf 93       	push	r28
    3c0e:	cd b7       	in	r28, 0x3d	; 61
    3c10:	de b7       	in	r29, 0x3e	; 62
    3c12:	6c 97       	sbiw	r28, 0x1c	; 28
    3c14:	0f b6       	in	r0, 0x3f	; 63
    3c16:	f8 94       	cli
    3c18:	de bf       	out	0x3e, r29	; 62
    3c1a:	0f be       	out	0x3f, r0	; 63
    3c1c:	cd bf       	out	0x3d, r28	; 61
	MODE_2();
    3c1e:	0e 94 a3 09 	call	0x1346	; 0x1346 <MODE_2>
    3c22:	80 e0       	ldi	r24, 0x00	; 0
    3c24:	90 e0       	ldi	r25, 0x00	; 0
    3c26:	a8 e4       	ldi	r26, 0x48	; 72
    3c28:	b2 e4       	ldi	r27, 0x42	; 66
    3c2a:	89 8f       	std	Y+25, r24	; 0x19
    3c2c:	9a 8f       	std	Y+26, r25	; 0x1a
    3c2e:	ab 8f       	std	Y+27, r26	; 0x1b
    3c30:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c32:	69 8d       	ldd	r22, Y+25	; 0x19
    3c34:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c36:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c38:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c3a:	20 e0       	ldi	r18, 0x00	; 0
    3c3c:	30 e0       	ldi	r19, 0x00	; 0
    3c3e:	4a ef       	ldi	r20, 0xFA	; 250
    3c40:	54 e4       	ldi	r21, 0x44	; 68
    3c42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c46:	dc 01       	movw	r26, r24
    3c48:	cb 01       	movw	r24, r22
    3c4a:	8d 8b       	std	Y+21, r24	; 0x15
    3c4c:	9e 8b       	std	Y+22, r25	; 0x16
    3c4e:	af 8b       	std	Y+23, r26	; 0x17
    3c50:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3c52:	6d 89       	ldd	r22, Y+21	; 0x15
    3c54:	7e 89       	ldd	r23, Y+22	; 0x16
    3c56:	8f 89       	ldd	r24, Y+23	; 0x17
    3c58:	98 8d       	ldd	r25, Y+24	; 0x18
    3c5a:	20 e0       	ldi	r18, 0x00	; 0
    3c5c:	30 e0       	ldi	r19, 0x00	; 0
    3c5e:	40 e8       	ldi	r20, 0x80	; 128
    3c60:	5f e3       	ldi	r21, 0x3F	; 63
    3c62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c66:	88 23       	and	r24, r24
    3c68:	2c f4       	brge	.+10     	; 0x3c74 <MODE_6+0x6a>
		__ticks = 1;
    3c6a:	81 e0       	ldi	r24, 0x01	; 1
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	9c 8b       	std	Y+20, r25	; 0x14
    3c70:	8b 8b       	std	Y+19, r24	; 0x13
    3c72:	3f c0       	rjmp	.+126    	; 0x3cf2 <MODE_6+0xe8>
	else if (__tmp > 65535)
    3c74:	6d 89       	ldd	r22, Y+21	; 0x15
    3c76:	7e 89       	ldd	r23, Y+22	; 0x16
    3c78:	8f 89       	ldd	r24, Y+23	; 0x17
    3c7a:	98 8d       	ldd	r25, Y+24	; 0x18
    3c7c:	20 e0       	ldi	r18, 0x00	; 0
    3c7e:	3f ef       	ldi	r19, 0xFF	; 255
    3c80:	4f e7       	ldi	r20, 0x7F	; 127
    3c82:	57 e4       	ldi	r21, 0x47	; 71
    3c84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c88:	18 16       	cp	r1, r24
    3c8a:	4c f5       	brge	.+82     	; 0x3cde <MODE_6+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c8c:	69 8d       	ldd	r22, Y+25	; 0x19
    3c8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c94:	20 e0       	ldi	r18, 0x00	; 0
    3c96:	30 e0       	ldi	r19, 0x00	; 0
    3c98:	40 e2       	ldi	r20, 0x20	; 32
    3c9a:	51 e4       	ldi	r21, 0x41	; 65
    3c9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ca0:	dc 01       	movw	r26, r24
    3ca2:	cb 01       	movw	r24, r22
    3ca4:	bc 01       	movw	r22, r24
    3ca6:	cd 01       	movw	r24, r26
    3ca8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cac:	dc 01       	movw	r26, r24
    3cae:	cb 01       	movw	r24, r22
    3cb0:	9c 8b       	std	Y+20, r25	; 0x14
    3cb2:	8b 8b       	std	Y+19, r24	; 0x13
    3cb4:	0f c0       	rjmp	.+30     	; 0x3cd4 <MODE_6+0xca>
    3cb6:	88 ec       	ldi	r24, 0xC8	; 200
    3cb8:	90 e0       	ldi	r25, 0x00	; 0
    3cba:	9a 8b       	std	Y+18, r25	; 0x12
    3cbc:	89 8b       	std	Y+17, r24	; 0x11
    3cbe:	89 89       	ldd	r24, Y+17	; 0x11
    3cc0:	9a 89       	ldd	r25, Y+18	; 0x12
    3cc2:	01 97       	sbiw	r24, 0x01	; 1
    3cc4:	f1 f7       	brne	.-4      	; 0x3cc2 <MODE_6+0xb8>
    3cc6:	9a 8b       	std	Y+18, r25	; 0x12
    3cc8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cca:	8b 89       	ldd	r24, Y+19	; 0x13
    3ccc:	9c 89       	ldd	r25, Y+20	; 0x14
    3cce:	01 97       	sbiw	r24, 0x01	; 1
    3cd0:	9c 8b       	std	Y+20, r25	; 0x14
    3cd2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cd4:	8b 89       	ldd	r24, Y+19	; 0x13
    3cd6:	9c 89       	ldd	r25, Y+20	; 0x14
    3cd8:	00 97       	sbiw	r24, 0x00	; 0
    3cda:	69 f7       	brne	.-38     	; 0x3cb6 <MODE_6+0xac>
    3cdc:	14 c0       	rjmp	.+40     	; 0x3d06 <MODE_6+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cde:	6d 89       	ldd	r22, Y+21	; 0x15
    3ce0:	7e 89       	ldd	r23, Y+22	; 0x16
    3ce2:	8f 89       	ldd	r24, Y+23	; 0x17
    3ce4:	98 8d       	ldd	r25, Y+24	; 0x18
    3ce6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cea:	dc 01       	movw	r26, r24
    3cec:	cb 01       	movw	r24, r22
    3cee:	9c 8b       	std	Y+20, r25	; 0x14
    3cf0:	8b 8b       	std	Y+19, r24	; 0x13
    3cf2:	8b 89       	ldd	r24, Y+19	; 0x13
    3cf4:	9c 89       	ldd	r25, Y+20	; 0x14
    3cf6:	98 8b       	std	Y+16, r25	; 0x10
    3cf8:	8f 87       	std	Y+15, r24	; 0x0f
    3cfa:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cfc:	98 89       	ldd	r25, Y+16	; 0x10
    3cfe:	01 97       	sbiw	r24, 0x01	; 1
    3d00:	f1 f7       	brne	.-4      	; 0x3cfe <MODE_6+0xf4>
    3d02:	98 8b       	std	Y+16, r25	; 0x10
    3d04:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);
	MODE_3();
    3d06:	0e 94 15 0f 	call	0x1e2a	; 0x1e2a <MODE_3>
    3d0a:	80 e0       	ldi	r24, 0x00	; 0
    3d0c:	90 e0       	ldi	r25, 0x00	; 0
    3d0e:	aa e7       	ldi	r26, 0x7A	; 122
    3d10:	b3 e4       	ldi	r27, 0x43	; 67
    3d12:	8b 87       	std	Y+11, r24	; 0x0b
    3d14:	9c 87       	std	Y+12, r25	; 0x0c
    3d16:	ad 87       	std	Y+13, r26	; 0x0d
    3d18:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d1a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d1c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d20:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d22:	20 e0       	ldi	r18, 0x00	; 0
    3d24:	30 e0       	ldi	r19, 0x00	; 0
    3d26:	4a ef       	ldi	r20, 0xFA	; 250
    3d28:	54 e4       	ldi	r21, 0x44	; 68
    3d2a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d2e:	dc 01       	movw	r26, r24
    3d30:	cb 01       	movw	r24, r22
    3d32:	8f 83       	std	Y+7, r24	; 0x07
    3d34:	98 87       	std	Y+8, r25	; 0x08
    3d36:	a9 87       	std	Y+9, r26	; 0x09
    3d38:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3d3a:	6f 81       	ldd	r22, Y+7	; 0x07
    3d3c:	78 85       	ldd	r23, Y+8	; 0x08
    3d3e:	89 85       	ldd	r24, Y+9	; 0x09
    3d40:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d42:	20 e0       	ldi	r18, 0x00	; 0
    3d44:	30 e0       	ldi	r19, 0x00	; 0
    3d46:	40 e8       	ldi	r20, 0x80	; 128
    3d48:	5f e3       	ldi	r21, 0x3F	; 63
    3d4a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d4e:	88 23       	and	r24, r24
    3d50:	2c f4       	brge	.+10     	; 0x3d5c <MODE_6+0x152>
		__ticks = 1;
    3d52:	81 e0       	ldi	r24, 0x01	; 1
    3d54:	90 e0       	ldi	r25, 0x00	; 0
    3d56:	9e 83       	std	Y+6, r25	; 0x06
    3d58:	8d 83       	std	Y+5, r24	; 0x05
    3d5a:	3f c0       	rjmp	.+126    	; 0x3dda <MODE_6+0x1d0>
	else if (__tmp > 65535)
    3d5c:	6f 81       	ldd	r22, Y+7	; 0x07
    3d5e:	78 85       	ldd	r23, Y+8	; 0x08
    3d60:	89 85       	ldd	r24, Y+9	; 0x09
    3d62:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d64:	20 e0       	ldi	r18, 0x00	; 0
    3d66:	3f ef       	ldi	r19, 0xFF	; 255
    3d68:	4f e7       	ldi	r20, 0x7F	; 127
    3d6a:	57 e4       	ldi	r21, 0x47	; 71
    3d6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3d70:	18 16       	cp	r1, r24
    3d72:	4c f5       	brge	.+82     	; 0x3dc6 <MODE_6+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d74:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d76:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d78:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d7a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d7c:	20 e0       	ldi	r18, 0x00	; 0
    3d7e:	30 e0       	ldi	r19, 0x00	; 0
    3d80:	40 e2       	ldi	r20, 0x20	; 32
    3d82:	51 e4       	ldi	r21, 0x41	; 65
    3d84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d88:	dc 01       	movw	r26, r24
    3d8a:	cb 01       	movw	r24, r22
    3d8c:	bc 01       	movw	r22, r24
    3d8e:	cd 01       	movw	r24, r26
    3d90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d94:	dc 01       	movw	r26, r24
    3d96:	cb 01       	movw	r24, r22
    3d98:	9e 83       	std	Y+6, r25	; 0x06
    3d9a:	8d 83       	std	Y+5, r24	; 0x05
    3d9c:	0f c0       	rjmp	.+30     	; 0x3dbc <MODE_6+0x1b2>
    3d9e:	88 ec       	ldi	r24, 0xC8	; 200
    3da0:	90 e0       	ldi	r25, 0x00	; 0
    3da2:	9c 83       	std	Y+4, r25	; 0x04
    3da4:	8b 83       	std	Y+3, r24	; 0x03
    3da6:	8b 81       	ldd	r24, Y+3	; 0x03
    3da8:	9c 81       	ldd	r25, Y+4	; 0x04
    3daa:	01 97       	sbiw	r24, 0x01	; 1
    3dac:	f1 f7       	brne	.-4      	; 0x3daa <MODE_6+0x1a0>
    3dae:	9c 83       	std	Y+4, r25	; 0x04
    3db0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3db2:	8d 81       	ldd	r24, Y+5	; 0x05
    3db4:	9e 81       	ldd	r25, Y+6	; 0x06
    3db6:	01 97       	sbiw	r24, 0x01	; 1
    3db8:	9e 83       	std	Y+6, r25	; 0x06
    3dba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3dbc:	8d 81       	ldd	r24, Y+5	; 0x05
    3dbe:	9e 81       	ldd	r25, Y+6	; 0x06
    3dc0:	00 97       	sbiw	r24, 0x00	; 0
    3dc2:	69 f7       	brne	.-38     	; 0x3d9e <MODE_6+0x194>
    3dc4:	14 c0       	rjmp	.+40     	; 0x3dee <MODE_6+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3dc6:	6f 81       	ldd	r22, Y+7	; 0x07
    3dc8:	78 85       	ldd	r23, Y+8	; 0x08
    3dca:	89 85       	ldd	r24, Y+9	; 0x09
    3dcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3dce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3dd2:	dc 01       	movw	r26, r24
    3dd4:	cb 01       	movw	r24, r22
    3dd6:	9e 83       	std	Y+6, r25	; 0x06
    3dd8:	8d 83       	std	Y+5, r24	; 0x05
    3dda:	8d 81       	ldd	r24, Y+5	; 0x05
    3ddc:	9e 81       	ldd	r25, Y+6	; 0x06
    3dde:	9a 83       	std	Y+2, r25	; 0x02
    3de0:	89 83       	std	Y+1, r24	; 0x01
    3de2:	89 81       	ldd	r24, Y+1	; 0x01
    3de4:	9a 81       	ldd	r25, Y+2	; 0x02
    3de6:	01 97       	sbiw	r24, 0x01	; 1
    3de8:	f1 f7       	brne	.-4      	; 0x3de6 <MODE_6+0x1dc>
    3dea:	9a 83       	std	Y+2, r25	; 0x02
    3dec:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(250);

}/** @end MODE_6 */
    3dee:	6c 96       	adiw	r28, 0x1c	; 28
    3df0:	0f b6       	in	r0, 0x3f	; 63
    3df2:	f8 94       	cli
    3df4:	de bf       	out	0x3e, r29	; 62
    3df6:	0f be       	out	0x3f, r0	; 63
    3df8:	cd bf       	out	0x3d, r28	; 61
    3dfa:	cf 91       	pop	r28
    3dfc:	df 91       	pop	r29
    3dfe:	08 95       	ret

00003e00 <MODE_7>:
/**
 * @brief function to implement mode 7
 */
static void MODE_7(void)
{
    3e00:	0f 93       	push	r16
    3e02:	1f 93       	push	r17
    3e04:	df 93       	push	r29
    3e06:	cf 93       	push	r28
    3e08:	cd b7       	in	r28, 0x3d	; 61
    3e0a:	de b7       	in	r29, 0x3e	; 62
    3e0c:	cf 57       	subi	r28, 0x7F	; 127
    3e0e:	d0 40       	sbci	r29, 0x00	; 0
    3e10:	0f b6       	in	r0, 0x3f	; 63
    3e12:	f8 94       	cli
    3e14:	de bf       	out	0x3e, r29	; 62
    3e16:	0f be       	out	0x3f, r0	; 63
    3e18:	cd bf       	out	0x3d, r28	; 61
	LED_CTRL(LED1, ON);
    3e1a:	80 e0       	ldi	r24, 0x00	; 0
    3e1c:	61 e0       	ldi	r22, 0x01	; 1
    3e1e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3e22:	fe 01       	movw	r30, r28
    3e24:	e5 58       	subi	r30, 0x85	; 133
    3e26:	ff 4f       	sbci	r31, 0xFF	; 255
    3e28:	80 e0       	ldi	r24, 0x00	; 0
    3e2a:	90 e0       	ldi	r25, 0x00	; 0
    3e2c:	a8 e4       	ldi	r26, 0x48	; 72
    3e2e:	b2 e4       	ldi	r27, 0x42	; 66
    3e30:	80 83       	st	Z, r24
    3e32:	91 83       	std	Z+1, r25	; 0x01
    3e34:	a2 83       	std	Z+2, r26	; 0x02
    3e36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e38:	8e 01       	movw	r16, r28
    3e3a:	09 58       	subi	r16, 0x89	; 137
    3e3c:	1f 4f       	sbci	r17, 0xFF	; 255
    3e3e:	fe 01       	movw	r30, r28
    3e40:	e5 58       	subi	r30, 0x85	; 133
    3e42:	ff 4f       	sbci	r31, 0xFF	; 255
    3e44:	60 81       	ld	r22, Z
    3e46:	71 81       	ldd	r23, Z+1	; 0x01
    3e48:	82 81       	ldd	r24, Z+2	; 0x02
    3e4a:	93 81       	ldd	r25, Z+3	; 0x03
    3e4c:	20 e0       	ldi	r18, 0x00	; 0
    3e4e:	30 e0       	ldi	r19, 0x00	; 0
    3e50:	4a ef       	ldi	r20, 0xFA	; 250
    3e52:	54 e4       	ldi	r21, 0x44	; 68
    3e54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e58:	dc 01       	movw	r26, r24
    3e5a:	cb 01       	movw	r24, r22
    3e5c:	f8 01       	movw	r30, r16
    3e5e:	80 83       	st	Z, r24
    3e60:	91 83       	std	Z+1, r25	; 0x01
    3e62:	a2 83       	std	Z+2, r26	; 0x02
    3e64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e66:	fe 01       	movw	r30, r28
    3e68:	e9 58       	subi	r30, 0x89	; 137
    3e6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6c:	60 81       	ld	r22, Z
    3e6e:	71 81       	ldd	r23, Z+1	; 0x01
    3e70:	82 81       	ldd	r24, Z+2	; 0x02
    3e72:	93 81       	ldd	r25, Z+3	; 0x03
    3e74:	20 e0       	ldi	r18, 0x00	; 0
    3e76:	30 e0       	ldi	r19, 0x00	; 0
    3e78:	40 e8       	ldi	r20, 0x80	; 128
    3e7a:	5f e3       	ldi	r21, 0x3F	; 63
    3e7c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3e80:	88 23       	and	r24, r24
    3e82:	44 f4       	brge	.+16     	; 0x3e94 <MODE_7+0x94>
		__ticks = 1;
    3e84:	fe 01       	movw	r30, r28
    3e86:	eb 58       	subi	r30, 0x8B	; 139
    3e88:	ff 4f       	sbci	r31, 0xFF	; 255
    3e8a:	81 e0       	ldi	r24, 0x01	; 1
    3e8c:	90 e0       	ldi	r25, 0x00	; 0
    3e8e:	91 83       	std	Z+1, r25	; 0x01
    3e90:	80 83       	st	Z, r24
    3e92:	64 c0       	rjmp	.+200    	; 0x3f5c <MODE_7+0x15c>
	else if (__tmp > 65535)
    3e94:	fe 01       	movw	r30, r28
    3e96:	e9 58       	subi	r30, 0x89	; 137
    3e98:	ff 4f       	sbci	r31, 0xFF	; 255
    3e9a:	60 81       	ld	r22, Z
    3e9c:	71 81       	ldd	r23, Z+1	; 0x01
    3e9e:	82 81       	ldd	r24, Z+2	; 0x02
    3ea0:	93 81       	ldd	r25, Z+3	; 0x03
    3ea2:	20 e0       	ldi	r18, 0x00	; 0
    3ea4:	3f ef       	ldi	r19, 0xFF	; 255
    3ea6:	4f e7       	ldi	r20, 0x7F	; 127
    3ea8:	57 e4       	ldi	r21, 0x47	; 71
    3eaa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3eae:	18 16       	cp	r1, r24
    3eb0:	0c f0       	brlt	.+2      	; 0x3eb4 <MODE_7+0xb4>
    3eb2:	43 c0       	rjmp	.+134    	; 0x3f3a <MODE_7+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3eb4:	fe 01       	movw	r30, r28
    3eb6:	e5 58       	subi	r30, 0x85	; 133
    3eb8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eba:	60 81       	ld	r22, Z
    3ebc:	71 81       	ldd	r23, Z+1	; 0x01
    3ebe:	82 81       	ldd	r24, Z+2	; 0x02
    3ec0:	93 81       	ldd	r25, Z+3	; 0x03
    3ec2:	20 e0       	ldi	r18, 0x00	; 0
    3ec4:	30 e0       	ldi	r19, 0x00	; 0
    3ec6:	40 e2       	ldi	r20, 0x20	; 32
    3ec8:	51 e4       	ldi	r21, 0x41	; 65
    3eca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ece:	dc 01       	movw	r26, r24
    3ed0:	cb 01       	movw	r24, r22
    3ed2:	8e 01       	movw	r16, r28
    3ed4:	0b 58       	subi	r16, 0x8B	; 139
    3ed6:	1f 4f       	sbci	r17, 0xFF	; 255
    3ed8:	bc 01       	movw	r22, r24
    3eda:	cd 01       	movw	r24, r26
    3edc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ee0:	dc 01       	movw	r26, r24
    3ee2:	cb 01       	movw	r24, r22
    3ee4:	f8 01       	movw	r30, r16
    3ee6:	91 83       	std	Z+1, r25	; 0x01
    3ee8:	80 83       	st	Z, r24
    3eea:	1f c0       	rjmp	.+62     	; 0x3f2a <MODE_7+0x12a>
    3eec:	fe 01       	movw	r30, r28
    3eee:	ed 58       	subi	r30, 0x8D	; 141
    3ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef2:	88 ec       	ldi	r24, 0xC8	; 200
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	91 83       	std	Z+1, r25	; 0x01
    3ef8:	80 83       	st	Z, r24
    3efa:	fe 01       	movw	r30, r28
    3efc:	ed 58       	subi	r30, 0x8D	; 141
    3efe:	ff 4f       	sbci	r31, 0xFF	; 255
    3f00:	80 81       	ld	r24, Z
    3f02:	91 81       	ldd	r25, Z+1	; 0x01
    3f04:	01 97       	sbiw	r24, 0x01	; 1
    3f06:	f1 f7       	brne	.-4      	; 0x3f04 <MODE_7+0x104>
    3f08:	fe 01       	movw	r30, r28
    3f0a:	ed 58       	subi	r30, 0x8D	; 141
    3f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f0e:	91 83       	std	Z+1, r25	; 0x01
    3f10:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f12:	de 01       	movw	r26, r28
    3f14:	ab 58       	subi	r26, 0x8B	; 139
    3f16:	bf 4f       	sbci	r27, 0xFF	; 255
    3f18:	fe 01       	movw	r30, r28
    3f1a:	eb 58       	subi	r30, 0x8B	; 139
    3f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f1e:	80 81       	ld	r24, Z
    3f20:	91 81       	ldd	r25, Z+1	; 0x01
    3f22:	01 97       	sbiw	r24, 0x01	; 1
    3f24:	11 96       	adiw	r26, 0x01	; 1
    3f26:	9c 93       	st	X, r25
    3f28:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f2a:	fe 01       	movw	r30, r28
    3f2c:	eb 58       	subi	r30, 0x8B	; 139
    3f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f30:	80 81       	ld	r24, Z
    3f32:	91 81       	ldd	r25, Z+1	; 0x01
    3f34:	00 97       	sbiw	r24, 0x00	; 0
    3f36:	d1 f6       	brne	.-76     	; 0x3eec <MODE_7+0xec>
    3f38:	27 c0       	rjmp	.+78     	; 0x3f88 <MODE_7+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f3a:	8e 01       	movw	r16, r28
    3f3c:	0b 58       	subi	r16, 0x8B	; 139
    3f3e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f40:	fe 01       	movw	r30, r28
    3f42:	e9 58       	subi	r30, 0x89	; 137
    3f44:	ff 4f       	sbci	r31, 0xFF	; 255
    3f46:	60 81       	ld	r22, Z
    3f48:	71 81       	ldd	r23, Z+1	; 0x01
    3f4a:	82 81       	ldd	r24, Z+2	; 0x02
    3f4c:	93 81       	ldd	r25, Z+3	; 0x03
    3f4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f52:	dc 01       	movw	r26, r24
    3f54:	cb 01       	movw	r24, r22
    3f56:	f8 01       	movw	r30, r16
    3f58:	91 83       	std	Z+1, r25	; 0x01
    3f5a:	80 83       	st	Z, r24
    3f5c:	de 01       	movw	r26, r28
    3f5e:	af 58       	subi	r26, 0x8F	; 143
    3f60:	bf 4f       	sbci	r27, 0xFF	; 255
    3f62:	fe 01       	movw	r30, r28
    3f64:	eb 58       	subi	r30, 0x8B	; 139
    3f66:	ff 4f       	sbci	r31, 0xFF	; 255
    3f68:	80 81       	ld	r24, Z
    3f6a:	91 81       	ldd	r25, Z+1	; 0x01
    3f6c:	8d 93       	st	X+, r24
    3f6e:	9c 93       	st	X, r25
    3f70:	fe 01       	movw	r30, r28
    3f72:	ef 58       	subi	r30, 0x8F	; 143
    3f74:	ff 4f       	sbci	r31, 0xFF	; 255
    3f76:	80 81       	ld	r24, Z
    3f78:	91 81       	ldd	r25, Z+1	; 0x01
    3f7a:	01 97       	sbiw	r24, 0x01	; 1
    3f7c:	f1 f7       	brne	.-4      	; 0x3f7a <MODE_7+0x17a>
    3f7e:	fe 01       	movw	r30, r28
    3f80:	ef 58       	subi	r30, 0x8F	; 143
    3f82:	ff 4f       	sbci	r31, 0xFF	; 255
    3f84:	91 83       	std	Z+1, r25	; 0x01
    3f86:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED2, ON);
    3f88:	81 e0       	ldi	r24, 0x01	; 1
    3f8a:	61 e0       	ldi	r22, 0x01	; 1
    3f8c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    3f90:	fe 01       	movw	r30, r28
    3f92:	e3 59       	subi	r30, 0x93	; 147
    3f94:	ff 4f       	sbci	r31, 0xFF	; 255
    3f96:	80 e0       	ldi	r24, 0x00	; 0
    3f98:	90 e0       	ldi	r25, 0x00	; 0
    3f9a:	a8 e4       	ldi	r26, 0x48	; 72
    3f9c:	b2 e4       	ldi	r27, 0x42	; 66
    3f9e:	80 83       	st	Z, r24
    3fa0:	91 83       	std	Z+1, r25	; 0x01
    3fa2:	a2 83       	std	Z+2, r26	; 0x02
    3fa4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3fa6:	8e 01       	movw	r16, r28
    3fa8:	07 59       	subi	r16, 0x97	; 151
    3faa:	1f 4f       	sbci	r17, 0xFF	; 255
    3fac:	fe 01       	movw	r30, r28
    3fae:	e3 59       	subi	r30, 0x93	; 147
    3fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb2:	60 81       	ld	r22, Z
    3fb4:	71 81       	ldd	r23, Z+1	; 0x01
    3fb6:	82 81       	ldd	r24, Z+2	; 0x02
    3fb8:	93 81       	ldd	r25, Z+3	; 0x03
    3fba:	20 e0       	ldi	r18, 0x00	; 0
    3fbc:	30 e0       	ldi	r19, 0x00	; 0
    3fbe:	4a ef       	ldi	r20, 0xFA	; 250
    3fc0:	54 e4       	ldi	r21, 0x44	; 68
    3fc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3fc6:	dc 01       	movw	r26, r24
    3fc8:	cb 01       	movw	r24, r22
    3fca:	f8 01       	movw	r30, r16
    3fcc:	80 83       	st	Z, r24
    3fce:	91 83       	std	Z+1, r25	; 0x01
    3fd0:	a2 83       	std	Z+2, r26	; 0x02
    3fd2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3fd4:	fe 01       	movw	r30, r28
    3fd6:	e7 59       	subi	r30, 0x97	; 151
    3fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    3fda:	60 81       	ld	r22, Z
    3fdc:	71 81       	ldd	r23, Z+1	; 0x01
    3fde:	82 81       	ldd	r24, Z+2	; 0x02
    3fe0:	93 81       	ldd	r25, Z+3	; 0x03
    3fe2:	20 e0       	ldi	r18, 0x00	; 0
    3fe4:	30 e0       	ldi	r19, 0x00	; 0
    3fe6:	40 e8       	ldi	r20, 0x80	; 128
    3fe8:	5f e3       	ldi	r21, 0x3F	; 63
    3fea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3fee:	88 23       	and	r24, r24
    3ff0:	44 f4       	brge	.+16     	; 0x4002 <MODE_7+0x202>
		__ticks = 1;
    3ff2:	fe 01       	movw	r30, r28
    3ff4:	e9 59       	subi	r30, 0x99	; 153
    3ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff8:	81 e0       	ldi	r24, 0x01	; 1
    3ffa:	90 e0       	ldi	r25, 0x00	; 0
    3ffc:	91 83       	std	Z+1, r25	; 0x01
    3ffe:	80 83       	st	Z, r24
    4000:	64 c0       	rjmp	.+200    	; 0x40ca <MODE_7+0x2ca>
	else if (__tmp > 65535)
    4002:	fe 01       	movw	r30, r28
    4004:	e7 59       	subi	r30, 0x97	; 151
    4006:	ff 4f       	sbci	r31, 0xFF	; 255
    4008:	60 81       	ld	r22, Z
    400a:	71 81       	ldd	r23, Z+1	; 0x01
    400c:	82 81       	ldd	r24, Z+2	; 0x02
    400e:	93 81       	ldd	r25, Z+3	; 0x03
    4010:	20 e0       	ldi	r18, 0x00	; 0
    4012:	3f ef       	ldi	r19, 0xFF	; 255
    4014:	4f e7       	ldi	r20, 0x7F	; 127
    4016:	57 e4       	ldi	r21, 0x47	; 71
    4018:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    401c:	18 16       	cp	r1, r24
    401e:	0c f0       	brlt	.+2      	; 0x4022 <MODE_7+0x222>
    4020:	43 c0       	rjmp	.+134    	; 0x40a8 <MODE_7+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4022:	fe 01       	movw	r30, r28
    4024:	e3 59       	subi	r30, 0x93	; 147
    4026:	ff 4f       	sbci	r31, 0xFF	; 255
    4028:	60 81       	ld	r22, Z
    402a:	71 81       	ldd	r23, Z+1	; 0x01
    402c:	82 81       	ldd	r24, Z+2	; 0x02
    402e:	93 81       	ldd	r25, Z+3	; 0x03
    4030:	20 e0       	ldi	r18, 0x00	; 0
    4032:	30 e0       	ldi	r19, 0x00	; 0
    4034:	40 e2       	ldi	r20, 0x20	; 32
    4036:	51 e4       	ldi	r21, 0x41	; 65
    4038:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    403c:	dc 01       	movw	r26, r24
    403e:	cb 01       	movw	r24, r22
    4040:	8e 01       	movw	r16, r28
    4042:	09 59       	subi	r16, 0x99	; 153
    4044:	1f 4f       	sbci	r17, 0xFF	; 255
    4046:	bc 01       	movw	r22, r24
    4048:	cd 01       	movw	r24, r26
    404a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    404e:	dc 01       	movw	r26, r24
    4050:	cb 01       	movw	r24, r22
    4052:	f8 01       	movw	r30, r16
    4054:	91 83       	std	Z+1, r25	; 0x01
    4056:	80 83       	st	Z, r24
    4058:	1f c0       	rjmp	.+62     	; 0x4098 <MODE_7+0x298>
    405a:	fe 01       	movw	r30, r28
    405c:	eb 59       	subi	r30, 0x9B	; 155
    405e:	ff 4f       	sbci	r31, 0xFF	; 255
    4060:	88 ec       	ldi	r24, 0xC8	; 200
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	91 83       	std	Z+1, r25	; 0x01
    4066:	80 83       	st	Z, r24
    4068:	fe 01       	movw	r30, r28
    406a:	eb 59       	subi	r30, 0x9B	; 155
    406c:	ff 4f       	sbci	r31, 0xFF	; 255
    406e:	80 81       	ld	r24, Z
    4070:	91 81       	ldd	r25, Z+1	; 0x01
    4072:	01 97       	sbiw	r24, 0x01	; 1
    4074:	f1 f7       	brne	.-4      	; 0x4072 <MODE_7+0x272>
    4076:	fe 01       	movw	r30, r28
    4078:	eb 59       	subi	r30, 0x9B	; 155
    407a:	ff 4f       	sbci	r31, 0xFF	; 255
    407c:	91 83       	std	Z+1, r25	; 0x01
    407e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4080:	de 01       	movw	r26, r28
    4082:	a9 59       	subi	r26, 0x99	; 153
    4084:	bf 4f       	sbci	r27, 0xFF	; 255
    4086:	fe 01       	movw	r30, r28
    4088:	e9 59       	subi	r30, 0x99	; 153
    408a:	ff 4f       	sbci	r31, 0xFF	; 255
    408c:	80 81       	ld	r24, Z
    408e:	91 81       	ldd	r25, Z+1	; 0x01
    4090:	01 97       	sbiw	r24, 0x01	; 1
    4092:	11 96       	adiw	r26, 0x01	; 1
    4094:	9c 93       	st	X, r25
    4096:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4098:	fe 01       	movw	r30, r28
    409a:	e9 59       	subi	r30, 0x99	; 153
    409c:	ff 4f       	sbci	r31, 0xFF	; 255
    409e:	80 81       	ld	r24, Z
    40a0:	91 81       	ldd	r25, Z+1	; 0x01
    40a2:	00 97       	sbiw	r24, 0x00	; 0
    40a4:	d1 f6       	brne	.-76     	; 0x405a <MODE_7+0x25a>
    40a6:	27 c0       	rjmp	.+78     	; 0x40f6 <MODE_7+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40a8:	8e 01       	movw	r16, r28
    40aa:	09 59       	subi	r16, 0x99	; 153
    40ac:	1f 4f       	sbci	r17, 0xFF	; 255
    40ae:	fe 01       	movw	r30, r28
    40b0:	e7 59       	subi	r30, 0x97	; 151
    40b2:	ff 4f       	sbci	r31, 0xFF	; 255
    40b4:	60 81       	ld	r22, Z
    40b6:	71 81       	ldd	r23, Z+1	; 0x01
    40b8:	82 81       	ldd	r24, Z+2	; 0x02
    40ba:	93 81       	ldd	r25, Z+3	; 0x03
    40bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40c0:	dc 01       	movw	r26, r24
    40c2:	cb 01       	movw	r24, r22
    40c4:	f8 01       	movw	r30, r16
    40c6:	91 83       	std	Z+1, r25	; 0x01
    40c8:	80 83       	st	Z, r24
    40ca:	de 01       	movw	r26, r28
    40cc:	ad 59       	subi	r26, 0x9D	; 157
    40ce:	bf 4f       	sbci	r27, 0xFF	; 255
    40d0:	fe 01       	movw	r30, r28
    40d2:	e9 59       	subi	r30, 0x99	; 153
    40d4:	ff 4f       	sbci	r31, 0xFF	; 255
    40d6:	80 81       	ld	r24, Z
    40d8:	91 81       	ldd	r25, Z+1	; 0x01
    40da:	8d 93       	st	X+, r24
    40dc:	9c 93       	st	X, r25
    40de:	fe 01       	movw	r30, r28
    40e0:	ed 59       	subi	r30, 0x9D	; 157
    40e2:	ff 4f       	sbci	r31, 0xFF	; 255
    40e4:	80 81       	ld	r24, Z
    40e6:	91 81       	ldd	r25, Z+1	; 0x01
    40e8:	01 97       	sbiw	r24, 0x01	; 1
    40ea:	f1 f7       	brne	.-4      	; 0x40e8 <MODE_7+0x2e8>
    40ec:	fe 01       	movw	r30, r28
    40ee:	ed 59       	subi	r30, 0x9D	; 157
    40f0:	ff 4f       	sbci	r31, 0xFF	; 255
    40f2:	91 83       	std	Z+1, r25	; 0x01
    40f4:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED3, ON);
    40f6:	82 e0       	ldi	r24, 0x02	; 2
    40f8:	61 e0       	ldi	r22, 0x01	; 1
    40fa:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    40fe:	fe 01       	movw	r30, r28
    4100:	e1 5a       	subi	r30, 0xA1	; 161
    4102:	ff 4f       	sbci	r31, 0xFF	; 255
    4104:	80 e0       	ldi	r24, 0x00	; 0
    4106:	90 e0       	ldi	r25, 0x00	; 0
    4108:	a8 e4       	ldi	r26, 0x48	; 72
    410a:	b2 e4       	ldi	r27, 0x42	; 66
    410c:	80 83       	st	Z, r24
    410e:	91 83       	std	Z+1, r25	; 0x01
    4110:	a2 83       	std	Z+2, r26	; 0x02
    4112:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4114:	8e 01       	movw	r16, r28
    4116:	05 5a       	subi	r16, 0xA5	; 165
    4118:	1f 4f       	sbci	r17, 0xFF	; 255
    411a:	fe 01       	movw	r30, r28
    411c:	e1 5a       	subi	r30, 0xA1	; 161
    411e:	ff 4f       	sbci	r31, 0xFF	; 255
    4120:	60 81       	ld	r22, Z
    4122:	71 81       	ldd	r23, Z+1	; 0x01
    4124:	82 81       	ldd	r24, Z+2	; 0x02
    4126:	93 81       	ldd	r25, Z+3	; 0x03
    4128:	20 e0       	ldi	r18, 0x00	; 0
    412a:	30 e0       	ldi	r19, 0x00	; 0
    412c:	4a ef       	ldi	r20, 0xFA	; 250
    412e:	54 e4       	ldi	r21, 0x44	; 68
    4130:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4134:	dc 01       	movw	r26, r24
    4136:	cb 01       	movw	r24, r22
    4138:	f8 01       	movw	r30, r16
    413a:	80 83       	st	Z, r24
    413c:	91 83       	std	Z+1, r25	; 0x01
    413e:	a2 83       	std	Z+2, r26	; 0x02
    4140:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4142:	fe 01       	movw	r30, r28
    4144:	e5 5a       	subi	r30, 0xA5	; 165
    4146:	ff 4f       	sbci	r31, 0xFF	; 255
    4148:	60 81       	ld	r22, Z
    414a:	71 81       	ldd	r23, Z+1	; 0x01
    414c:	82 81       	ldd	r24, Z+2	; 0x02
    414e:	93 81       	ldd	r25, Z+3	; 0x03
    4150:	20 e0       	ldi	r18, 0x00	; 0
    4152:	30 e0       	ldi	r19, 0x00	; 0
    4154:	40 e8       	ldi	r20, 0x80	; 128
    4156:	5f e3       	ldi	r21, 0x3F	; 63
    4158:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    415c:	88 23       	and	r24, r24
    415e:	44 f4       	brge	.+16     	; 0x4170 <MODE_7+0x370>
		__ticks = 1;
    4160:	fe 01       	movw	r30, r28
    4162:	e7 5a       	subi	r30, 0xA7	; 167
    4164:	ff 4f       	sbci	r31, 0xFF	; 255
    4166:	81 e0       	ldi	r24, 0x01	; 1
    4168:	90 e0       	ldi	r25, 0x00	; 0
    416a:	91 83       	std	Z+1, r25	; 0x01
    416c:	80 83       	st	Z, r24
    416e:	64 c0       	rjmp	.+200    	; 0x4238 <MODE_7+0x438>
	else if (__tmp > 65535)
    4170:	fe 01       	movw	r30, r28
    4172:	e5 5a       	subi	r30, 0xA5	; 165
    4174:	ff 4f       	sbci	r31, 0xFF	; 255
    4176:	60 81       	ld	r22, Z
    4178:	71 81       	ldd	r23, Z+1	; 0x01
    417a:	82 81       	ldd	r24, Z+2	; 0x02
    417c:	93 81       	ldd	r25, Z+3	; 0x03
    417e:	20 e0       	ldi	r18, 0x00	; 0
    4180:	3f ef       	ldi	r19, 0xFF	; 255
    4182:	4f e7       	ldi	r20, 0x7F	; 127
    4184:	57 e4       	ldi	r21, 0x47	; 71
    4186:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    418a:	18 16       	cp	r1, r24
    418c:	0c f0       	brlt	.+2      	; 0x4190 <MODE_7+0x390>
    418e:	43 c0       	rjmp	.+134    	; 0x4216 <MODE_7+0x416>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4190:	fe 01       	movw	r30, r28
    4192:	e1 5a       	subi	r30, 0xA1	; 161
    4194:	ff 4f       	sbci	r31, 0xFF	; 255
    4196:	60 81       	ld	r22, Z
    4198:	71 81       	ldd	r23, Z+1	; 0x01
    419a:	82 81       	ldd	r24, Z+2	; 0x02
    419c:	93 81       	ldd	r25, Z+3	; 0x03
    419e:	20 e0       	ldi	r18, 0x00	; 0
    41a0:	30 e0       	ldi	r19, 0x00	; 0
    41a2:	40 e2       	ldi	r20, 0x20	; 32
    41a4:	51 e4       	ldi	r21, 0x41	; 65
    41a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41aa:	dc 01       	movw	r26, r24
    41ac:	cb 01       	movw	r24, r22
    41ae:	8e 01       	movw	r16, r28
    41b0:	07 5a       	subi	r16, 0xA7	; 167
    41b2:	1f 4f       	sbci	r17, 0xFF	; 255
    41b4:	bc 01       	movw	r22, r24
    41b6:	cd 01       	movw	r24, r26
    41b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41bc:	dc 01       	movw	r26, r24
    41be:	cb 01       	movw	r24, r22
    41c0:	f8 01       	movw	r30, r16
    41c2:	91 83       	std	Z+1, r25	; 0x01
    41c4:	80 83       	st	Z, r24
    41c6:	1f c0       	rjmp	.+62     	; 0x4206 <MODE_7+0x406>
    41c8:	fe 01       	movw	r30, r28
    41ca:	e9 5a       	subi	r30, 0xA9	; 169
    41cc:	ff 4f       	sbci	r31, 0xFF	; 255
    41ce:	88 ec       	ldi	r24, 0xC8	; 200
    41d0:	90 e0       	ldi	r25, 0x00	; 0
    41d2:	91 83       	std	Z+1, r25	; 0x01
    41d4:	80 83       	st	Z, r24
    41d6:	fe 01       	movw	r30, r28
    41d8:	e9 5a       	subi	r30, 0xA9	; 169
    41da:	ff 4f       	sbci	r31, 0xFF	; 255
    41dc:	80 81       	ld	r24, Z
    41de:	91 81       	ldd	r25, Z+1	; 0x01
    41e0:	01 97       	sbiw	r24, 0x01	; 1
    41e2:	f1 f7       	brne	.-4      	; 0x41e0 <MODE_7+0x3e0>
    41e4:	fe 01       	movw	r30, r28
    41e6:	e9 5a       	subi	r30, 0xA9	; 169
    41e8:	ff 4f       	sbci	r31, 0xFF	; 255
    41ea:	91 83       	std	Z+1, r25	; 0x01
    41ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41ee:	de 01       	movw	r26, r28
    41f0:	a7 5a       	subi	r26, 0xA7	; 167
    41f2:	bf 4f       	sbci	r27, 0xFF	; 255
    41f4:	fe 01       	movw	r30, r28
    41f6:	e7 5a       	subi	r30, 0xA7	; 167
    41f8:	ff 4f       	sbci	r31, 0xFF	; 255
    41fa:	80 81       	ld	r24, Z
    41fc:	91 81       	ldd	r25, Z+1	; 0x01
    41fe:	01 97       	sbiw	r24, 0x01	; 1
    4200:	11 96       	adiw	r26, 0x01	; 1
    4202:	9c 93       	st	X, r25
    4204:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4206:	fe 01       	movw	r30, r28
    4208:	e7 5a       	subi	r30, 0xA7	; 167
    420a:	ff 4f       	sbci	r31, 0xFF	; 255
    420c:	80 81       	ld	r24, Z
    420e:	91 81       	ldd	r25, Z+1	; 0x01
    4210:	00 97       	sbiw	r24, 0x00	; 0
    4212:	d1 f6       	brne	.-76     	; 0x41c8 <MODE_7+0x3c8>
    4214:	27 c0       	rjmp	.+78     	; 0x4264 <MODE_7+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4216:	8e 01       	movw	r16, r28
    4218:	07 5a       	subi	r16, 0xA7	; 167
    421a:	1f 4f       	sbci	r17, 0xFF	; 255
    421c:	fe 01       	movw	r30, r28
    421e:	e5 5a       	subi	r30, 0xA5	; 165
    4220:	ff 4f       	sbci	r31, 0xFF	; 255
    4222:	60 81       	ld	r22, Z
    4224:	71 81       	ldd	r23, Z+1	; 0x01
    4226:	82 81       	ldd	r24, Z+2	; 0x02
    4228:	93 81       	ldd	r25, Z+3	; 0x03
    422a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    422e:	dc 01       	movw	r26, r24
    4230:	cb 01       	movw	r24, r22
    4232:	f8 01       	movw	r30, r16
    4234:	91 83       	std	Z+1, r25	; 0x01
    4236:	80 83       	st	Z, r24
    4238:	de 01       	movw	r26, r28
    423a:	ab 5a       	subi	r26, 0xAB	; 171
    423c:	bf 4f       	sbci	r27, 0xFF	; 255
    423e:	fe 01       	movw	r30, r28
    4240:	e7 5a       	subi	r30, 0xA7	; 167
    4242:	ff 4f       	sbci	r31, 0xFF	; 255
    4244:	80 81       	ld	r24, Z
    4246:	91 81       	ldd	r25, Z+1	; 0x01
    4248:	8d 93       	st	X+, r24
    424a:	9c 93       	st	X, r25
    424c:	fe 01       	movw	r30, r28
    424e:	eb 5a       	subi	r30, 0xAB	; 171
    4250:	ff 4f       	sbci	r31, 0xFF	; 255
    4252:	80 81       	ld	r24, Z
    4254:	91 81       	ldd	r25, Z+1	; 0x01
    4256:	01 97       	sbiw	r24, 0x01	; 1
    4258:	f1 f7       	brne	.-4      	; 0x4256 <MODE_7+0x456>
    425a:	fe 01       	movw	r30, r28
    425c:	eb 5a       	subi	r30, 0xAB	; 171
    425e:	ff 4f       	sbci	r31, 0xFF	; 255
    4260:	91 83       	std	Z+1, r25	; 0x01
    4262:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED4, ON);
    4264:	83 e0       	ldi	r24, 0x03	; 3
    4266:	61 e0       	ldi	r22, 0x01	; 1
    4268:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    426c:	fe 01       	movw	r30, r28
    426e:	ef 5a       	subi	r30, 0xAF	; 175
    4270:	ff 4f       	sbci	r31, 0xFF	; 255
    4272:	80 e0       	ldi	r24, 0x00	; 0
    4274:	90 e0       	ldi	r25, 0x00	; 0
    4276:	a8 e4       	ldi	r26, 0x48	; 72
    4278:	b2 e4       	ldi	r27, 0x42	; 66
    427a:	80 83       	st	Z, r24
    427c:	91 83       	std	Z+1, r25	; 0x01
    427e:	a2 83       	std	Z+2, r26	; 0x02
    4280:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4282:	8e 01       	movw	r16, r28
    4284:	03 5b       	subi	r16, 0xB3	; 179
    4286:	1f 4f       	sbci	r17, 0xFF	; 255
    4288:	fe 01       	movw	r30, r28
    428a:	ef 5a       	subi	r30, 0xAF	; 175
    428c:	ff 4f       	sbci	r31, 0xFF	; 255
    428e:	60 81       	ld	r22, Z
    4290:	71 81       	ldd	r23, Z+1	; 0x01
    4292:	82 81       	ldd	r24, Z+2	; 0x02
    4294:	93 81       	ldd	r25, Z+3	; 0x03
    4296:	20 e0       	ldi	r18, 0x00	; 0
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	4a ef       	ldi	r20, 0xFA	; 250
    429c:	54 e4       	ldi	r21, 0x44	; 68
    429e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42a2:	dc 01       	movw	r26, r24
    42a4:	cb 01       	movw	r24, r22
    42a6:	f8 01       	movw	r30, r16
    42a8:	80 83       	st	Z, r24
    42aa:	91 83       	std	Z+1, r25	; 0x01
    42ac:	a2 83       	std	Z+2, r26	; 0x02
    42ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    42b0:	fe 01       	movw	r30, r28
    42b2:	e3 5b       	subi	r30, 0xB3	; 179
    42b4:	ff 4f       	sbci	r31, 0xFF	; 255
    42b6:	60 81       	ld	r22, Z
    42b8:	71 81       	ldd	r23, Z+1	; 0x01
    42ba:	82 81       	ldd	r24, Z+2	; 0x02
    42bc:	93 81       	ldd	r25, Z+3	; 0x03
    42be:	20 e0       	ldi	r18, 0x00	; 0
    42c0:	30 e0       	ldi	r19, 0x00	; 0
    42c2:	40 e8       	ldi	r20, 0x80	; 128
    42c4:	5f e3       	ldi	r21, 0x3F	; 63
    42c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    42ca:	88 23       	and	r24, r24
    42cc:	44 f4       	brge	.+16     	; 0x42de <MODE_7+0x4de>
		__ticks = 1;
    42ce:	fe 01       	movw	r30, r28
    42d0:	e5 5b       	subi	r30, 0xB5	; 181
    42d2:	ff 4f       	sbci	r31, 0xFF	; 255
    42d4:	81 e0       	ldi	r24, 0x01	; 1
    42d6:	90 e0       	ldi	r25, 0x00	; 0
    42d8:	91 83       	std	Z+1, r25	; 0x01
    42da:	80 83       	st	Z, r24
    42dc:	64 c0       	rjmp	.+200    	; 0x43a6 <MODE_7+0x5a6>
	else if (__tmp > 65535)
    42de:	fe 01       	movw	r30, r28
    42e0:	e3 5b       	subi	r30, 0xB3	; 179
    42e2:	ff 4f       	sbci	r31, 0xFF	; 255
    42e4:	60 81       	ld	r22, Z
    42e6:	71 81       	ldd	r23, Z+1	; 0x01
    42e8:	82 81       	ldd	r24, Z+2	; 0x02
    42ea:	93 81       	ldd	r25, Z+3	; 0x03
    42ec:	20 e0       	ldi	r18, 0x00	; 0
    42ee:	3f ef       	ldi	r19, 0xFF	; 255
    42f0:	4f e7       	ldi	r20, 0x7F	; 127
    42f2:	57 e4       	ldi	r21, 0x47	; 71
    42f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    42f8:	18 16       	cp	r1, r24
    42fa:	0c f0       	brlt	.+2      	; 0x42fe <MODE_7+0x4fe>
    42fc:	43 c0       	rjmp	.+134    	; 0x4384 <MODE_7+0x584>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42fe:	fe 01       	movw	r30, r28
    4300:	ef 5a       	subi	r30, 0xAF	; 175
    4302:	ff 4f       	sbci	r31, 0xFF	; 255
    4304:	60 81       	ld	r22, Z
    4306:	71 81       	ldd	r23, Z+1	; 0x01
    4308:	82 81       	ldd	r24, Z+2	; 0x02
    430a:	93 81       	ldd	r25, Z+3	; 0x03
    430c:	20 e0       	ldi	r18, 0x00	; 0
    430e:	30 e0       	ldi	r19, 0x00	; 0
    4310:	40 e2       	ldi	r20, 0x20	; 32
    4312:	51 e4       	ldi	r21, 0x41	; 65
    4314:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4318:	dc 01       	movw	r26, r24
    431a:	cb 01       	movw	r24, r22
    431c:	8e 01       	movw	r16, r28
    431e:	05 5b       	subi	r16, 0xB5	; 181
    4320:	1f 4f       	sbci	r17, 0xFF	; 255
    4322:	bc 01       	movw	r22, r24
    4324:	cd 01       	movw	r24, r26
    4326:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    432a:	dc 01       	movw	r26, r24
    432c:	cb 01       	movw	r24, r22
    432e:	f8 01       	movw	r30, r16
    4330:	91 83       	std	Z+1, r25	; 0x01
    4332:	80 83       	st	Z, r24
    4334:	1f c0       	rjmp	.+62     	; 0x4374 <MODE_7+0x574>
    4336:	fe 01       	movw	r30, r28
    4338:	e7 5b       	subi	r30, 0xB7	; 183
    433a:	ff 4f       	sbci	r31, 0xFF	; 255
    433c:	88 ec       	ldi	r24, 0xC8	; 200
    433e:	90 e0       	ldi	r25, 0x00	; 0
    4340:	91 83       	std	Z+1, r25	; 0x01
    4342:	80 83       	st	Z, r24
    4344:	fe 01       	movw	r30, r28
    4346:	e7 5b       	subi	r30, 0xB7	; 183
    4348:	ff 4f       	sbci	r31, 0xFF	; 255
    434a:	80 81       	ld	r24, Z
    434c:	91 81       	ldd	r25, Z+1	; 0x01
    434e:	01 97       	sbiw	r24, 0x01	; 1
    4350:	f1 f7       	brne	.-4      	; 0x434e <MODE_7+0x54e>
    4352:	fe 01       	movw	r30, r28
    4354:	e7 5b       	subi	r30, 0xB7	; 183
    4356:	ff 4f       	sbci	r31, 0xFF	; 255
    4358:	91 83       	std	Z+1, r25	; 0x01
    435a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    435c:	de 01       	movw	r26, r28
    435e:	a5 5b       	subi	r26, 0xB5	; 181
    4360:	bf 4f       	sbci	r27, 0xFF	; 255
    4362:	fe 01       	movw	r30, r28
    4364:	e5 5b       	subi	r30, 0xB5	; 181
    4366:	ff 4f       	sbci	r31, 0xFF	; 255
    4368:	80 81       	ld	r24, Z
    436a:	91 81       	ldd	r25, Z+1	; 0x01
    436c:	01 97       	sbiw	r24, 0x01	; 1
    436e:	11 96       	adiw	r26, 0x01	; 1
    4370:	9c 93       	st	X, r25
    4372:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4374:	fe 01       	movw	r30, r28
    4376:	e5 5b       	subi	r30, 0xB5	; 181
    4378:	ff 4f       	sbci	r31, 0xFF	; 255
    437a:	80 81       	ld	r24, Z
    437c:	91 81       	ldd	r25, Z+1	; 0x01
    437e:	00 97       	sbiw	r24, 0x00	; 0
    4380:	d1 f6       	brne	.-76     	; 0x4336 <MODE_7+0x536>
    4382:	27 c0       	rjmp	.+78     	; 0x43d2 <MODE_7+0x5d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4384:	8e 01       	movw	r16, r28
    4386:	05 5b       	subi	r16, 0xB5	; 181
    4388:	1f 4f       	sbci	r17, 0xFF	; 255
    438a:	fe 01       	movw	r30, r28
    438c:	e3 5b       	subi	r30, 0xB3	; 179
    438e:	ff 4f       	sbci	r31, 0xFF	; 255
    4390:	60 81       	ld	r22, Z
    4392:	71 81       	ldd	r23, Z+1	; 0x01
    4394:	82 81       	ldd	r24, Z+2	; 0x02
    4396:	93 81       	ldd	r25, Z+3	; 0x03
    4398:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    439c:	dc 01       	movw	r26, r24
    439e:	cb 01       	movw	r24, r22
    43a0:	f8 01       	movw	r30, r16
    43a2:	91 83       	std	Z+1, r25	; 0x01
    43a4:	80 83       	st	Z, r24
    43a6:	de 01       	movw	r26, r28
    43a8:	a9 5b       	subi	r26, 0xB9	; 185
    43aa:	bf 4f       	sbci	r27, 0xFF	; 255
    43ac:	fe 01       	movw	r30, r28
    43ae:	e5 5b       	subi	r30, 0xB5	; 181
    43b0:	ff 4f       	sbci	r31, 0xFF	; 255
    43b2:	80 81       	ld	r24, Z
    43b4:	91 81       	ldd	r25, Z+1	; 0x01
    43b6:	8d 93       	st	X+, r24
    43b8:	9c 93       	st	X, r25
    43ba:	fe 01       	movw	r30, r28
    43bc:	e9 5b       	subi	r30, 0xB9	; 185
    43be:	ff 4f       	sbci	r31, 0xFF	; 255
    43c0:	80 81       	ld	r24, Z
    43c2:	91 81       	ldd	r25, Z+1	; 0x01
    43c4:	01 97       	sbiw	r24, 0x01	; 1
    43c6:	f1 f7       	brne	.-4      	; 0x43c4 <MODE_7+0x5c4>
    43c8:	fe 01       	movw	r30, r28
    43ca:	e9 5b       	subi	r30, 0xB9	; 185
    43cc:	ff 4f       	sbci	r31, 0xFF	; 255
    43ce:	91 83       	std	Z+1, r25	; 0x01
    43d0:	80 83       	st	Z, r24
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED5, ON);
    43d2:	84 e0       	ldi	r24, 0x04	; 4
    43d4:	61 e0       	ldi	r22, 0x01	; 1
    43d6:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    43da:	fe 01       	movw	r30, r28
    43dc:	ed 5b       	subi	r30, 0xBD	; 189
    43de:	ff 4f       	sbci	r31, 0xFF	; 255
    43e0:	80 e0       	ldi	r24, 0x00	; 0
    43e2:	90 e0       	ldi	r25, 0x00	; 0
    43e4:	a8 e4       	ldi	r26, 0x48	; 72
    43e6:	b2 e4       	ldi	r27, 0x42	; 66
    43e8:	80 83       	st	Z, r24
    43ea:	91 83       	std	Z+1, r25	; 0x01
    43ec:	a2 83       	std	Z+2, r26	; 0x02
    43ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43f0:	8e 01       	movw	r16, r28
    43f2:	01 5c       	subi	r16, 0xC1	; 193
    43f4:	1f 4f       	sbci	r17, 0xFF	; 255
    43f6:	fe 01       	movw	r30, r28
    43f8:	ed 5b       	subi	r30, 0xBD	; 189
    43fa:	ff 4f       	sbci	r31, 0xFF	; 255
    43fc:	60 81       	ld	r22, Z
    43fe:	71 81       	ldd	r23, Z+1	; 0x01
    4400:	82 81       	ldd	r24, Z+2	; 0x02
    4402:	93 81       	ldd	r25, Z+3	; 0x03
    4404:	20 e0       	ldi	r18, 0x00	; 0
    4406:	30 e0       	ldi	r19, 0x00	; 0
    4408:	4a ef       	ldi	r20, 0xFA	; 250
    440a:	54 e4       	ldi	r21, 0x44	; 68
    440c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4410:	dc 01       	movw	r26, r24
    4412:	cb 01       	movw	r24, r22
    4414:	f8 01       	movw	r30, r16
    4416:	80 83       	st	Z, r24
    4418:	91 83       	std	Z+1, r25	; 0x01
    441a:	a2 83       	std	Z+2, r26	; 0x02
    441c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    441e:	fe 01       	movw	r30, r28
    4420:	ff 96       	adiw	r30, 0x3f	; 63
    4422:	60 81       	ld	r22, Z
    4424:	71 81       	ldd	r23, Z+1	; 0x01
    4426:	82 81       	ldd	r24, Z+2	; 0x02
    4428:	93 81       	ldd	r25, Z+3	; 0x03
    442a:	20 e0       	ldi	r18, 0x00	; 0
    442c:	30 e0       	ldi	r19, 0x00	; 0
    442e:	40 e8       	ldi	r20, 0x80	; 128
    4430:	5f e3       	ldi	r21, 0x3F	; 63
    4432:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4436:	88 23       	and	r24, r24
    4438:	2c f4       	brge	.+10     	; 0x4444 <MODE_7+0x644>
		__ticks = 1;
    443a:	81 e0       	ldi	r24, 0x01	; 1
    443c:	90 e0       	ldi	r25, 0x00	; 0
    443e:	9e af       	std	Y+62, r25	; 0x3e
    4440:	8d af       	std	Y+61, r24	; 0x3d
    4442:	46 c0       	rjmp	.+140    	; 0x44d0 <MODE_7+0x6d0>
	else if (__tmp > 65535)
    4444:	fe 01       	movw	r30, r28
    4446:	ff 96       	adiw	r30, 0x3f	; 63
    4448:	60 81       	ld	r22, Z
    444a:	71 81       	ldd	r23, Z+1	; 0x01
    444c:	82 81       	ldd	r24, Z+2	; 0x02
    444e:	93 81       	ldd	r25, Z+3	; 0x03
    4450:	20 e0       	ldi	r18, 0x00	; 0
    4452:	3f ef       	ldi	r19, 0xFF	; 255
    4454:	4f e7       	ldi	r20, 0x7F	; 127
    4456:	57 e4       	ldi	r21, 0x47	; 71
    4458:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    445c:	18 16       	cp	r1, r24
    445e:	64 f5       	brge	.+88     	; 0x44b8 <MODE_7+0x6b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4460:	fe 01       	movw	r30, r28
    4462:	ed 5b       	subi	r30, 0xBD	; 189
    4464:	ff 4f       	sbci	r31, 0xFF	; 255
    4466:	60 81       	ld	r22, Z
    4468:	71 81       	ldd	r23, Z+1	; 0x01
    446a:	82 81       	ldd	r24, Z+2	; 0x02
    446c:	93 81       	ldd	r25, Z+3	; 0x03
    446e:	20 e0       	ldi	r18, 0x00	; 0
    4470:	30 e0       	ldi	r19, 0x00	; 0
    4472:	40 e2       	ldi	r20, 0x20	; 32
    4474:	51 e4       	ldi	r21, 0x41	; 65
    4476:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    447a:	dc 01       	movw	r26, r24
    447c:	cb 01       	movw	r24, r22
    447e:	bc 01       	movw	r22, r24
    4480:	cd 01       	movw	r24, r26
    4482:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4486:	dc 01       	movw	r26, r24
    4488:	cb 01       	movw	r24, r22
    448a:	9e af       	std	Y+62, r25	; 0x3e
    448c:	8d af       	std	Y+61, r24	; 0x3d
    448e:	0f c0       	rjmp	.+30     	; 0x44ae <MODE_7+0x6ae>
    4490:	88 ec       	ldi	r24, 0xC8	; 200
    4492:	90 e0       	ldi	r25, 0x00	; 0
    4494:	9c af       	std	Y+60, r25	; 0x3c
    4496:	8b af       	std	Y+59, r24	; 0x3b
    4498:	8b ad       	ldd	r24, Y+59	; 0x3b
    449a:	9c ad       	ldd	r25, Y+60	; 0x3c
    449c:	01 97       	sbiw	r24, 0x01	; 1
    449e:	f1 f7       	brne	.-4      	; 0x449c <MODE_7+0x69c>
    44a0:	9c af       	std	Y+60, r25	; 0x3c
    44a2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44a4:	8d ad       	ldd	r24, Y+61	; 0x3d
    44a6:	9e ad       	ldd	r25, Y+62	; 0x3e
    44a8:	01 97       	sbiw	r24, 0x01	; 1
    44aa:	9e af       	std	Y+62, r25	; 0x3e
    44ac:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44ae:	8d ad       	ldd	r24, Y+61	; 0x3d
    44b0:	9e ad       	ldd	r25, Y+62	; 0x3e
    44b2:	00 97       	sbiw	r24, 0x00	; 0
    44b4:	69 f7       	brne	.-38     	; 0x4490 <MODE_7+0x690>
    44b6:	16 c0       	rjmp	.+44     	; 0x44e4 <MODE_7+0x6e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44b8:	fe 01       	movw	r30, r28
    44ba:	ff 96       	adiw	r30, 0x3f	; 63
    44bc:	60 81       	ld	r22, Z
    44be:	71 81       	ldd	r23, Z+1	; 0x01
    44c0:	82 81       	ldd	r24, Z+2	; 0x02
    44c2:	93 81       	ldd	r25, Z+3	; 0x03
    44c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44c8:	dc 01       	movw	r26, r24
    44ca:	cb 01       	movw	r24, r22
    44cc:	9e af       	std	Y+62, r25	; 0x3e
    44ce:	8d af       	std	Y+61, r24	; 0x3d
    44d0:	8d ad       	ldd	r24, Y+61	; 0x3d
    44d2:	9e ad       	ldd	r25, Y+62	; 0x3e
    44d4:	9a af       	std	Y+58, r25	; 0x3a
    44d6:	89 af       	std	Y+57, r24	; 0x39
    44d8:	89 ad       	ldd	r24, Y+57	; 0x39
    44da:	9a ad       	ldd	r25, Y+58	; 0x3a
    44dc:	01 97       	sbiw	r24, 0x01	; 1
    44de:	f1 f7       	brne	.-4      	; 0x44dc <MODE_7+0x6dc>
    44e0:	9a af       	std	Y+58, r25	; 0x3a
    44e2:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED6, ON);
    44e4:	85 e0       	ldi	r24, 0x05	; 5
    44e6:	61 e0       	ldi	r22, 0x01	; 1
    44e8:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    44ec:	80 e0       	ldi	r24, 0x00	; 0
    44ee:	90 e0       	ldi	r25, 0x00	; 0
    44f0:	a8 e4       	ldi	r26, 0x48	; 72
    44f2:	b2 e4       	ldi	r27, 0x42	; 66
    44f4:	8d ab       	std	Y+53, r24	; 0x35
    44f6:	9e ab       	std	Y+54, r25	; 0x36
    44f8:	af ab       	std	Y+55, r26	; 0x37
    44fa:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44fc:	6d a9       	ldd	r22, Y+53	; 0x35
    44fe:	7e a9       	ldd	r23, Y+54	; 0x36
    4500:	8f a9       	ldd	r24, Y+55	; 0x37
    4502:	98 ad       	ldd	r25, Y+56	; 0x38
    4504:	20 e0       	ldi	r18, 0x00	; 0
    4506:	30 e0       	ldi	r19, 0x00	; 0
    4508:	4a ef       	ldi	r20, 0xFA	; 250
    450a:	54 e4       	ldi	r21, 0x44	; 68
    450c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4510:	dc 01       	movw	r26, r24
    4512:	cb 01       	movw	r24, r22
    4514:	89 ab       	std	Y+49, r24	; 0x31
    4516:	9a ab       	std	Y+50, r25	; 0x32
    4518:	ab ab       	std	Y+51, r26	; 0x33
    451a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    451c:	69 a9       	ldd	r22, Y+49	; 0x31
    451e:	7a a9       	ldd	r23, Y+50	; 0x32
    4520:	8b a9       	ldd	r24, Y+51	; 0x33
    4522:	9c a9       	ldd	r25, Y+52	; 0x34
    4524:	20 e0       	ldi	r18, 0x00	; 0
    4526:	30 e0       	ldi	r19, 0x00	; 0
    4528:	40 e8       	ldi	r20, 0x80	; 128
    452a:	5f e3       	ldi	r21, 0x3F	; 63
    452c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4530:	88 23       	and	r24, r24
    4532:	2c f4       	brge	.+10     	; 0x453e <MODE_7+0x73e>
		__ticks = 1;
    4534:	81 e0       	ldi	r24, 0x01	; 1
    4536:	90 e0       	ldi	r25, 0x00	; 0
    4538:	98 ab       	std	Y+48, r25	; 0x30
    453a:	8f a7       	std	Y+47, r24	; 0x2f
    453c:	3f c0       	rjmp	.+126    	; 0x45bc <MODE_7+0x7bc>
	else if (__tmp > 65535)
    453e:	69 a9       	ldd	r22, Y+49	; 0x31
    4540:	7a a9       	ldd	r23, Y+50	; 0x32
    4542:	8b a9       	ldd	r24, Y+51	; 0x33
    4544:	9c a9       	ldd	r25, Y+52	; 0x34
    4546:	20 e0       	ldi	r18, 0x00	; 0
    4548:	3f ef       	ldi	r19, 0xFF	; 255
    454a:	4f e7       	ldi	r20, 0x7F	; 127
    454c:	57 e4       	ldi	r21, 0x47	; 71
    454e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4552:	18 16       	cp	r1, r24
    4554:	4c f5       	brge	.+82     	; 0x45a8 <MODE_7+0x7a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4556:	6d a9       	ldd	r22, Y+53	; 0x35
    4558:	7e a9       	ldd	r23, Y+54	; 0x36
    455a:	8f a9       	ldd	r24, Y+55	; 0x37
    455c:	98 ad       	ldd	r25, Y+56	; 0x38
    455e:	20 e0       	ldi	r18, 0x00	; 0
    4560:	30 e0       	ldi	r19, 0x00	; 0
    4562:	40 e2       	ldi	r20, 0x20	; 32
    4564:	51 e4       	ldi	r21, 0x41	; 65
    4566:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    456a:	dc 01       	movw	r26, r24
    456c:	cb 01       	movw	r24, r22
    456e:	bc 01       	movw	r22, r24
    4570:	cd 01       	movw	r24, r26
    4572:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4576:	dc 01       	movw	r26, r24
    4578:	cb 01       	movw	r24, r22
    457a:	98 ab       	std	Y+48, r25	; 0x30
    457c:	8f a7       	std	Y+47, r24	; 0x2f
    457e:	0f c0       	rjmp	.+30     	; 0x459e <MODE_7+0x79e>
    4580:	88 ec       	ldi	r24, 0xC8	; 200
    4582:	90 e0       	ldi	r25, 0x00	; 0
    4584:	9e a7       	std	Y+46, r25	; 0x2e
    4586:	8d a7       	std	Y+45, r24	; 0x2d
    4588:	8d a5       	ldd	r24, Y+45	; 0x2d
    458a:	9e a5       	ldd	r25, Y+46	; 0x2e
    458c:	01 97       	sbiw	r24, 0x01	; 1
    458e:	f1 f7       	brne	.-4      	; 0x458c <MODE_7+0x78c>
    4590:	9e a7       	std	Y+46, r25	; 0x2e
    4592:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4594:	8f a5       	ldd	r24, Y+47	; 0x2f
    4596:	98 a9       	ldd	r25, Y+48	; 0x30
    4598:	01 97       	sbiw	r24, 0x01	; 1
    459a:	98 ab       	std	Y+48, r25	; 0x30
    459c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    459e:	8f a5       	ldd	r24, Y+47	; 0x2f
    45a0:	98 a9       	ldd	r25, Y+48	; 0x30
    45a2:	00 97       	sbiw	r24, 0x00	; 0
    45a4:	69 f7       	brne	.-38     	; 0x4580 <MODE_7+0x780>
    45a6:	14 c0       	rjmp	.+40     	; 0x45d0 <MODE_7+0x7d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45a8:	69 a9       	ldd	r22, Y+49	; 0x31
    45aa:	7a a9       	ldd	r23, Y+50	; 0x32
    45ac:	8b a9       	ldd	r24, Y+51	; 0x33
    45ae:	9c a9       	ldd	r25, Y+52	; 0x34
    45b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45b4:	dc 01       	movw	r26, r24
    45b6:	cb 01       	movw	r24, r22
    45b8:	98 ab       	std	Y+48, r25	; 0x30
    45ba:	8f a7       	std	Y+47, r24	; 0x2f
    45bc:	8f a5       	ldd	r24, Y+47	; 0x2f
    45be:	98 a9       	ldd	r25, Y+48	; 0x30
    45c0:	9c a7       	std	Y+44, r25	; 0x2c
    45c2:	8b a7       	std	Y+43, r24	; 0x2b
    45c4:	8b a5       	ldd	r24, Y+43	; 0x2b
    45c6:	9c a5       	ldd	r25, Y+44	; 0x2c
    45c8:	01 97       	sbiw	r24, 0x01	; 1
    45ca:	f1 f7       	brne	.-4      	; 0x45c8 <MODE_7+0x7c8>
    45cc:	9c a7       	std	Y+44, r25	; 0x2c
    45ce:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED7, ON);
    45d0:	86 e0       	ldi	r24, 0x06	; 6
    45d2:	61 e0       	ldi	r22, 0x01	; 1
    45d4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    45d8:	80 e0       	ldi	r24, 0x00	; 0
    45da:	90 e0       	ldi	r25, 0x00	; 0
    45dc:	a8 e4       	ldi	r26, 0x48	; 72
    45de:	b2 e4       	ldi	r27, 0x42	; 66
    45e0:	8f a3       	std	Y+39, r24	; 0x27
    45e2:	98 a7       	std	Y+40, r25	; 0x28
    45e4:	a9 a7       	std	Y+41, r26	; 0x29
    45e6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45e8:	6f a1       	ldd	r22, Y+39	; 0x27
    45ea:	78 a5       	ldd	r23, Y+40	; 0x28
    45ec:	89 a5       	ldd	r24, Y+41	; 0x29
    45ee:	9a a5       	ldd	r25, Y+42	; 0x2a
    45f0:	20 e0       	ldi	r18, 0x00	; 0
    45f2:	30 e0       	ldi	r19, 0x00	; 0
    45f4:	4a ef       	ldi	r20, 0xFA	; 250
    45f6:	54 e4       	ldi	r21, 0x44	; 68
    45f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45fc:	dc 01       	movw	r26, r24
    45fe:	cb 01       	movw	r24, r22
    4600:	8b a3       	std	Y+35, r24	; 0x23
    4602:	9c a3       	std	Y+36, r25	; 0x24
    4604:	ad a3       	std	Y+37, r26	; 0x25
    4606:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4608:	6b a1       	ldd	r22, Y+35	; 0x23
    460a:	7c a1       	ldd	r23, Y+36	; 0x24
    460c:	8d a1       	ldd	r24, Y+37	; 0x25
    460e:	9e a1       	ldd	r25, Y+38	; 0x26
    4610:	20 e0       	ldi	r18, 0x00	; 0
    4612:	30 e0       	ldi	r19, 0x00	; 0
    4614:	40 e8       	ldi	r20, 0x80	; 128
    4616:	5f e3       	ldi	r21, 0x3F	; 63
    4618:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    461c:	88 23       	and	r24, r24
    461e:	2c f4       	brge	.+10     	; 0x462a <MODE_7+0x82a>
		__ticks = 1;
    4620:	81 e0       	ldi	r24, 0x01	; 1
    4622:	90 e0       	ldi	r25, 0x00	; 0
    4624:	9a a3       	std	Y+34, r25	; 0x22
    4626:	89 a3       	std	Y+33, r24	; 0x21
    4628:	3f c0       	rjmp	.+126    	; 0x46a8 <MODE_7+0x8a8>
	else if (__tmp > 65535)
    462a:	6b a1       	ldd	r22, Y+35	; 0x23
    462c:	7c a1       	ldd	r23, Y+36	; 0x24
    462e:	8d a1       	ldd	r24, Y+37	; 0x25
    4630:	9e a1       	ldd	r25, Y+38	; 0x26
    4632:	20 e0       	ldi	r18, 0x00	; 0
    4634:	3f ef       	ldi	r19, 0xFF	; 255
    4636:	4f e7       	ldi	r20, 0x7F	; 127
    4638:	57 e4       	ldi	r21, 0x47	; 71
    463a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    463e:	18 16       	cp	r1, r24
    4640:	4c f5       	brge	.+82     	; 0x4694 <MODE_7+0x894>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4642:	6f a1       	ldd	r22, Y+39	; 0x27
    4644:	78 a5       	ldd	r23, Y+40	; 0x28
    4646:	89 a5       	ldd	r24, Y+41	; 0x29
    4648:	9a a5       	ldd	r25, Y+42	; 0x2a
    464a:	20 e0       	ldi	r18, 0x00	; 0
    464c:	30 e0       	ldi	r19, 0x00	; 0
    464e:	40 e2       	ldi	r20, 0x20	; 32
    4650:	51 e4       	ldi	r21, 0x41	; 65
    4652:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4656:	dc 01       	movw	r26, r24
    4658:	cb 01       	movw	r24, r22
    465a:	bc 01       	movw	r22, r24
    465c:	cd 01       	movw	r24, r26
    465e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4662:	dc 01       	movw	r26, r24
    4664:	cb 01       	movw	r24, r22
    4666:	9a a3       	std	Y+34, r25	; 0x22
    4668:	89 a3       	std	Y+33, r24	; 0x21
    466a:	0f c0       	rjmp	.+30     	; 0x468a <MODE_7+0x88a>
    466c:	88 ec       	ldi	r24, 0xC8	; 200
    466e:	90 e0       	ldi	r25, 0x00	; 0
    4670:	98 a3       	std	Y+32, r25	; 0x20
    4672:	8f 8f       	std	Y+31, r24	; 0x1f
    4674:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4676:	98 a1       	ldd	r25, Y+32	; 0x20
    4678:	01 97       	sbiw	r24, 0x01	; 1
    467a:	f1 f7       	brne	.-4      	; 0x4678 <MODE_7+0x878>
    467c:	98 a3       	std	Y+32, r25	; 0x20
    467e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4680:	89 a1       	ldd	r24, Y+33	; 0x21
    4682:	9a a1       	ldd	r25, Y+34	; 0x22
    4684:	01 97       	sbiw	r24, 0x01	; 1
    4686:	9a a3       	std	Y+34, r25	; 0x22
    4688:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    468a:	89 a1       	ldd	r24, Y+33	; 0x21
    468c:	9a a1       	ldd	r25, Y+34	; 0x22
    468e:	00 97       	sbiw	r24, 0x00	; 0
    4690:	69 f7       	brne	.-38     	; 0x466c <MODE_7+0x86c>
    4692:	14 c0       	rjmp	.+40     	; 0x46bc <MODE_7+0x8bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4694:	6b a1       	ldd	r22, Y+35	; 0x23
    4696:	7c a1       	ldd	r23, Y+36	; 0x24
    4698:	8d a1       	ldd	r24, Y+37	; 0x25
    469a:	9e a1       	ldd	r25, Y+38	; 0x26
    469c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    46a0:	dc 01       	movw	r26, r24
    46a2:	cb 01       	movw	r24, r22
    46a4:	9a a3       	std	Y+34, r25	; 0x22
    46a6:	89 a3       	std	Y+33, r24	; 0x21
    46a8:	89 a1       	ldd	r24, Y+33	; 0x21
    46aa:	9a a1       	ldd	r25, Y+34	; 0x22
    46ac:	9e 8f       	std	Y+30, r25	; 0x1e
    46ae:	8d 8f       	std	Y+29, r24	; 0x1d
    46b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46b2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    46b4:	01 97       	sbiw	r24, 0x01	; 1
    46b6:	f1 f7       	brne	.-4      	; 0x46b4 <MODE_7+0x8b4>
    46b8:	9e 8f       	std	Y+30, r25	; 0x1e
    46ba:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(DELAY_IN_BETWEEN);
	LED_CTRL(LED8, ON);
    46bc:	87 e0       	ldi	r24, 0x07	; 7
    46be:	61 e0       	ldi	r22, 0x01	; 1
    46c0:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <LED_CTRL>
    46c4:	80 e0       	ldi	r24, 0x00	; 0
    46c6:	90 e0       	ldi	r25, 0x00	; 0
    46c8:	a8 e4       	ldi	r26, 0x48	; 72
    46ca:	b2 e4       	ldi	r27, 0x42	; 66
    46cc:	89 8f       	std	Y+25, r24	; 0x19
    46ce:	9a 8f       	std	Y+26, r25	; 0x1a
    46d0:	ab 8f       	std	Y+27, r26	; 0x1b
    46d2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46d4:	69 8d       	ldd	r22, Y+25	; 0x19
    46d6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    46d8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    46da:	9c 8d       	ldd	r25, Y+28	; 0x1c
    46dc:	20 e0       	ldi	r18, 0x00	; 0
    46de:	30 e0       	ldi	r19, 0x00	; 0
    46e0:	4a ef       	ldi	r20, 0xFA	; 250
    46e2:	54 e4       	ldi	r21, 0x44	; 68
    46e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46e8:	dc 01       	movw	r26, r24
    46ea:	cb 01       	movw	r24, r22
    46ec:	8d 8b       	std	Y+21, r24	; 0x15
    46ee:	9e 8b       	std	Y+22, r25	; 0x16
    46f0:	af 8b       	std	Y+23, r26	; 0x17
    46f2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    46f4:	6d 89       	ldd	r22, Y+21	; 0x15
    46f6:	7e 89       	ldd	r23, Y+22	; 0x16
    46f8:	8f 89       	ldd	r24, Y+23	; 0x17
    46fa:	98 8d       	ldd	r25, Y+24	; 0x18
    46fc:	20 e0       	ldi	r18, 0x00	; 0
    46fe:	30 e0       	ldi	r19, 0x00	; 0
    4700:	40 e8       	ldi	r20, 0x80	; 128
    4702:	5f e3       	ldi	r21, 0x3F	; 63
    4704:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4708:	88 23       	and	r24, r24
    470a:	2c f4       	brge	.+10     	; 0x4716 <MODE_7+0x916>
		__ticks = 1;
    470c:	81 e0       	ldi	r24, 0x01	; 1
    470e:	90 e0       	ldi	r25, 0x00	; 0
    4710:	9c 8b       	std	Y+20, r25	; 0x14
    4712:	8b 8b       	std	Y+19, r24	; 0x13
    4714:	3f c0       	rjmp	.+126    	; 0x4794 <MODE_7+0x994>
	else if (__tmp > 65535)
    4716:	6d 89       	ldd	r22, Y+21	; 0x15
    4718:	7e 89       	ldd	r23, Y+22	; 0x16
    471a:	8f 89       	ldd	r24, Y+23	; 0x17
    471c:	98 8d       	ldd	r25, Y+24	; 0x18
    471e:	20 e0       	ldi	r18, 0x00	; 0
    4720:	3f ef       	ldi	r19, 0xFF	; 255
    4722:	4f e7       	ldi	r20, 0x7F	; 127
    4724:	57 e4       	ldi	r21, 0x47	; 71
    4726:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    472a:	18 16       	cp	r1, r24
    472c:	4c f5       	brge	.+82     	; 0x4780 <MODE_7+0x980>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    472e:	69 8d       	ldd	r22, Y+25	; 0x19
    4730:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4732:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4734:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4736:	20 e0       	ldi	r18, 0x00	; 0
    4738:	30 e0       	ldi	r19, 0x00	; 0
    473a:	40 e2       	ldi	r20, 0x20	; 32
    473c:	51 e4       	ldi	r21, 0x41	; 65
    473e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4742:	dc 01       	movw	r26, r24
    4744:	cb 01       	movw	r24, r22
    4746:	bc 01       	movw	r22, r24
    4748:	cd 01       	movw	r24, r26
    474a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    474e:	dc 01       	movw	r26, r24
    4750:	cb 01       	movw	r24, r22
    4752:	9c 8b       	std	Y+20, r25	; 0x14
    4754:	8b 8b       	std	Y+19, r24	; 0x13
    4756:	0f c0       	rjmp	.+30     	; 0x4776 <MODE_7+0x976>
    4758:	88 ec       	ldi	r24, 0xC8	; 200
    475a:	90 e0       	ldi	r25, 0x00	; 0
    475c:	9a 8b       	std	Y+18, r25	; 0x12
    475e:	89 8b       	std	Y+17, r24	; 0x11
    4760:	89 89       	ldd	r24, Y+17	; 0x11
    4762:	9a 89       	ldd	r25, Y+18	; 0x12
    4764:	01 97       	sbiw	r24, 0x01	; 1
    4766:	f1 f7       	brne	.-4      	; 0x4764 <MODE_7+0x964>
    4768:	9a 8b       	std	Y+18, r25	; 0x12
    476a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    476c:	8b 89       	ldd	r24, Y+19	; 0x13
    476e:	9c 89       	ldd	r25, Y+20	; 0x14
    4770:	01 97       	sbiw	r24, 0x01	; 1
    4772:	9c 8b       	std	Y+20, r25	; 0x14
    4774:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4776:	8b 89       	ldd	r24, Y+19	; 0x13
    4778:	9c 89       	ldd	r25, Y+20	; 0x14
    477a:	00 97       	sbiw	r24, 0x00	; 0
    477c:	69 f7       	brne	.-38     	; 0x4758 <MODE_7+0x958>
    477e:	14 c0       	rjmp	.+40     	; 0x47a8 <MODE_7+0x9a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4780:	6d 89       	ldd	r22, Y+21	; 0x15
    4782:	7e 89       	ldd	r23, Y+22	; 0x16
    4784:	8f 89       	ldd	r24, Y+23	; 0x17
    4786:	98 8d       	ldd	r25, Y+24	; 0x18
    4788:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    478c:	dc 01       	movw	r26, r24
    478e:	cb 01       	movw	r24, r22
    4790:	9c 8b       	std	Y+20, r25	; 0x14
    4792:	8b 8b       	std	Y+19, r24	; 0x13
    4794:	8b 89       	ldd	r24, Y+19	; 0x13
    4796:	9c 89       	ldd	r25, Y+20	; 0x14
    4798:	98 8b       	std	Y+16, r25	; 0x10
    479a:	8f 87       	std	Y+15, r24	; 0x0f
    479c:	8f 85       	ldd	r24, Y+15	; 0x0f
    479e:	98 89       	ldd	r25, Y+16	; 0x10
    47a0:	01 97       	sbiw	r24, 0x01	; 1
    47a2:	f1 f7       	brne	.-4      	; 0x47a0 <MODE_7+0x9a0>
    47a4:	98 8b       	std	Y+16, r25	; 0x10
    47a6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);

	REG_CLR(PORTA);
    47a8:	eb e3       	ldi	r30, 0x3B	; 59
    47aa:	f0 e0       	ldi	r31, 0x00	; 0
    47ac:	80 81       	ld	r24, Z
    47ae:	eb e3       	ldi	r30, 0x3B	; 59
    47b0:	f0 e0       	ldi	r31, 0x00	; 0
    47b2:	10 82       	st	Z, r1
    47b4:	80 e0       	ldi	r24, 0x00	; 0
    47b6:	90 e0       	ldi	r25, 0x00	; 0
    47b8:	a6 e9       	ldi	r26, 0x96	; 150
    47ba:	b3 e4       	ldi	r27, 0x43	; 67
    47bc:	8b 87       	std	Y+11, r24	; 0x0b
    47be:	9c 87       	std	Y+12, r25	; 0x0c
    47c0:	ad 87       	std	Y+13, r26	; 0x0d
    47c2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47c4:	6b 85       	ldd	r22, Y+11	; 0x0b
    47c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    47c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    47ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    47cc:	20 e0       	ldi	r18, 0x00	; 0
    47ce:	30 e0       	ldi	r19, 0x00	; 0
    47d0:	4a ef       	ldi	r20, 0xFA	; 250
    47d2:	54 e4       	ldi	r21, 0x44	; 68
    47d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47d8:	dc 01       	movw	r26, r24
    47da:	cb 01       	movw	r24, r22
    47dc:	8f 83       	std	Y+7, r24	; 0x07
    47de:	98 87       	std	Y+8, r25	; 0x08
    47e0:	a9 87       	std	Y+9, r26	; 0x09
    47e2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    47e4:	6f 81       	ldd	r22, Y+7	; 0x07
    47e6:	78 85       	ldd	r23, Y+8	; 0x08
    47e8:	89 85       	ldd	r24, Y+9	; 0x09
    47ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    47ec:	20 e0       	ldi	r18, 0x00	; 0
    47ee:	30 e0       	ldi	r19, 0x00	; 0
    47f0:	40 e8       	ldi	r20, 0x80	; 128
    47f2:	5f e3       	ldi	r21, 0x3F	; 63
    47f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    47f8:	88 23       	and	r24, r24
    47fa:	2c f4       	brge	.+10     	; 0x4806 <MODE_7+0xa06>
		__ticks = 1;
    47fc:	81 e0       	ldi	r24, 0x01	; 1
    47fe:	90 e0       	ldi	r25, 0x00	; 0
    4800:	9e 83       	std	Y+6, r25	; 0x06
    4802:	8d 83       	std	Y+5, r24	; 0x05
    4804:	3f c0       	rjmp	.+126    	; 0x4884 <MODE_7+0xa84>
	else if (__tmp > 65535)
    4806:	6f 81       	ldd	r22, Y+7	; 0x07
    4808:	78 85       	ldd	r23, Y+8	; 0x08
    480a:	89 85       	ldd	r24, Y+9	; 0x09
    480c:	9a 85       	ldd	r25, Y+10	; 0x0a
    480e:	20 e0       	ldi	r18, 0x00	; 0
    4810:	3f ef       	ldi	r19, 0xFF	; 255
    4812:	4f e7       	ldi	r20, 0x7F	; 127
    4814:	57 e4       	ldi	r21, 0x47	; 71
    4816:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    481a:	18 16       	cp	r1, r24
    481c:	4c f5       	brge	.+82     	; 0x4870 <MODE_7+0xa70>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    481e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4820:	7c 85       	ldd	r23, Y+12	; 0x0c
    4822:	8d 85       	ldd	r24, Y+13	; 0x0d
    4824:	9e 85       	ldd	r25, Y+14	; 0x0e
    4826:	20 e0       	ldi	r18, 0x00	; 0
    4828:	30 e0       	ldi	r19, 0x00	; 0
    482a:	40 e2       	ldi	r20, 0x20	; 32
    482c:	51 e4       	ldi	r21, 0x41	; 65
    482e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4832:	dc 01       	movw	r26, r24
    4834:	cb 01       	movw	r24, r22
    4836:	bc 01       	movw	r22, r24
    4838:	cd 01       	movw	r24, r26
    483a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    483e:	dc 01       	movw	r26, r24
    4840:	cb 01       	movw	r24, r22
    4842:	9e 83       	std	Y+6, r25	; 0x06
    4844:	8d 83       	std	Y+5, r24	; 0x05
    4846:	0f c0       	rjmp	.+30     	; 0x4866 <MODE_7+0xa66>
    4848:	88 ec       	ldi	r24, 0xC8	; 200
    484a:	90 e0       	ldi	r25, 0x00	; 0
    484c:	9c 83       	std	Y+4, r25	; 0x04
    484e:	8b 83       	std	Y+3, r24	; 0x03
    4850:	8b 81       	ldd	r24, Y+3	; 0x03
    4852:	9c 81       	ldd	r25, Y+4	; 0x04
    4854:	01 97       	sbiw	r24, 0x01	; 1
    4856:	f1 f7       	brne	.-4      	; 0x4854 <MODE_7+0xa54>
    4858:	9c 83       	std	Y+4, r25	; 0x04
    485a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    485c:	8d 81       	ldd	r24, Y+5	; 0x05
    485e:	9e 81       	ldd	r25, Y+6	; 0x06
    4860:	01 97       	sbiw	r24, 0x01	; 1
    4862:	9e 83       	std	Y+6, r25	; 0x06
    4864:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4866:	8d 81       	ldd	r24, Y+5	; 0x05
    4868:	9e 81       	ldd	r25, Y+6	; 0x06
    486a:	00 97       	sbiw	r24, 0x00	; 0
    486c:	69 f7       	brne	.-38     	; 0x4848 <MODE_7+0xa48>
    486e:	14 c0       	rjmp	.+40     	; 0x4898 <MODE_7+0xa98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4870:	6f 81       	ldd	r22, Y+7	; 0x07
    4872:	78 85       	ldd	r23, Y+8	; 0x08
    4874:	89 85       	ldd	r24, Y+9	; 0x09
    4876:	9a 85       	ldd	r25, Y+10	; 0x0a
    4878:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    487c:	dc 01       	movw	r26, r24
    487e:	cb 01       	movw	r24, r22
    4880:	9e 83       	std	Y+6, r25	; 0x06
    4882:	8d 83       	std	Y+5, r24	; 0x05
    4884:	8d 81       	ldd	r24, Y+5	; 0x05
    4886:	9e 81       	ldd	r25, Y+6	; 0x06
    4888:	9a 83       	std	Y+2, r25	; 0x02
    488a:	89 83       	std	Y+1, r24	; 0x01
    488c:	89 81       	ldd	r24, Y+1	; 0x01
    488e:	9a 81       	ldd	r25, Y+2	; 0x02
    4890:	01 97       	sbiw	r24, 0x01	; 1
    4892:	f1 f7       	brne	.-4      	; 0x4890 <MODE_7+0xa90>
    4894:	9a 83       	std	Y+2, r25	; 0x02
    4896:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_7 */
    4898:	c1 58       	subi	r28, 0x81	; 129
    489a:	df 4f       	sbci	r29, 0xFF	; 255
    489c:	0f b6       	in	r0, 0x3f	; 63
    489e:	f8 94       	cli
    48a0:	de bf       	out	0x3e, r29	; 62
    48a2:	0f be       	out	0x3f, r0	; 63
    48a4:	cd bf       	out	0x3d, r28	; 61
    48a6:	cf 91       	pop	r28
    48a8:	df 91       	pop	r29
    48aa:	1f 91       	pop	r17
    48ac:	0f 91       	pop	r16
    48ae:	08 95       	ret

000048b0 <MODE_8>:
/**
 * @brief function to implement mode 8
 */
static void MODE_8(void)
{
    48b0:	df 93       	push	r29
    48b2:	cf 93       	push	r28
    48b4:	cd b7       	in	r28, 0x3d	; 61
    48b6:	de b7       	in	r29, 0x3e	; 62
    48b8:	6c 97       	sbiw	r28, 0x1c	; 28
    48ba:	0f b6       	in	r0, 0x3f	; 63
    48bc:	f8 94       	cli
    48be:	de bf       	out	0x3e, r29	; 62
    48c0:	0f be       	out	0x3f, r0	; 63
    48c2:	cd bf       	out	0x3d, r28	; 61
	MODE_4();
    48c4:	0e 94 87 14 	call	0x290e	; 0x290e <MODE_4>
    48c8:	80 e0       	ldi	r24, 0x00	; 0
    48ca:	90 e0       	ldi	r25, 0x00	; 0
    48cc:	a8 e4       	ldi	r26, 0x48	; 72
    48ce:	b2 e4       	ldi	r27, 0x42	; 66
    48d0:	89 8f       	std	Y+25, r24	; 0x19
    48d2:	9a 8f       	std	Y+26, r25	; 0x1a
    48d4:	ab 8f       	std	Y+27, r26	; 0x1b
    48d6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48d8:	69 8d       	ldd	r22, Y+25	; 0x19
    48da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    48dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    48de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    48e0:	20 e0       	ldi	r18, 0x00	; 0
    48e2:	30 e0       	ldi	r19, 0x00	; 0
    48e4:	4a ef       	ldi	r20, 0xFA	; 250
    48e6:	54 e4       	ldi	r21, 0x44	; 68
    48e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48ec:	dc 01       	movw	r26, r24
    48ee:	cb 01       	movw	r24, r22
    48f0:	8d 8b       	std	Y+21, r24	; 0x15
    48f2:	9e 8b       	std	Y+22, r25	; 0x16
    48f4:	af 8b       	std	Y+23, r26	; 0x17
    48f6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    48f8:	6d 89       	ldd	r22, Y+21	; 0x15
    48fa:	7e 89       	ldd	r23, Y+22	; 0x16
    48fc:	8f 89       	ldd	r24, Y+23	; 0x17
    48fe:	98 8d       	ldd	r25, Y+24	; 0x18
    4900:	20 e0       	ldi	r18, 0x00	; 0
    4902:	30 e0       	ldi	r19, 0x00	; 0
    4904:	40 e8       	ldi	r20, 0x80	; 128
    4906:	5f e3       	ldi	r21, 0x3F	; 63
    4908:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    490c:	88 23       	and	r24, r24
    490e:	2c f4       	brge	.+10     	; 0x491a <MODE_8+0x6a>
		__ticks = 1;
    4910:	81 e0       	ldi	r24, 0x01	; 1
    4912:	90 e0       	ldi	r25, 0x00	; 0
    4914:	9c 8b       	std	Y+20, r25	; 0x14
    4916:	8b 8b       	std	Y+19, r24	; 0x13
    4918:	3f c0       	rjmp	.+126    	; 0x4998 <MODE_8+0xe8>
	else if (__tmp > 65535)
    491a:	6d 89       	ldd	r22, Y+21	; 0x15
    491c:	7e 89       	ldd	r23, Y+22	; 0x16
    491e:	8f 89       	ldd	r24, Y+23	; 0x17
    4920:	98 8d       	ldd	r25, Y+24	; 0x18
    4922:	20 e0       	ldi	r18, 0x00	; 0
    4924:	3f ef       	ldi	r19, 0xFF	; 255
    4926:	4f e7       	ldi	r20, 0x7F	; 127
    4928:	57 e4       	ldi	r21, 0x47	; 71
    492a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    492e:	18 16       	cp	r1, r24
    4930:	4c f5       	brge	.+82     	; 0x4984 <MODE_8+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4932:	69 8d       	ldd	r22, Y+25	; 0x19
    4934:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4936:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4938:	9c 8d       	ldd	r25, Y+28	; 0x1c
    493a:	20 e0       	ldi	r18, 0x00	; 0
    493c:	30 e0       	ldi	r19, 0x00	; 0
    493e:	40 e2       	ldi	r20, 0x20	; 32
    4940:	51 e4       	ldi	r21, 0x41	; 65
    4942:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4946:	dc 01       	movw	r26, r24
    4948:	cb 01       	movw	r24, r22
    494a:	bc 01       	movw	r22, r24
    494c:	cd 01       	movw	r24, r26
    494e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4952:	dc 01       	movw	r26, r24
    4954:	cb 01       	movw	r24, r22
    4956:	9c 8b       	std	Y+20, r25	; 0x14
    4958:	8b 8b       	std	Y+19, r24	; 0x13
    495a:	0f c0       	rjmp	.+30     	; 0x497a <MODE_8+0xca>
    495c:	88 ec       	ldi	r24, 0xC8	; 200
    495e:	90 e0       	ldi	r25, 0x00	; 0
    4960:	9a 8b       	std	Y+18, r25	; 0x12
    4962:	89 8b       	std	Y+17, r24	; 0x11
    4964:	89 89       	ldd	r24, Y+17	; 0x11
    4966:	9a 89       	ldd	r25, Y+18	; 0x12
    4968:	01 97       	sbiw	r24, 0x01	; 1
    496a:	f1 f7       	brne	.-4      	; 0x4968 <MODE_8+0xb8>
    496c:	9a 8b       	std	Y+18, r25	; 0x12
    496e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4970:	8b 89       	ldd	r24, Y+19	; 0x13
    4972:	9c 89       	ldd	r25, Y+20	; 0x14
    4974:	01 97       	sbiw	r24, 0x01	; 1
    4976:	9c 8b       	std	Y+20, r25	; 0x14
    4978:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    497a:	8b 89       	ldd	r24, Y+19	; 0x13
    497c:	9c 89       	ldd	r25, Y+20	; 0x14
    497e:	00 97       	sbiw	r24, 0x00	; 0
    4980:	69 f7       	brne	.-38     	; 0x495c <MODE_8+0xac>
    4982:	14 c0       	rjmp	.+40     	; 0x49ac <MODE_8+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4984:	6d 89       	ldd	r22, Y+21	; 0x15
    4986:	7e 89       	ldd	r23, Y+22	; 0x16
    4988:	8f 89       	ldd	r24, Y+23	; 0x17
    498a:	98 8d       	ldd	r25, Y+24	; 0x18
    498c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4990:	dc 01       	movw	r26, r24
    4992:	cb 01       	movw	r24, r22
    4994:	9c 8b       	std	Y+20, r25	; 0x14
    4996:	8b 8b       	std	Y+19, r24	; 0x13
    4998:	8b 89       	ldd	r24, Y+19	; 0x13
    499a:	9c 89       	ldd	r25, Y+20	; 0x14
    499c:	98 8b       	std	Y+16, r25	; 0x10
    499e:	8f 87       	std	Y+15, r24	; 0x0f
    49a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    49a2:	98 89       	ldd	r25, Y+16	; 0x10
    49a4:	01 97       	sbiw	r24, 0x01	; 1
    49a6:	f1 f7       	brne	.-4      	; 0x49a4 <MODE_8+0xf4>
    49a8:	98 8b       	std	Y+16, r25	; 0x10
    49aa:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_IN_BETWEEN);
	MODE_5();
    49ac:	0e 94 46 19 	call	0x328c	; 0x328c <MODE_5>
    49b0:	80 e0       	ldi	r24, 0x00	; 0
    49b2:	90 e0       	ldi	r25, 0x00	; 0
    49b4:	a6 e9       	ldi	r26, 0x96	; 150
    49b6:	b3 e4       	ldi	r27, 0x43	; 67
    49b8:	8b 87       	std	Y+11, r24	; 0x0b
    49ba:	9c 87       	std	Y+12, r25	; 0x0c
    49bc:	ad 87       	std	Y+13, r26	; 0x0d
    49be:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    49c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    49c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    49c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    49c8:	20 e0       	ldi	r18, 0x00	; 0
    49ca:	30 e0       	ldi	r19, 0x00	; 0
    49cc:	4a ef       	ldi	r20, 0xFA	; 250
    49ce:	54 e4       	ldi	r21, 0x44	; 68
    49d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49d4:	dc 01       	movw	r26, r24
    49d6:	cb 01       	movw	r24, r22
    49d8:	8f 83       	std	Y+7, r24	; 0x07
    49da:	98 87       	std	Y+8, r25	; 0x08
    49dc:	a9 87       	std	Y+9, r26	; 0x09
    49de:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    49e0:	6f 81       	ldd	r22, Y+7	; 0x07
    49e2:	78 85       	ldd	r23, Y+8	; 0x08
    49e4:	89 85       	ldd	r24, Y+9	; 0x09
    49e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    49e8:	20 e0       	ldi	r18, 0x00	; 0
    49ea:	30 e0       	ldi	r19, 0x00	; 0
    49ec:	40 e8       	ldi	r20, 0x80	; 128
    49ee:	5f e3       	ldi	r21, 0x3F	; 63
    49f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    49f4:	88 23       	and	r24, r24
    49f6:	2c f4       	brge	.+10     	; 0x4a02 <MODE_8+0x152>
		__ticks = 1;
    49f8:	81 e0       	ldi	r24, 0x01	; 1
    49fa:	90 e0       	ldi	r25, 0x00	; 0
    49fc:	9e 83       	std	Y+6, r25	; 0x06
    49fe:	8d 83       	std	Y+5, r24	; 0x05
    4a00:	3f c0       	rjmp	.+126    	; 0x4a80 <MODE_8+0x1d0>
	else if (__tmp > 65535)
    4a02:	6f 81       	ldd	r22, Y+7	; 0x07
    4a04:	78 85       	ldd	r23, Y+8	; 0x08
    4a06:	89 85       	ldd	r24, Y+9	; 0x09
    4a08:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a0a:	20 e0       	ldi	r18, 0x00	; 0
    4a0c:	3f ef       	ldi	r19, 0xFF	; 255
    4a0e:	4f e7       	ldi	r20, 0x7F	; 127
    4a10:	57 e4       	ldi	r21, 0x47	; 71
    4a12:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a16:	18 16       	cp	r1, r24
    4a18:	4c f5       	brge	.+82     	; 0x4a6c <MODE_8+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a1a:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a1c:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a20:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a22:	20 e0       	ldi	r18, 0x00	; 0
    4a24:	30 e0       	ldi	r19, 0x00	; 0
    4a26:	40 e2       	ldi	r20, 0x20	; 32
    4a28:	51 e4       	ldi	r21, 0x41	; 65
    4a2a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a2e:	dc 01       	movw	r26, r24
    4a30:	cb 01       	movw	r24, r22
    4a32:	bc 01       	movw	r22, r24
    4a34:	cd 01       	movw	r24, r26
    4a36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a3a:	dc 01       	movw	r26, r24
    4a3c:	cb 01       	movw	r24, r22
    4a3e:	9e 83       	std	Y+6, r25	; 0x06
    4a40:	8d 83       	std	Y+5, r24	; 0x05
    4a42:	0f c0       	rjmp	.+30     	; 0x4a62 <MODE_8+0x1b2>
    4a44:	88 ec       	ldi	r24, 0xC8	; 200
    4a46:	90 e0       	ldi	r25, 0x00	; 0
    4a48:	9c 83       	std	Y+4, r25	; 0x04
    4a4a:	8b 83       	std	Y+3, r24	; 0x03
    4a4c:	8b 81       	ldd	r24, Y+3	; 0x03
    4a4e:	9c 81       	ldd	r25, Y+4	; 0x04
    4a50:	01 97       	sbiw	r24, 0x01	; 1
    4a52:	f1 f7       	brne	.-4      	; 0x4a50 <MODE_8+0x1a0>
    4a54:	9c 83       	std	Y+4, r25	; 0x04
    4a56:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a58:	8d 81       	ldd	r24, Y+5	; 0x05
    4a5a:	9e 81       	ldd	r25, Y+6	; 0x06
    4a5c:	01 97       	sbiw	r24, 0x01	; 1
    4a5e:	9e 83       	std	Y+6, r25	; 0x06
    4a60:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a62:	8d 81       	ldd	r24, Y+5	; 0x05
    4a64:	9e 81       	ldd	r25, Y+6	; 0x06
    4a66:	00 97       	sbiw	r24, 0x00	; 0
    4a68:	69 f7       	brne	.-38     	; 0x4a44 <MODE_8+0x194>
    4a6a:	14 c0       	rjmp	.+40     	; 0x4a94 <MODE_8+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a6c:	6f 81       	ldd	r22, Y+7	; 0x07
    4a6e:	78 85       	ldd	r23, Y+8	; 0x08
    4a70:	89 85       	ldd	r24, Y+9	; 0x09
    4a72:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a78:	dc 01       	movw	r26, r24
    4a7a:	cb 01       	movw	r24, r22
    4a7c:	9e 83       	std	Y+6, r25	; 0x06
    4a7e:	8d 83       	std	Y+5, r24	; 0x05
    4a80:	8d 81       	ldd	r24, Y+5	; 0x05
    4a82:	9e 81       	ldd	r25, Y+6	; 0x06
    4a84:	9a 83       	std	Y+2, r25	; 0x02
    4a86:	89 83       	std	Y+1, r24	; 0x01
    4a88:	89 81       	ldd	r24, Y+1	; 0x01
    4a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    4a8c:	01 97       	sbiw	r24, 0x01	; 1
    4a8e:	f1 f7       	brne	.-4      	; 0x4a8c <MODE_8+0x1dc>
    4a90:	9a 83       	std	Y+2, r25	; 0x02
    4a92:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(300);
}/** @end MODE_8 */
    4a94:	6c 96       	adiw	r28, 0x1c	; 28
    4a96:	0f b6       	in	r0, 0x3f	; 63
    4a98:	f8 94       	cli
    4a9a:	de bf       	out	0x3e, r29	; 62
    4a9c:	0f be       	out	0x3f, r0	; 63
    4a9e:	cd bf       	out	0x3d, r28	; 61
    4aa0:	cf 91       	pop	r28
    4aa2:	df 91       	pop	r29
    4aa4:	08 95       	ret

00004aa6 <MODE>:

/**
 * @brief functino to select between modes
 */
void MODE(cu8 MODE_SELECT)
{
    4aa6:	df 93       	push	r29
    4aa8:	cf 93       	push	r28
    4aaa:	00 d0       	rcall	.+0      	; 0x4aac <MODE+0x6>
    4aac:	0f 92       	push	r0
    4aae:	cd b7       	in	r28, 0x3d	; 61
    4ab0:	de b7       	in	r29, 0x3e	; 62
    4ab2:	89 83       	std	Y+1, r24	; 0x01
	switch(MODE_SELECT)
    4ab4:	89 81       	ldd	r24, Y+1	; 0x01
    4ab6:	28 2f       	mov	r18, r24
    4ab8:	30 e0       	ldi	r19, 0x00	; 0
    4aba:	3b 83       	std	Y+3, r19	; 0x03
    4abc:	2a 83       	std	Y+2, r18	; 0x02
    4abe:	8a 81       	ldd	r24, Y+2	; 0x02
    4ac0:	9b 81       	ldd	r25, Y+3	; 0x03
    4ac2:	83 30       	cpi	r24, 0x03	; 3
    4ac4:	91 05       	cpc	r25, r1
    4ac6:	91 f1       	breq	.+100    	; 0x4b2c <MODE+0x86>
    4ac8:	2a 81       	ldd	r18, Y+2	; 0x02
    4aca:	3b 81       	ldd	r19, Y+3	; 0x03
    4acc:	24 30       	cpi	r18, 0x04	; 4
    4ace:	31 05       	cpc	r19, r1
    4ad0:	7c f4       	brge	.+30     	; 0x4af0 <MODE+0x4a>
    4ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ad4:	9b 81       	ldd	r25, Y+3	; 0x03
    4ad6:	81 30       	cpi	r24, 0x01	; 1
    4ad8:	91 05       	cpc	r25, r1
    4ada:	11 f1       	breq	.+68     	; 0x4b20 <MODE+0x7a>
    4adc:	2a 81       	ldd	r18, Y+2	; 0x02
    4ade:	3b 81       	ldd	r19, Y+3	; 0x03
    4ae0:	22 30       	cpi	r18, 0x02	; 2
    4ae2:	31 05       	cpc	r19, r1
    4ae4:	04 f5       	brge	.+64     	; 0x4b26 <MODE+0x80>
    4ae6:	8a 81       	ldd	r24, Y+2	; 0x02
    4ae8:	9b 81       	ldd	r25, Y+3	; 0x03
    4aea:	00 97       	sbiw	r24, 0x00	; 0
    4aec:	b1 f0       	breq	.+44     	; 0x4b1a <MODE+0x74>
    4aee:	2c c0       	rjmp	.+88     	; 0x4b48 <MODE+0xa2>
    4af0:	2a 81       	ldd	r18, Y+2	; 0x02
    4af2:	3b 81       	ldd	r19, Y+3	; 0x03
    4af4:	25 30       	cpi	r18, 0x05	; 5
    4af6:	31 05       	cpc	r19, r1
    4af8:	f9 f0       	breq	.+62     	; 0x4b38 <MODE+0x92>
    4afa:	8a 81       	ldd	r24, Y+2	; 0x02
    4afc:	9b 81       	ldd	r25, Y+3	; 0x03
    4afe:	85 30       	cpi	r24, 0x05	; 5
    4b00:	91 05       	cpc	r25, r1
    4b02:	bc f0       	brlt	.+46     	; 0x4b32 <MODE+0x8c>
    4b04:	2a 81       	ldd	r18, Y+2	; 0x02
    4b06:	3b 81       	ldd	r19, Y+3	; 0x03
    4b08:	26 30       	cpi	r18, 0x06	; 6
    4b0a:	31 05       	cpc	r19, r1
    4b0c:	c1 f0       	breq	.+48     	; 0x4b3e <MODE+0x98>
    4b0e:	8a 81       	ldd	r24, Y+2	; 0x02
    4b10:	9b 81       	ldd	r25, Y+3	; 0x03
    4b12:	87 30       	cpi	r24, 0x07	; 7
    4b14:	91 05       	cpc	r25, r1
    4b16:	b1 f0       	breq	.+44     	; 0x4b44 <MODE+0x9e>
    4b18:	17 c0       	rjmp	.+46     	; 0x4b48 <MODE+0xa2>
	{
		case MODE1: MODE_1();
    4b1a:	0e 94 9f 08 	call	0x113e	; 0x113e <MODE_1>
    4b1e:	14 c0       	rjmp	.+40     	; 0x4b48 <MODE+0xa2>
			break;
		case MODE2: MODE_2();
    4b20:	0e 94 a3 09 	call	0x1346	; 0x1346 <MODE_2>
    4b24:	11 c0       	rjmp	.+34     	; 0x4b48 <MODE+0xa2>
			break;
		case MODE3: MODE_3();
    4b26:	0e 94 15 0f 	call	0x1e2a	; 0x1e2a <MODE_3>
    4b2a:	0e c0       	rjmp	.+28     	; 0x4b48 <MODE+0xa2>
			break;
		case MODE4: MODE_4();
    4b2c:	0e 94 87 14 	call	0x290e	; 0x290e <MODE_4>
    4b30:	0b c0       	rjmp	.+22     	; 0x4b48 <MODE+0xa2>
			break;
		case MODE5: MODE_5();
    4b32:	0e 94 46 19 	call	0x328c	; 0x328c <MODE_5>
    4b36:	08 c0       	rjmp	.+16     	; 0x4b48 <MODE+0xa2>
			break;
		case MODE6: MODE_6();
    4b38:	0e 94 05 1e 	call	0x3c0a	; 0x3c0a <MODE_6>
    4b3c:	05 c0       	rjmp	.+10     	; 0x4b48 <MODE+0xa2>
			break;
		case MODE7: MODE_7();
    4b3e:	0e 94 00 1f 	call	0x3e00	; 0x3e00 <MODE_7>
    4b42:	02 c0       	rjmp	.+4      	; 0x4b48 <MODE+0xa2>
			break;
		case MODE8: MODE_8();
    4b44:	0e 94 58 24 	call	0x48b0	; 0x48b0 <MODE_8>
			break;
		default: return;
	}
}/** @end MODE */
    4b48:	0f 90       	pop	r0
    4b4a:	0f 90       	pop	r0
    4b4c:	0f 90       	pop	r0
    4b4e:	cf 91       	pop	r28
    4b50:	df 91       	pop	r29
    4b52:	08 95       	ret

00004b54 <main>:
/**
 * @brief main entry point.
 * @return int.
 */
int main(void)
{
    4b54:	df 93       	push	r29
    4b56:	cf 93       	push	r28
    4b58:	00 d0       	rcall	.+0      	; 0x4b5a <main+0x6>
    4b5a:	0f 92       	push	r0
    4b5c:	cd b7       	in	r28, 0x3d	; 61
    4b5e:	de b7       	in	r29, 0x3e	; 62
	//SYS_INIT();

	REG_SET(DDRA);
    4b60:	ea e3       	ldi	r30, 0x3A	; 58
    4b62:	f0 e0       	ldi	r31, 0x00	; 0
    4b64:	80 81       	ld	r24, Z
    4b66:	ea e3       	ldi	r30, 0x3A	; 58
    4b68:	f0 e0       	ldi	r31, 0x00	; 0
    4b6a:	8f ef       	ldi	r24, 0xFF	; 255
    4b6c:	80 83       	st	Z, r24
	REG_CLR(PORTA);
    4b6e:	eb e3       	ldi	r30, 0x3B	; 59
    4b70:	f0 e0       	ldi	r31, 0x00	; 0
    4b72:	80 81       	ld	r24, Z
    4b74:	eb e3       	ldi	r30, 0x3B	; 59
    4b76:	f0 e0       	ldi	r31, 0x00	; 0
    4b78:	10 82       	st	Z, r1

	BIT_SET(PORTB, PB0);
    4b7a:	a8 e3       	ldi	r26, 0x38	; 56
    4b7c:	b0 e0       	ldi	r27, 0x00	; 0
    4b7e:	e8 e3       	ldi	r30, 0x38	; 56
    4b80:	f0 e0       	ldi	r31, 0x00	; 0
    4b82:	80 81       	ld	r24, Z
    4b84:	81 60       	ori	r24, 0x01	; 1
    4b86:	8c 93       	st	X, r24
	BIT_SET(PORTB, PB1);
    4b88:	a8 e3       	ldi	r26, 0x38	; 56
    4b8a:	b0 e0       	ldi	r27, 0x00	; 0
    4b8c:	e8 e3       	ldi	r30, 0x38	; 56
    4b8e:	f0 e0       	ldi	r31, 0x00	; 0
    4b90:	80 81       	ld	r24, Z
    4b92:	82 60       	ori	r24, 0x02	; 2
    4b94:	8c 93       	st	X, r24
	BIT_SET(PORTB, PB2);
    4b96:	a8 e3       	ldi	r26, 0x38	; 56
    4b98:	b0 e0       	ldi	r27, 0x00	; 0
    4b9a:	e8 e3       	ldi	r30, 0x38	; 56
    4b9c:	f0 e0       	ldi	r31, 0x00	; 0
    4b9e:	80 81       	ld	r24, Z
    4ba0:	84 60       	ori	r24, 0x04	; 4
    4ba2:	8c 93       	st	X, r24

	while(1)
	{
		//MODE_CTRL();
		if( (BIT_GET(PINB, PB1) == 0) )
    4ba4:	e6 e3       	ldi	r30, 0x36	; 54
    4ba6:	f0 e0       	ldi	r31, 0x00	; 0
    4ba8:	80 81       	ld	r24, Z
		{
			BIT_SET(PORTA, PA0);
    4baa:	ab e3       	ldi	r26, 0x3B	; 59
    4bac:	b0 e0       	ldi	r27, 0x00	; 0
    4bae:	eb e3       	ldi	r30, 0x3B	; 59
    4bb0:	f0 e0       	ldi	r31, 0x00	; 0
    4bb2:	80 81       	ld	r24, Z
    4bb4:	81 60       	ori	r24, 0x01	; 1
    4bb6:	8c 93       	st	X, r24
			BIT_SET(PORTA, PA1);
    4bb8:	ab e3       	ldi	r26, 0x3B	; 59
    4bba:	b0 e0       	ldi	r27, 0x00	; 0
    4bbc:	eb e3       	ldi	r30, 0x3B	; 59
    4bbe:	f0 e0       	ldi	r31, 0x00	; 0
    4bc0:	80 81       	ld	r24, Z
    4bc2:	82 60       	ori	r24, 0x02	; 2
    4bc4:	8c 93       	st	X, r24
    4bc6:	ee cf       	rjmp	.-36     	; 0x4ba4 <main+0x50>

00004bc8 <__prologue_saves__>:
    4bc8:	2f 92       	push	r2
    4bca:	3f 92       	push	r3
    4bcc:	4f 92       	push	r4
    4bce:	5f 92       	push	r5
    4bd0:	6f 92       	push	r6
    4bd2:	7f 92       	push	r7
    4bd4:	8f 92       	push	r8
    4bd6:	9f 92       	push	r9
    4bd8:	af 92       	push	r10
    4bda:	bf 92       	push	r11
    4bdc:	cf 92       	push	r12
    4bde:	df 92       	push	r13
    4be0:	ef 92       	push	r14
    4be2:	ff 92       	push	r15
    4be4:	0f 93       	push	r16
    4be6:	1f 93       	push	r17
    4be8:	cf 93       	push	r28
    4bea:	df 93       	push	r29
    4bec:	cd b7       	in	r28, 0x3d	; 61
    4bee:	de b7       	in	r29, 0x3e	; 62
    4bf0:	ca 1b       	sub	r28, r26
    4bf2:	db 0b       	sbc	r29, r27
    4bf4:	0f b6       	in	r0, 0x3f	; 63
    4bf6:	f8 94       	cli
    4bf8:	de bf       	out	0x3e, r29	; 62
    4bfa:	0f be       	out	0x3f, r0	; 63
    4bfc:	cd bf       	out	0x3d, r28	; 61
    4bfe:	09 94       	ijmp

00004c00 <__epilogue_restores__>:
    4c00:	2a 88       	ldd	r2, Y+18	; 0x12
    4c02:	39 88       	ldd	r3, Y+17	; 0x11
    4c04:	48 88       	ldd	r4, Y+16	; 0x10
    4c06:	5f 84       	ldd	r5, Y+15	; 0x0f
    4c08:	6e 84       	ldd	r6, Y+14	; 0x0e
    4c0a:	7d 84       	ldd	r7, Y+13	; 0x0d
    4c0c:	8c 84       	ldd	r8, Y+12	; 0x0c
    4c0e:	9b 84       	ldd	r9, Y+11	; 0x0b
    4c10:	aa 84       	ldd	r10, Y+10	; 0x0a
    4c12:	b9 84       	ldd	r11, Y+9	; 0x09
    4c14:	c8 84       	ldd	r12, Y+8	; 0x08
    4c16:	df 80       	ldd	r13, Y+7	; 0x07
    4c18:	ee 80       	ldd	r14, Y+6	; 0x06
    4c1a:	fd 80       	ldd	r15, Y+5	; 0x05
    4c1c:	0c 81       	ldd	r16, Y+4	; 0x04
    4c1e:	1b 81       	ldd	r17, Y+3	; 0x03
    4c20:	aa 81       	ldd	r26, Y+2	; 0x02
    4c22:	b9 81       	ldd	r27, Y+1	; 0x01
    4c24:	ce 0f       	add	r28, r30
    4c26:	d1 1d       	adc	r29, r1
    4c28:	0f b6       	in	r0, 0x3f	; 63
    4c2a:	f8 94       	cli
    4c2c:	de bf       	out	0x3e, r29	; 62
    4c2e:	0f be       	out	0x3f, r0	; 63
    4c30:	cd bf       	out	0x3d, r28	; 61
    4c32:	ed 01       	movw	r28, r26
    4c34:	08 95       	ret

00004c36 <_exit>:
    4c36:	f8 94       	cli

00004c38 <__stop_program>:
    4c38:	ff cf       	rjmp	.-2      	; 0x4c38 <__stop_program>
